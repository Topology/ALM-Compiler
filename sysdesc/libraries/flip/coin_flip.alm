system description coin_flip
theory coin_flip
    import abstract_flip.core from flip
    import name.core from abstract
    module us_coin
        depends on abstract_flip.core
        depends on name.core
        sort declarations
            coins:: flippable
        constant declarations
            penny, nickel, dime, quarter : coins
            heads(coins), tails(coins) : names
        function declarations
            fluents 
                defined
                    coin_side_showing: coins -> names
            
         axioms 
            state constraints 
                name_of(sideOne(penny)) = heads(penny).
                name_of(sideTwo(penny)) = tails(penny).
                name_of(sideOne(nickel)) = heads(nickel).
                name_of(sideTwo(nickel)) = tails(nickel).
                name_of(sideOne(dime)) = heads(dime).
                name_of(sideTwo(dime)) = tails(dime).
                name_of(sideOne(quarter)) = heads(quarter).
                name_of(sideTwo(quarter)) = tails(quarter).
                coin_side_showing(X) = Y if instance(X, coins), showing(X)=Z, name_of(Z) = Y. 
