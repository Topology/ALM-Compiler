% Answer Set 1 of 1
{
 instance(bob, agents), instance(john, agents), instance(new_york, points), instance(paris, points), instance(rome, points), instance(bob, things), instance(john, things), instance(new_york, universe), instance(paris, universe), instance(rome, universe), instance(go(john, new_york), moves), instance(go(bob, new_york), moves), instance(go(john, paris), moves), instance(go(bob, paris), moves), instance(go(john, rome), moves), instance(go(bob, rome), moves), instance(go(bob, paris, new_york), moves), instance(go(bob, rome, new_york), moves), instance(go(john, rome, new_york), moves), instance(go(john, paris, new_york), moves), instance(go(john, new_york, paris), moves), instance(go(bob, rome, paris), moves), instance(go(john, rome, paris), moves), instance(go(bob, new_york, paris), moves), instance(go(john, new_york, rome), moves), instance(go(bob, new_york, rome), moves), instance(go(bob, paris, rome), moves), instance(go(john, paris, rome), moves), instance(bob, universe), instance(john, universe), instance(go(john, new_york), actions), instance(go(bob, new_york), actions), instance(go(john, paris), actions), instance(go(bob, paris), actions), instance(go(john, rome), actions), instance(go(bob, rome), actions), instance(go(bob, paris, new_york), actions), instance(go(bob, rome, new_york), actions), instance(go(john, rome, new_york), actions), instance(go(john, paris, new_york), actions), instance(go(john, new_york, paris), actions), instance(go(bob, rome, paris), actions), instance(go(john, rome, paris), actions), instance(go(bob, new_york, paris), actions), instance(go(john, new_york, rome), actions), instance(go(bob, new_york, rome), actions), instance(go(bob, paris, rome), actions), instance(go(john, paris, rome), actions), instance(go(john, new_york), universe), instance(go(bob, new_york), universe), instance(go(john, paris), universe), instance(go(bob, paris), universe), instance(go(john, rome), universe), instance(go(bob, rome), universe), instance(go(bob, paris, new_york), universe), instance(go(bob, rome, new_york), universe), instance(go(john, rome, new_york), universe), instance(go(john, paris, new_york), universe), instance(go(john, new_york, paris), universe), instance(go(bob, rome, paris), universe), instance(go(john, rome, paris), universe), instance(go(bob, new_york, paris), universe), instance(go(john, new_york, rome), universe), instance(go(bob, new_york, rome), universe), instance(go(bob, paris, rome), universe), instance(go(john, paris, rome), universe), -instance(paris, timeStep), -instance(new_york, timeStep), -instance(go(john, new_york, paris), timeStep), -instance(go(john, rome), timeStep), -instance(go(bob, paris, new_york), timeStep), -instance(go(john, new_york, rome), timeStep), -instance(go(bob, rome), timeStep), -instance(go(bob, rome, paris), timeStep), -instance(go(john, paris), timeStep), -instance(rome, timeStep), -instance(go(bob, paris), timeStep), -instance(go(john, new_york), timeStep), -instance(false, timeStep), -instance(go(bob, rome, new_york), timeStep), -instance(go(bob, new_york, rome), timeStep), -instance(go(john, rome, paris), timeStep), -instance(go(bob, paris, rome), timeStep), -instance(go(john, rome, new_york), timeStep), -instance(bob, timeStep), -instance(go(john, paris, rome), timeStep), -instance(go(bob, new_york), timeStep), -instance(true, timeStep), -instance(john, timeStep), -instance(go(bob, new_york, paris), timeStep), -instance(go(john, paris, new_york), timeStep), -instance(paris, comparable_integers_subsort), -instance(new_york, comparable_integers_subsort), -instance(go(john, new_york, paris), comparable_integers_subsort), -instance(go(john, rome), comparable_integers_subsort), -instance(go(bob, paris, new_york), comparable_integers_subsort), -instance(go(john, new_york, rome), comparable_integers_subsort), -instance(go(bob, rome), comparable_integers_subsort), -instance(go(bob, rome, paris), comparable_integers_subsort), -instance(go(john, paris), comparable_integers_subsort), -instance(rome, comparable_integers_subsort), -instance(go(bob, paris), comparable_integers_subsort), -instance(go(john, new_york), comparable_integers_subsort), -instance(false, comparable_integers_subsort), -instance(go(bob, rome, new_york), comparable_integers_subsort), -instance(go(bob, new_york, rome), comparable_integers_subsort), -instance(go(john, rome, paris), comparable_integers_subsort), -instance(go(bob, paris, rome), comparable_integers_subsort), -instance(go(john, rome, new_york), comparable_integers_subsort), -instance(bob, comparable_integers_subsort), -instance(go(john, paris, rome), comparable_integers_subsort), -instance(go(bob, new_york), comparable_integers_subsort), -instance(true, comparable_integers_subsort), -instance(john, comparable_integers_subsort), -instance(go(bob, new_york, paris), comparable_integers_subsort), -instance(go(john, paris, new_york), comparable_integers_subsort), -instance(paris, moves), -instance(new_york, moves), -instance(rome, moves), -instance(false, moves), -instance(bob, moves), -instance(true, moves), -instance(john, moves), -instance(false, universe), -instance(true, universe), -instance(paris, things), -instance(new_york, things), -instance(go(john, new_york, paris), things), -instance(go(john, rome), things), -instance(go(bob, paris, new_york), things), -instance(go(john, new_york, rome), things), -instance(go(bob, rome), things), -instance(go(bob, rome, paris), things), -instance(go(john, paris), things), -instance(rome, things), -instance(go(bob, paris), things), -instance(go(john, new_york), things), -instance(false, things), -instance(go(bob, rome, new_york), things), -instance(go(bob, new_york, rome), things), -instance(go(john, rome, paris), things), -instance(go(bob, paris, rome), things), -instance(go(john, rome, new_york), things), -instance(go(john, paris, rome), things), -instance(go(bob, new_york), things), -instance(true, things), -instance(go(bob, new_york, paris), things), -instance(go(john, paris, new_york), things), -instance(paris, booleans), -instance(new_york, booleans), -instance(go(john, new_york, paris), booleans), -instance(go(john, rome), booleans), -instance(go(bob, paris, new_york), booleans), -instance(go(john, new_york, rome), booleans), -instance(go(bob, rome), booleans), -instance(go(bob, rome, paris), booleans), -instance(go(john, paris), booleans), -instance(rome, booleans), -instance(go(bob, paris), booleans), -instance(go(john, new_york), booleans), -instance(false, booleans), -instance(go(bob, rome, new_york), booleans), -instance(go(bob, new_york, rome), booleans), -instance(go(john, rome, paris), booleans), -instance(go(bob, paris, rome), booleans), -instance(go(john, rome, new_york), booleans), -instance(bob, booleans), -instance(go(john, paris, rome), booleans), -instance(go(bob, new_york), booleans), -instance(true, booleans), -instance(john, booleans), -instance(go(bob, new_york, paris), booleans), -instance(go(john, paris, new_york), booleans), -instance(paris, actions), -instance(new_york, actions), -instance(rome, actions), -instance(false, actions), -instance(bob, actions), -instance(true, actions), -instance(john, actions), -instance(paris, integers), -instance(new_york, integers), -instance(go(john, new_york, paris), integers), -instance(go(john, rome), integers), -instance(go(bob, paris, new_york), integers), -instance(go(john, new_york, rome), integers), -instance(go(bob, rome), integers), -instance(go(bob, rome, paris), integers), -instance(go(john, paris), integers), -instance(rome, integers), -instance(go(bob, paris), integers), -instance(go(john, new_york), integers), -instance(false, integers), -instance(go(bob, rome, new_york), integers), -instance(go(bob, new_york, rome), integers), -instance(go(john, rome, paris), integers), -instance(go(bob, paris, rome), integers), -instance(go(john, rome, new_york), integers), -instance(bob, integers), -instance(go(john, paris, rome), integers), -instance(go(bob, new_york), integers), -instance(true, integers), -instance(john, integers), -instance(go(bob, new_york, paris), integers), -instance(go(john, paris, new_york), integers), -instance(go(john, new_york, paris), points), -instance(go(john, rome), points), -instance(go(bob, paris, new_york), points), -instance(go(john, new_york, rome), points), -instance(go(bob, rome), points), -instance(go(bob, rome, paris), points), -instance(go(john, paris), points), -instance(go(bob, paris), points), -instance(go(john, new_york), points), -instance(false, points), -instance(go(bob, rome, new_york), points), -instance(go(bob, new_york, rome), points), -instance(go(john, rome, paris), points), -instance(go(bob, paris, rome), points), -instance(go(john, rome, new_york), points), -instance(bob, points), -instance(go(john, paris, rome), points), -instance(go(bob, new_york), points), -instance(true, points), -instance(john, points), -instance(go(bob, new_york, paris), points), -instance(go(john, paris, new_york), points), -instance(paris, agents), -instance(new_york, agents), -instance(go(john, new_york, paris), agents), -instance(go(john, rome), agents), -instance(go(bob, paris, new_york), agents), -instance(go(john, new_york, rome), agents), -instance(go(bob, rome), agents), -instance(go(bob, rome, paris), agents), -instance(go(john, paris), agents), -instance(rome, agents), -instance(go(bob, paris), agents), -instance(go(john, new_york), agents), -instance(false, agents), -instance(go(bob, rome, new_york), agents), -instance(go(bob, new_york, rome), agents), -instance(go(john, rome, paris), agents), -instance(go(bob, paris, rome), agents), -instance(go(john, rome, new_york), agents), -instance(go(john, paris, rome), agents), -instance(go(bob, new_york), agents), -instance(true, agents), -instance(go(bob, new_york, paris), agents), -instance(go(john, paris, new_york), agents)
,dom_moves_actor(go(bob, rome, new_york)), dom_moves_actor(go(bob, new_york, rome)), dom_moves_actor(go(bob, paris, rome)), dom_moves_actor(go(bob, paris, new_york)), dom_moves_actor(go(bob, rome, paris)), dom_moves_actor(go(bob, new_york, paris)), dom_moves_actor(go(bob, paris)), dom_moves_actor(go(bob, new_york)), dom_moves_actor(go(bob, rome)), dom_moves_actor(go(john, rome, paris)), dom_moves_actor(go(john, rome, new_york)), dom_moves_actor(go(john, new_york, paris)), dom_moves_actor(go(john, paris, rome)), dom_moves_actor(go(john, new_york, rome)), dom_moves_actor(go(john, paris, new_york)), dom_moves_actor(go(john, new_york)), dom_moves_actor(go(john, rome)), dom_moves_actor(go(john, paris))
,moves_dest(go(bob, rome, new_york), new_york), moves_dest(go(john, rome, paris), paris), moves_dest(go(john, rome, new_york), new_york), moves_dest(go(bob, rome, paris), paris), moves_dest(go(bob, paris, rome), rome), moves_dest(go(john, paris, rome), rome), moves_dest(go(bob, paris, new_york), new_york), moves_dest(go(john, paris, new_york), new_york), moves_dest(go(bob, new_york, rome), rome), moves_dest(go(john, new_york, paris), paris), moves_dest(go(john, new_york, rome), rome), moves_dest(go(bob, new_york, paris), paris), moves_dest(go(john, rome), rome), moves_dest(go(bob, rome), rome), moves_dest(go(bob, paris), paris), moves_dest(go(john, paris), paris), moves_dest(go(john, new_york), new_york), moves_dest(go(bob, new_york), new_york)
,link(integers, universe), link(actions, universe), link(moves, actions), link(things, universe), link(agents, things), link(points, universe), -link(timeStep, timeStep), -link(comparable_integers_subsort, timeStep), -link(moves, timeStep), -link(universe, timeStep), -link(things, timeStep), -link(booleans, timeStep), -link(actions, timeStep), -link(integers, timeStep), -link(points, timeStep), -link(agents, timeStep), -link(timeStep, comparable_integers_subsort), -link(comparable_integers_subsort, comparable_integers_subsort), -link(moves, comparable_integers_subsort), -link(universe, comparable_integers_subsort), -link(things, comparable_integers_subsort), -link(booleans, comparable_integers_subsort), -link(actions, comparable_integers_subsort), -link(integers, comparable_integers_subsort), -link(points, comparable_integers_subsort), -link(agents, comparable_integers_subsort), -link(timeStep, moves), -link(comparable_integers_subsort, moves), -link(moves, moves), -link(universe, moves), -link(things, moves), -link(booleans, moves), -link(actions, moves), -link(integers, moves), -link(points, moves), -link(agents, moves), -link(timeStep, universe), -link(comparable_integers_subsort, universe), -link(moves, universe), -link(universe, universe), -link(booleans, universe), -link(agents, universe), -link(timeStep, things), -link(comparable_integers_subsort, things), -link(moves, things), -link(universe, things), -link(things, things), -link(booleans, things), -link(actions, things), -link(integers, things), -link(points, things), -link(timeStep, booleans), -link(comparable_integers_subsort, booleans), -link(moves, booleans), -link(universe, booleans), -link(things, booleans), -link(booleans, booleans), -link(actions, booleans), -link(integers, booleans), -link(points, booleans), -link(agents, booleans), -link(timeStep, actions), -link(comparable_integers_subsort, actions), -link(universe, actions), -link(things, actions), -link(booleans, actions), -link(actions, actions), -link(integers, actions), -link(points, actions), -link(agents, actions), -link(timeStep, integers), -link(comparable_integers_subsort, integers), -link(moves, integers), -link(universe, integers), -link(things, integers), -link(booleans, integers), -link(actions, integers), -link(integers, integers), -link(points, integers), -link(agents, integers), -link(timeStep, points), -link(comparable_integers_subsort, points), -link(moves, points), -link(universe, points), -link(things, points), -link(booleans, points), -link(actions, points), -link(integers, points), -link(points, points), -link(agents, points), -link(timeStep, agents), -link(comparable_integers_subsort, agents), -link(moves, agents), -link(universe, agents), -link(things, agents), -link(booleans, agents), -link(actions, agents), -link(integers, agents), -link(points, agents), -link(agents, agents)
,source(timeStep), source(comparable_integers_subsort), source(moves), source(booleans), source(integers), source(points), source(agents), -source(universe), -source(things), -source(actions)
,occurs(go(john, paris, rome), 2)
,observed(loc_in(bob), new_york, 0), observed(loc_in(john), paris, 0), observed(connected(rome, rome), true, 0), observed(connected(rome, paris), true, 0), observed(connected(rome, new_york), true, 0), observed(connected(paris, rome), true, 0), observed(connected(paris, paris), true, 0), observed(connected(paris, new_york), true, 0), observed(connected(new_york, rome), true, 0), observed(connected(new_york, paris), true, 0), observed(connected(new_york, new_york), true, 0)
,moves_actor(go(bob, rome, new_york), bob), moves_actor(go(bob, new_york, rome), bob), moves_actor(go(bob, paris, rome), bob), moves_actor(go(bob, paris, new_york), bob), moves_actor(go(bob, rome, paris), bob), moves_actor(go(bob, new_york, paris), bob), moves_actor(go(john, rome, paris), john), moves_actor(go(john, rome, new_york), john), moves_actor(go(john, new_york, paris), john), moves_actor(go(john, paris, rome), john), moves_actor(go(john, new_york, rome), john), moves_actor(go(john, paris, new_york), john), moves_actor(go(bob, paris), bob), moves_actor(go(bob, new_york), bob), moves_actor(go(bob, rome), bob), moves_actor(go(john, new_york), john), moves_actor(go(john, rome), john), moves_actor(go(john, paris), john)
,loc_in(john, rome, 3), loc_in(bob, new_york, 0), loc_in(john, paris, 0), loc_in(john, rome, 4), loc_in(bob, new_york, 1), loc_in(john, paris, 1), loc_in(john, rome, 5), loc_in(bob, new_york, 2), loc_in(john, paris, 2), loc_in(bob, new_york, 3), loc_in(bob, new_york, 4), loc_in(bob, new_york, 5), -loc_in(bob, rome, 0), -loc_in(bob, paris, 0), -loc_in(bob, rome, 1), -loc_in(bob, paris, 1), -loc_in(bob, rome, 2), -loc_in(bob, paris, 2), -loc_in(bob, rome, 3), -loc_in(bob, paris, 3), -loc_in(bob, rome, 4), -loc_in(bob, paris, 4), -loc_in(bob, rome, 5), -loc_in(bob, paris, 5), -loc_in(john, paris, 3), -loc_in(john, new_york, 3), -loc_in(john, rome, 0), -loc_in(john, new_york, 0), -loc_in(john, paris, 4), -loc_in(john, new_york, 4), -loc_in(john, rome, 1), -loc_in(john, new_york, 1), -loc_in(john, paris, 5), -loc_in(john, new_york, 5), -loc_in(john, rome, 2), -loc_in(john, new_york, 2)
,-transitive_connectivity
,dom_connected(rome, rome, 0), dom_connected(rome, rome, 1), dom_connected(rome, rome, 2), dom_connected(rome, rome, 3), dom_connected(rome, rome, 4), dom_connected(rome, rome, 5), dom_connected(paris, paris, 0), dom_connected(paris, paris, 1), dom_connected(paris, paris, 2), dom_connected(paris, paris, 3), dom_connected(paris, paris, 4), dom_connected(paris, paris, 5), dom_connected(new_york, new_york, 0), dom_connected(new_york, new_york, 1), dom_connected(new_york, new_york, 2), dom_connected(new_york, new_york, 3), dom_connected(new_york, new_york, 4), dom_connected(new_york, new_york, 5), dom_connected(rome, paris, 0), dom_connected(rome, new_york, 0), dom_connected(paris, rome, 0), dom_connected(paris, new_york, 0), dom_connected(new_york, rome, 0), dom_connected(new_york, paris, 0), dom_connected(rome, paris, 1), dom_connected(rome, new_york, 1), dom_connected(paris, rome, 1), dom_connected(paris, new_york, 1), dom_connected(new_york, rome, 1), dom_connected(new_york, paris, 1), dom_connected(rome, paris, 2), dom_connected(rome, new_york, 2), dom_connected(paris, rome, 2), dom_connected(paris, new_york, 2), dom_connected(new_york, rome, 2), dom_connected(new_york, paris, 2), dom_connected(rome, paris, 3), dom_connected(rome, new_york, 3), dom_connected(paris, rome, 3), dom_connected(paris, new_york, 3), dom_connected(new_york, rome, 3), dom_connected(new_york, paris, 3), dom_connected(rome, paris, 4), dom_connected(rome, new_york, 4), dom_connected(paris, rome, 4), dom_connected(paris, new_york, 4), dom_connected(new_york, rome, 4), dom_connected(new_york, paris, 4), dom_connected(rome, paris, 5), dom_connected(rome, new_york, 5), dom_connected(paris, rome, 5), dom_connected(paris, new_york, 5), dom_connected(new_york, rome, 5), dom_connected(new_york, paris, 5)
,moves_origin(go(bob, rome, new_york), rome), moves_origin(go(john, rome, paris), rome), moves_origin(go(john, rome, new_york), rome), moves_origin(go(bob, rome, paris), rome), moves_origin(go(bob, paris, rome), paris), moves_origin(go(john, paris, rome), paris), moves_origin(go(bob, paris, new_york), paris), moves_origin(go(john, paris, new_york), paris), moves_origin(go(bob, new_york, rome), new_york), moves_origin(go(john, new_york, paris), new_york), moves_origin(go(john, new_york, rome), new_york), moves_origin(go(bob, new_york, paris), new_york)
,dom_symmetric_connectivity
,dom_loc_in(john, 3), dom_loc_in(bob, 0), dom_loc_in(john, 0), dom_loc_in(john, 4), dom_loc_in(bob, 1), dom_loc_in(john, 1), dom_loc_in(john, 5), dom_loc_in(bob, 2), dom_loc_in(john, 2), dom_loc_in(bob, 3), dom_loc_in(bob, 4), dom_loc_in(bob, 5)
,sink(timeStep), sink(comparable_integers_subsort), sink(universe), sink(booleans), -sink(moves), -sink(things), -sink(actions), -sink(integers), -sink(points), -sink(agents)
,has_parent(integers), has_parent(actions), has_parent(moves), has_parent(things), has_parent(agents), has_parent(points), -has_parent(timeStep), -has_parent(comparable_integers_subsort), -has_parent(universe), -has_parent(booleans)
,dom_moves_origin(go(bob, rome, new_york)), dom_moves_origin(go(john, rome, paris)), dom_moves_origin(go(john, rome, new_york)), dom_moves_origin(go(bob, rome, paris)), dom_moves_origin(go(bob, paris, rome)), dom_moves_origin(go(john, paris, rome)), dom_moves_origin(go(bob, paris, new_york)), dom_moves_origin(go(john, paris, new_york)), dom_moves_origin(go(bob, new_york, rome)), dom_moves_origin(go(john, new_york, paris)), dom_moves_origin(go(john, new_york, rome)), dom_moves_origin(go(bob, new_york, paris)), -dom_moves_origin(go(bob, paris)), -dom_moves_origin(go(john, new_york)), -dom_moves_origin(go(john, rome)), -dom_moves_origin(go(bob, new_york)), -dom_moves_origin(go(bob, rome)), -dom_moves_origin(go(john, paris))
,symmetric_connectivity
,happened(go(john, paris, rome), 2)
,connected(rome, rome, 0), connected(rome, rome, 1), connected(rome, rome, 2), connected(rome, rome, 3), connected(rome, rome, 4), connected(rome, rome, 5), connected(paris, paris, 0), connected(paris, paris, 1), connected(paris, paris, 2), connected(paris, paris, 3), connected(paris, paris, 4), connected(paris, paris, 5), connected(new_york, new_york, 0), connected(new_york, new_york, 1), connected(new_york, new_york, 2), connected(new_york, new_york, 3), connected(new_york, new_york, 4), connected(new_york, new_york, 5), connected(rome, paris, 0), connected(rome, new_york, 0), connected(paris, rome, 0), connected(paris, new_york, 0), connected(new_york, rome, 0), connected(new_york, paris, 0), connected(rome, paris, 1), connected(rome, new_york, 1), connected(paris, rome, 1), connected(paris, new_york, 1), connected(new_york, rome, 1), connected(new_york, paris, 1), connected(rome, paris, 2), connected(rome, new_york, 2), connected(paris, rome, 2), connected(paris, new_york, 2), connected(new_york, rome, 2), connected(new_york, paris, 2), connected(rome, paris, 3), connected(rome, new_york, 3), connected(paris, rome, 3), connected(paris, new_york, 3), connected(new_york, rome, 3), connected(new_york, paris, 3), connected(rome, paris, 4), connected(rome, new_york, 4), connected(paris, rome, 4), connected(paris, new_york, 4), connected(new_york, rome, 4), connected(new_york, paris, 4), connected(rome, paris, 5), connected(rome, new_york, 5), connected(paris, rome, 5), connected(paris, new_york, 5), connected(new_york, rome, 5), connected(new_york, paris, 5)
,dom_moves_dest(go(bob, paris, rome)), dom_moves_dest(go(john, paris, rome)), dom_moves_dest(go(bob, new_york, rome)), dom_moves_dest(go(john, new_york, rome)), dom_moves_dest(go(john, rome)), dom_moves_dest(go(bob, rome)), dom_moves_dest(go(john, rome, paris)), dom_moves_dest(go(bob, rome, paris)), dom_moves_dest(go(john, new_york, paris)), dom_moves_dest(go(bob, new_york, paris)), dom_moves_dest(go(bob, paris)), dom_moves_dest(go(john, paris)), dom_moves_dest(go(bob, rome, new_york)), dom_moves_dest(go(john, rome, new_york)), dom_moves_dest(go(bob, paris, new_york)), dom_moves_dest(go(john, paris, new_york)), dom_moves_dest(go(john, new_york)), dom_moves_dest(go(bob, new_york))
,subsort(integers, universe), subsort(actions, universe), subsort(moves, actions), subsort(things, universe), subsort(agents, things), subsort(points, universe), subsort(moves, universe), subsort(agents, universe), -subsort(timeStep, timeStep), -subsort(timeStep, comparable_integers_subsort), -subsort(timeStep, moves), -subsort(timeStep, universe), -subsort(timeStep, things), -subsort(timeStep, booleans), -subsort(timeStep, actions), -subsort(timeStep, integers), -subsort(timeStep, points), -subsort(timeStep, agents), -subsort(comparable_integers_subsort, timeStep), -subsort(comparable_integers_subsort, comparable_integers_subsort), -subsort(comparable_integers_subsort, moves), -subsort(comparable_integers_subsort, universe), -subsort(comparable_integers_subsort, things), -subsort(comparable_integers_subsort, booleans), -subsort(comparable_integers_subsort, actions), -subsort(comparable_integers_subsort, integers), -subsort(comparable_integers_subsort, points), -subsort(comparable_integers_subsort, agents), -subsort(moves, timeStep), -subsort(moves, comparable_integers_subsort), -subsort(moves, moves), -subsort(moves, things), -subsort(moves, booleans), -subsort(moves, integers), -subsort(moves, points), -subsort(moves, agents), -subsort(universe, timeStep), -subsort(universe, comparable_integers_subsort), -subsort(universe, moves), -subsort(universe, universe), -subsort(universe, things), -subsort(universe, booleans), -subsort(universe, actions), -subsort(universe, integers), -subsort(universe, points), -subsort(universe, agents), -subsort(things, timeStep), -subsort(things, comparable_integers_subsort), -subsort(things, moves), -subsort(things, things), -subsort(things, booleans), -subsort(things, actions), -subsort(things, integers), -subsort(things, points), -subsort(things, agents), -subsort(booleans, timeStep), -subsort(booleans, comparable_integers_subsort), -subsort(booleans, moves), -subsort(booleans, universe), -subsort(booleans, things), -subsort(booleans, booleans), -subsort(booleans, actions), -subsort(booleans, integers), -subsort(booleans, points), -subsort(booleans, agents), -subsort(actions, timeStep), -subsort(actions, comparable_integers_subsort), -subsort(actions, moves), -subsort(actions, things), -subsort(actions, booleans), -subsort(actions, actions), -subsort(actions, integers), -subsort(actions, points), -subsort(actions, agents), -subsort(integers, timeStep), -subsort(integers, comparable_integers_subsort), -subsort(integers, moves), -subsort(integers, things), -subsort(integers, booleans), -subsort(integers, actions), -subsort(integers, integers), -subsort(integers, points), -subsort(integers, agents), -subsort(points, timeStep), -subsort(points, comparable_integers_subsort), -subsort(points, moves), -subsort(points, things), -subsort(points, booleans), -subsort(points, actions), -subsort(points, integers), -subsort(points, points), -subsort(points, agents), -subsort(agents, timeStep), -subsort(agents, comparable_integers_subsort), -subsort(agents, moves), -subsort(agents, booleans), -subsort(agents, actions), -subsort(agents, integers), -subsort(agents, points), -subsort(agents, agents)
,dom_transitive_connectivity
,has_child(universe), has_child(actions), has_child(things), -has_child(timeStep), -has_child(comparable_integers_subsort), -has_child(moves), -has_child(booleans), -has_child(integers), -has_child(points), -has_child(agents)
,is_a(bob, agents), is_a(john, agents), is_a(new_york, points), is_a(paris, points), is_a(rome, points), is_a(go(john, new_york), moves), is_a(go(bob, new_york), moves), is_a(go(john, paris), moves), is_a(go(bob, paris), moves), is_a(go(john, rome), moves), is_a(go(bob, rome), moves), is_a(go(bob, paris, new_york), moves), is_a(go(bob, rome, new_york), moves), is_a(go(john, rome, new_york), moves), is_a(go(john, paris, new_york), moves), is_a(go(john, new_york, paris), moves), is_a(go(bob, rome, paris), moves), is_a(go(john, rome, paris), moves), is_a(go(bob, new_york, paris), moves), is_a(go(john, new_york, rome), moves), is_a(go(bob, new_york, rome), moves), is_a(go(bob, paris, rome), moves), is_a(go(john, paris, rome), moves), -is_a(paris, timeStep), -is_a(new_york, timeStep), -is_a(go(john, new_york, paris), timeStep), -is_a(go(john, rome), timeStep), -is_a(go(bob, paris, new_york), timeStep), -is_a(go(john, new_york, rome), timeStep), -is_a(go(bob, rome), timeStep), -is_a(go(bob, rome, paris), timeStep), -is_a(go(john, paris), timeStep), -is_a(rome, timeStep), -is_a(go(bob, paris), timeStep), -is_a(go(john, new_york), timeStep), -is_a(false, timeStep), -is_a(go(bob, rome, new_york), timeStep), -is_a(go(bob, new_york, rome), timeStep), -is_a(go(john, rome, paris), timeStep), -is_a(go(bob, paris, rome), timeStep), -is_a(go(john, rome, new_york), timeStep), -is_a(bob, timeStep), -is_a(go(john, paris, rome), timeStep), -is_a(go(bob, new_york), timeStep), -is_a(true, timeStep), -is_a(john, timeStep), -is_a(go(bob, new_york, paris), timeStep), -is_a(go(john, paris, new_york), timeStep), -is_a(paris, comparable_integers_subsort), -is_a(new_york, comparable_integers_subsort), -is_a(go(john, new_york, paris), comparable_integers_subsort), -is_a(go(john, rome), comparable_integers_subsort), -is_a(go(bob, paris, new_york), comparable_integers_subsort), -is_a(go(john, new_york, rome), comparable_integers_subsort), -is_a(go(bob, rome), comparable_integers_subsort), -is_a(go(bob, rome, paris), comparable_integers_subsort), -is_a(go(john, paris), comparable_integers_subsort), -is_a(rome, comparable_integers_subsort), -is_a(go(bob, paris), comparable_integers_subsort), -is_a(go(john, new_york), comparable_integers_subsort), -is_a(false, comparable_integers_subsort), -is_a(go(bob, rome, new_york), comparable_integers_subsort), -is_a(go(bob, new_york, rome), comparable_integers_subsort), -is_a(go(john, rome, paris), comparable_integers_subsort), -is_a(go(bob, paris, rome), comparable_integers_subsort), -is_a(go(john, rome, new_york), comparable_integers_subsort), -is_a(bob, comparable_integers_subsort), -is_a(go(john, paris, rome), comparable_integers_subsort), -is_a(go(bob, new_york), comparable_integers_subsort), -is_a(true, comparable_integers_subsort), -is_a(john, comparable_integers_subsort), -is_a(go(bob, new_york, paris), comparable_integers_subsort), -is_a(go(john, paris, new_york), comparable_integers_subsort), -is_a(paris, moves), -is_a(new_york, moves), -is_a(rome, moves), -is_a(false, moves), -is_a(bob, moves), -is_a(true, moves), -is_a(john, moves), -is_a(paris, universe), -is_a(new_york, universe), -is_a(go(john, new_york, paris), universe), -is_a(go(john, rome), universe), -is_a(go(bob, paris, new_york), universe), -is_a(go(john, new_york, rome), universe), -is_a(go(bob, rome), universe), -is_a(go(bob, rome, paris), universe), -is_a(go(john, paris), universe), -is_a(rome, universe), -is_a(go(bob, paris), universe), -is_a(go(john, new_york), universe), -is_a(false, universe), -is_a(go(bob, rome, new_york), universe), -is_a(go(bob, new_york, rome), universe), -is_a(go(john, rome, paris), universe), -is_a(go(bob, paris, rome), universe), -is_a(go(john, rome, new_york), universe), -is_a(bob, universe), -is_a(go(john, paris, rome), universe), -is_a(go(bob, new_york), universe), -is_a(true, universe), -is_a(john, universe), -is_a(go(bob, new_york, paris), universe), -is_a(go(john, paris, new_york), universe), -is_a(paris, things), -is_a(new_york, things), -is_a(go(john, new_york, paris), things), -is_a(go(john, rome), things), -is_a(go(bob, paris, new_york), things), -is_a(go(john, new_york, rome), things), -is_a(go(bob, rome), things), -is_a(go(bob, rome, paris), things), -is_a(go(john, paris), things), -is_a(rome, things), -is_a(go(bob, paris), things), -is_a(go(john, new_york), things), -is_a(false, things), -is_a(go(bob, rome, new_york), things), -is_a(go(bob, new_york, rome), things), -is_a(go(john, rome, paris), things), -is_a(go(bob, paris, rome), things), -is_a(go(john, rome, new_york), things), -is_a(bob, things), -is_a(go(john, paris, rome), things), -is_a(go(bob, new_york), things), -is_a(true, things), -is_a(john, things), -is_a(go(bob, new_york, paris), things), -is_a(go(john, paris, new_york), things), -is_a(paris, booleans), -is_a(new_york, booleans), -is_a(go(john, new_york, paris), booleans), -is_a(go(john, rome), booleans), -is_a(go(bob, paris, new_york), booleans), -is_a(go(john, new_york, rome), booleans), -is_a(go(bob, rome), booleans), -is_a(go(bob, rome, paris), booleans), -is_a(go(john, paris), booleans), -is_a(rome, booleans), -is_a(go(bob, paris), booleans), -is_a(go(john, new_york), booleans), -is_a(false, booleans), -is_a(go(bob, rome, new_york), booleans), -is_a(go(bob, new_york, rome), booleans), -is_a(go(john, rome, paris), booleans), -is_a(go(bob, paris, rome), booleans), -is_a(go(john, rome, new_york), booleans), -is_a(bob, booleans), -is_a(go(john, paris, rome), booleans), -is_a(go(bob, new_york), booleans), -is_a(true, booleans), -is_a(john, booleans), -is_a(go(bob, new_york, paris), booleans), -is_a(go(john, paris, new_york), booleans), -is_a(paris, actions), -is_a(new_york, actions), -is_a(go(john, new_york, paris), actions), -is_a(go(john, rome), actions), -is_a(go(bob, paris, new_york), actions), -is_a(go(john, new_york, rome), actions), -is_a(go(bob, rome), actions), -is_a(go(bob, rome, paris), actions), -is_a(go(john, paris), actions), -is_a(rome, actions), -is_a(go(bob, paris), actions), -is_a(go(john, new_york), actions), -is_a(false, actions), -is_a(go(bob, rome, new_york), actions), -is_a(go(bob, new_york, rome), actions), -is_a(go(john, rome, paris), actions), -is_a(go(bob, paris, rome), actions), -is_a(go(john, rome, new_york), actions), -is_a(bob, actions), -is_a(go(john, paris, rome), actions), -is_a(go(bob, new_york), actions), -is_a(true, actions), -is_a(john, actions), -is_a(go(bob, new_york, paris), actions), -is_a(go(john, paris, new_york), actions), -is_a(paris, integers), -is_a(new_york, integers), -is_a(go(john, new_york, paris), integers), -is_a(go(john, rome), integers), -is_a(go(bob, paris, new_york), integers), -is_a(go(john, new_york, rome), integers), -is_a(go(bob, rome), integers), -is_a(go(bob, rome, paris), integers), -is_a(go(john, paris), integers), -is_a(rome, integers), -is_a(go(bob, paris), integers), -is_a(go(john, new_york), integers), -is_a(false, integers), -is_a(go(bob, rome, new_york), integers), -is_a(go(bob, new_york, rome), integers), -is_a(go(john, rome, paris), integers), -is_a(go(bob, paris, rome), integers), -is_a(go(john, rome, new_york), integers), -is_a(bob, integers), -is_a(go(john, paris, rome), integers), -is_a(go(bob, new_york), integers), -is_a(true, integers), -is_a(john, integers), -is_a(go(bob, new_york, paris), integers), -is_a(go(john, paris, new_york), integers), -is_a(go(john, new_york, paris), points), -is_a(go(john, rome), points), -is_a(go(bob, paris, new_york), points), -is_a(go(john, new_york, rome), points), -is_a(go(bob, rome), points), -is_a(go(bob, rome, paris), points), -is_a(go(john, paris), points), -is_a(go(bob, paris), points), -is_a(go(john, new_york), points), -is_a(false, points), -is_a(go(bob, rome, new_york), points), -is_a(go(bob, new_york, rome), points), -is_a(go(john, rome, paris), points), -is_a(go(bob, paris, rome), points), -is_a(go(john, rome, new_york), points), -is_a(bob, points), -is_a(go(john, paris, rome), points), -is_a(go(bob, new_york), points), -is_a(true, points), -is_a(john, points), -is_a(go(bob, new_york, paris), points), -is_a(go(john, paris, new_york), points), -is_a(paris, agents), -is_a(new_york, agents), -is_a(go(john, new_york, paris), agents), -is_a(go(john, rome), agents), -is_a(go(bob, paris, new_york), agents), -is_a(go(john, new_york, rome), agents), -is_a(go(bob, rome), agents), -is_a(go(bob, rome, paris), agents), -is_a(go(john, paris), agents), -is_a(rome, agents), -is_a(go(bob, paris), agents), -is_a(go(john, new_york), agents), -is_a(false, agents), -is_a(go(bob, rome, new_york), agents), -is_a(go(bob, new_york, rome), agents), -is_a(go(john, rome, paris), agents), -is_a(go(bob, paris, rome), agents), -is_a(go(john, rome, new_york), agents), -is_a(go(john, paris, rome), agents), -is_a(go(bob, new_york), agents), -is_a(true, agents), -is_a(go(bob, new_york, paris), agents), -is_a(go(john, paris, new_york), agents)
}

