% Answer Set 1 of 7
{
 instance(heads, sides), instance(tails, sides), instance(nickel, coins), instance(dime, coins), instance(quarter, coins), instance(flip(nickel), flips), instance(flip(dime), flips), instance(flip(quarter), flips), instance(hide(dime), hides), instance(hide(nickel), hides), instance(hide(quarter), hides), instance(heads, universe), instance(tails, universe), instance(nickel, universe), instance(dime, universe), instance(quarter, universe), instance(flip(nickel), actions), instance(flip(dime), actions), instance(flip(quarter), actions), instance(hide(dime), actions), instance(hide(nickel), actions), instance(hide(quarter), actions), instance(flip(nickel), universe), instance(flip(dime), universe), instance(flip(quarter), universe), instance(hide(dime), universe), instance(hide(nickel), universe), instance(hide(quarter), universe), -instance(hide(dime), timeStep), -instance(nickel, timeStep), -instance(flip(nickel), timeStep), -instance(false, timeStep), -instance(hide(nickel), timeStep), -instance(dime, timeStep), -instance(tails, timeStep), -instance(true, timeStep), -instance(flip(dime), timeStep), -instance(heads, timeStep), -instance(hide(quarter), timeStep), -instance(quarter, timeStep), -instance(flip(quarter), timeStep), -instance(hide(dime), coins), -instance(flip(nickel), coins), -instance(false, coins), -instance(hide(nickel), coins), -instance(tails, coins), -instance(true, coins), -instance(flip(dime), coins), -instance(heads, coins), -instance(hide(quarter), coins), -instance(flip(quarter), coins), -instance(hide(dime), comparable_integers_subsort), -instance(nickel, comparable_integers_subsort), -instance(flip(nickel), comparable_integers_subsort), -instance(false, comparable_integers_subsort), -instance(hide(nickel), comparable_integers_subsort), -instance(dime, comparable_integers_subsort), -instance(tails, comparable_integers_subsort), -instance(true, comparable_integers_subsort), -instance(flip(dime), comparable_integers_subsort), -instance(heads, comparable_integers_subsort), -instance(hide(quarter), comparable_integers_subsort), -instance(quarter, comparable_integers_subsort), -instance(flip(quarter), comparable_integers_subsort), -instance(hide(dime), flips), -instance(nickel, flips), -instance(false, flips), -instance(hide(nickel), flips), -instance(dime, flips), -instance(tails, flips), -instance(true, flips), -instance(heads, flips), -instance(hide(quarter), flips), -instance(quarter, flips), -instance(hide(dime), singleton_tails_sides___), -instance(nickel, singleton_tails_sides___), -instance(flip(nickel), singleton_tails_sides___), -instance(false, singleton_tails_sides___), -instance(hide(nickel), singleton_tails_sides___), -instance(dime, singleton_tails_sides___), -instance(tails, singleton_tails_sides___), -instance(true, singleton_tails_sides___), -instance(flip(dime), singleton_tails_sides___), -instance(heads, singleton_tails_sides___), -instance(hide(quarter), singleton_tails_sides___), -instance(quarter, singleton_tails_sides___), -instance(flip(quarter), singleton_tails_sides___), -instance(false, universe), -instance(true, universe), -instance(hide(dime), booleans), -instance(nickel, booleans), -instance(flip(nickel), booleans), -instance(false, booleans), -instance(hide(nickel), booleans), -instance(dime, booleans), -instance(tails, booleans), -instance(true, booleans), -instance(flip(dime), booleans), -instance(heads, booleans), -instance(hide(quarter), booleans), -instance(quarter, booleans), -instance(flip(quarter), booleans), -instance(hide(dime), sides), -instance(nickel, sides), -instance(flip(nickel), sides), -instance(false, sides), -instance(hide(nickel), sides), -instance(dime, sides), -instance(true, sides), -instance(flip(dime), sides), -instance(hide(quarter), sides), -instance(quarter, sides), -instance(flip(quarter), sides), -instance(hide(dime), singleton_heads_sides___), -instance(nickel, singleton_heads_sides___), -instance(flip(nickel), singleton_heads_sides___), -instance(false, singleton_heads_sides___), -instance(hide(nickel), singleton_heads_sides___), -instance(dime, singleton_heads_sides___), -instance(tails, singleton_heads_sides___), -instance(true, singleton_heads_sides___), -instance(flip(dime), singleton_heads_sides___), -instance(heads, singleton_heads_sides___), -instance(hide(quarter), singleton_heads_sides___), -instance(quarter, singleton_heads_sides___), -instance(flip(quarter), singleton_heads_sides___), -instance(nickel, hides), -instance(flip(nickel), hides), -instance(false, hides), -instance(dime, hides), -instance(tails, hides), -instance(true, hides), -instance(flip(dime), hides), -instance(heads, hides), -instance(quarter, hides), -instance(flip(quarter), hides), -instance(nickel, actions), -instance(false, actions), -instance(dime, actions), -instance(tails, actions), -instance(true, actions), -instance(heads, actions), -instance(quarter, actions), -instance(hide(dime), integers), -instance(nickel, integers), -instance(flip(nickel), integers), -instance(false, integers), -instance(hide(nickel), integers), -instance(dime, integers), -instance(tails, integers), -instance(true, integers), -instance(flip(dime), integers), -instance(heads, integers), -instance(hide(quarter), integers), -instance(quarter, integers), -instance(flip(quarter), integers)
,planning_problem_success
,dom_hides_coin_hidden(hide(dime)), dom_hides_coin_hidden(hide(quarter)), dom_hides_coin_hidden(hide(nickel))
,hides_coin_hidden(hide(dime), dime), hides_coin_hidden(hide(quarter), quarter), hides_coin_hidden(hide(nickel), nickel)
,sink(timeStep), sink(comparable_integers_subsort), sink(universe), sink(booleans), -sink(coins), -sink(flips), -sink(singleton_tails_sides___), -sink(sides), -sink(singleton_heads_sides___), -sink(hides), -sink(actions), -sink(integers)
,planning_problem_something_happened(3), planning_problem_something_happened(4), -planning_problem_something_happened(0), -planning_problem_something_happened(1), -planning_problem_something_happened(2), -planning_problem_something_happened(5)
,link(sides, universe), link(singleton_heads_sides___, sides), link(singleton_tails_sides___, sides), link(actions, universe), link(flips, actions), link(hides, actions), link(integers, universe), link(coins, universe), -link(timeStep, timeStep), -link(timeStep, coins), -link(timeStep, comparable_integers_subsort), -link(timeStep, flips), -link(timeStep, singleton_tails_sides___), -link(timeStep, universe), -link(timeStep, booleans), -link(timeStep, sides), -link(timeStep, singleton_heads_sides___), -link(timeStep, hides), -link(timeStep, actions), -link(timeStep, integers), -link(coins, timeStep), -link(coins, coins), -link(coins, comparable_integers_subsort), -link(coins, flips), -link(coins, singleton_tails_sides___), -link(coins, booleans), -link(coins, sides), -link(coins, singleton_heads_sides___), -link(coins, hides), -link(coins, actions), -link(coins, integers), -link(comparable_integers_subsort, timeStep), -link(comparable_integers_subsort, coins), -link(comparable_integers_subsort, comparable_integers_subsort), -link(comparable_integers_subsort, flips), -link(comparable_integers_subsort, singleton_tails_sides___), -link(comparable_integers_subsort, universe), -link(comparable_integers_subsort, booleans), -link(comparable_integers_subsort, sides), -link(comparable_integers_subsort, singleton_heads_sides___), -link(comparable_integers_subsort, hides), -link(comparable_integers_subsort, actions), -link(comparable_integers_subsort, integers), -link(flips, timeStep), -link(flips, coins), -link(flips, comparable_integers_subsort), -link(flips, flips), -link(flips, singleton_tails_sides___), -link(flips, universe), -link(flips, booleans), -link(flips, sides), -link(flips, singleton_heads_sides___), -link(flips, hides), -link(flips, integers), -link(singleton_tails_sides___, timeStep), -link(singleton_tails_sides___, coins), -link(singleton_tails_sides___, comparable_integers_subsort), -link(singleton_tails_sides___, flips), -link(singleton_tails_sides___, singleton_tails_sides___), -link(singleton_tails_sides___, universe), -link(singleton_tails_sides___, booleans), -link(singleton_tails_sides___, singleton_heads_sides___), -link(singleton_tails_sides___, hides), -link(singleton_tails_sides___, actions), -link(singleton_tails_sides___, integers), -link(universe, timeStep), -link(universe, coins), -link(universe, comparable_integers_subsort), -link(universe, flips), -link(universe, singleton_tails_sides___), -link(universe, universe), -link(universe, booleans), -link(universe, sides), -link(universe, singleton_heads_sides___), -link(universe, hides), -link(universe, actions), -link(universe, integers), -link(booleans, timeStep), -link(booleans, coins), -link(booleans, comparable_integers_subsort), -link(booleans, flips), -link(booleans, singleton_tails_sides___), -link(booleans, universe), -link(booleans, booleans), -link(booleans, sides), -link(booleans, singleton_heads_sides___), -link(booleans, hides), -link(booleans, actions), -link(booleans, integers), -link(sides, timeStep), -link(sides, coins), -link(sides, comparable_integers_subsort), -link(sides, flips), -link(sides, singleton_tails_sides___), -link(sides, booleans), -link(sides, sides), -link(sides, singleton_heads_sides___), -link(sides, hides), -link(sides, actions), -link(sides, integers), -link(singleton_heads_sides___, timeStep), -link(singleton_heads_sides___, coins), -link(singleton_heads_sides___, comparable_integers_subsort), -link(singleton_heads_sides___, flips), -link(singleton_heads_sides___, singleton_tails_sides___), -link(singleton_heads_sides___, universe), -link(singleton_heads_sides___, booleans), -link(singleton_heads_sides___, singleton_heads_sides___), -link(singleton_heads_sides___, hides), -link(singleton_heads_sides___, actions), -link(singleton_heads_sides___, integers), -link(hides, timeStep), -link(hides, coins), -link(hides, comparable_integers_subsort), -link(hides, flips), -link(hides, singleton_tails_sides___), -link(hides, universe), -link(hides, booleans), -link(hides, sides), -link(hides, singleton_heads_sides___), -link(hides, hides), -link(hides, integers), -link(actions, timeStep), -link(actions, coins), -link(actions, comparable_integers_subsort), -link(actions, flips), -link(actions, singleton_tails_sides___), -link(actions, booleans), -link(actions, sides), -link(actions, singleton_heads_sides___), -link(actions, hides), -link(actions, actions), -link(actions, integers), -link(integers, timeStep), -link(integers, coins), -link(integers, comparable_integers_subsort), -link(integers, flips), -link(integers, singleton_tails_sides___), -link(integers, booleans), -link(integers, sides), -link(integers, singleton_heads_sides___), -link(integers, hides), -link(integers, actions), -link(integers, integers)
,has_parent(sides), has_parent(singleton_heads_sides___), has_parent(singleton_tails_sides___), has_parent(actions), has_parent(flips), has_parent(hides), has_parent(integers), has_parent(coins), -has_parent(timeStep), -has_parent(comparable_integers_subsort), -has_parent(universe), -has_parent(booleans)
,source(timeStep), source(coins), source(comparable_integers_subsort), source(flips), source(singleton_tails_sides___), source(booleans), source(singleton_heads_sides___), source(hides), source(integers), -source(universe), -source(sides), -source(actions)
,planning_problem_goal(5), -planning_problem_goal(0), -planning_problem_goal(1), -planning_problem_goal(2), -planning_problem_goal(3), -planning_problem_goal(4)
,occurs(flip(dime), 2), occurs(flip(nickel), 3), occurs(flip(dime), 4), occurs(hide(quarter), 4)
,dom_flips_flipped_coin(flip(nickel)), dom_flips_flipped_coin(flip(dime)), dom_flips_flipped_coin(flip(quarter))
,happened(flip(dime), 2)
,observed(showing(dime), heads, 0), observed(showing(nickel), heads, 0), observed(showing(quarter), heads, 0)
,planning_problem_allow_actions(3), planning_problem_allow_actions(4), planning_problem_allow_actions(5)
,subsort(sides, universe), subsort(singleton_heads_sides___, sides), subsort(singleton_tails_sides___, sides), subsort(actions, universe), subsort(flips, actions), subsort(hides, actions), subsort(integers, universe), subsort(coins, universe), subsort(singleton_heads_sides___, universe), subsort(singleton_tails_sides___, universe), subsort(flips, universe), subsort(hides, universe), -subsort(timeStep, timeStep), -subsort(timeStep, coins), -subsort(timeStep, comparable_integers_subsort), -subsort(timeStep, flips), -subsort(timeStep, singleton_tails_sides___), -subsort(timeStep, universe), -subsort(timeStep, booleans), -subsort(timeStep, sides), -subsort(timeStep, singleton_heads_sides___), -subsort(timeStep, hides), -subsort(timeStep, actions), -subsort(timeStep, integers), -subsort(coins, timeStep), -subsort(coins, coins), -subsort(coins, comparable_integers_subsort), -subsort(coins, flips), -subsort(coins, singleton_tails_sides___), -subsort(coins, booleans), -subsort(coins, sides), -subsort(coins, singleton_heads_sides___), -subsort(coins, hides), -subsort(coins, actions), -subsort(coins, integers), -subsort(comparable_integers_subsort, timeStep), -subsort(comparable_integers_subsort, coins), -subsort(comparable_integers_subsort, comparable_integers_subsort), -subsort(comparable_integers_subsort, flips), -subsort(comparable_integers_subsort, singleton_tails_sides___), -subsort(comparable_integers_subsort, universe), -subsort(comparable_integers_subsort, booleans), -subsort(comparable_integers_subsort, sides), -subsort(comparable_integers_subsort, singleton_heads_sides___), -subsort(comparable_integers_subsort, hides), -subsort(comparable_integers_subsort, actions), -subsort(comparable_integers_subsort, integers), -subsort(flips, timeStep), -subsort(flips, coins), -subsort(flips, comparable_integers_subsort), -subsort(flips, flips), -subsort(flips, singleton_tails_sides___), -subsort(flips, booleans), -subsort(flips, sides), -subsort(flips, singleton_heads_sides___), -subsort(flips, hides), -subsort(flips, integers), -subsort(singleton_tails_sides___, timeStep), -subsort(singleton_tails_sides___, coins), -subsort(singleton_tails_sides___, comparable_integers_subsort), -subsort(singleton_tails_sides___, flips), -subsort(singleton_tails_sides___, singleton_tails_sides___), -subsort(singleton_tails_sides___, booleans), -subsort(singleton_tails_sides___, singleton_heads_sides___), -subsort(singleton_tails_sides___, hides), -subsort(singleton_tails_sides___, actions), -subsort(singleton_tails_sides___, integers), -subsort(universe, timeStep), -subsort(universe, coins), -subsort(universe, comparable_integers_subsort), -subsort(universe, flips), -subsort(universe, singleton_tails_sides___), -subsort(universe, universe), -subsort(universe, booleans), -subsort(universe, sides), -subsort(universe, singleton_heads_sides___), -subsort(universe, hides), -subsort(universe, actions), -subsort(universe, integers), -subsort(booleans, timeStep), -subsort(booleans, coins), -subsort(booleans, comparable_integers_subsort), -subsort(booleans, flips), -subsort(booleans, singleton_tails_sides___), -subsort(booleans, universe), -subsort(booleans, booleans), -subsort(booleans, sides), -subsort(booleans, singleton_heads_sides___), -subsort(booleans, hides), -subsort(booleans, actions), -subsort(booleans, integers), -subsort(sides, timeStep), -subsort(sides, coins), -subsort(sides, comparable_integers_subsort), -subsort(sides, flips), -subsort(sides, singleton_tails_sides___), -subsort(sides, booleans), -subsort(sides, sides), -subsort(sides, singleton_heads_sides___), -subsort(sides, hides), -subsort(sides, actions), -subsort(sides, integers), -subsort(singleton_heads_sides___, timeStep), -subsort(singleton_heads_sides___, coins), -subsort(singleton_heads_sides___, comparable_integers_subsort), -subsort(singleton_heads_sides___, flips), -subsort(singleton_heads_sides___, singleton_tails_sides___), -subsort(singleton_heads_sides___, booleans), -subsort(singleton_heads_sides___, singleton_heads_sides___), -subsort(singleton_heads_sides___, hides), -subsort(singleton_heads_sides___, actions), -subsort(singleton_heads_sides___, integers), -subsort(hides, timeStep), -subsort(hides, coins), -subsort(hides, comparable_integers_subsort), -subsort(hides, flips), -subsort(hides, singleton_tails_sides___), -subsort(hides, booleans), -subsort(hides, sides), -subsort(hides, singleton_heads_sides___), -subsort(hides, hides), -subsort(hides, integers), -subsort(actions, timeStep), -subsort(actions, coins), -subsort(actions, comparable_integers_subsort), -subsort(actions, flips), -subsort(actions, singleton_tails_sides___), -subsort(actions, booleans), -subsort(actions, sides), -subsort(actions, singleton_heads_sides___), -subsort(actions, hides), -subsort(actions, actions), -subsort(actions, integers), -subsort(integers, timeStep), -subsort(integers, coins), -subsort(integers, comparable_integers_subsort), -subsort(integers, flips), -subsort(integers, singleton_tails_sides___), -subsort(integers, booleans), -subsort(integers, sides), -subsort(integers, singleton_heads_sides___), -subsort(integers, hides), -subsort(integers, actions), -subsort(integers, integers)
,flips_flipped_coin(flip(nickel), nickel), flips_flipped_coin(flip(dime), dime), flips_flipped_coin(flip(quarter), quarter)
,dom_showing(dime, 0), dom_showing(nickel, 0), dom_showing(quarter, 0), dom_showing(dime, 1), dom_showing(nickel, 1), dom_showing(quarter, 1), dom_showing(dime, 2), dom_showing(nickel, 2), dom_showing(quarter, 2), dom_showing(dime, 3), dom_showing(nickel, 3), dom_showing(quarter, 3), dom_showing(dime, 4), dom_showing(nickel, 4), dom_showing(quarter, 4), dom_showing(dime, 5), dom_showing(nickel, 5), -dom_showing(quarter, 5)
,has_child(universe), has_child(sides), has_child(actions), -has_child(timeStep), -has_child(coins), -has_child(comparable_integers_subsort), -has_child(flips), -has_child(singleton_tails_sides___), -has_child(booleans), -has_child(singleton_heads_sides___), -has_child(hides), -has_child(integers)
,is_a(heads, sides), is_a(tails, sides), is_a(nickel, coins), is_a(dime, coins), is_a(quarter, coins), is_a(flip(nickel), flips), is_a(flip(dime), flips), is_a(flip(quarter), flips), is_a(hide(dime), hides), is_a(hide(nickel), hides), is_a(hide(quarter), hides), -is_a(hide(dime), timeStep), -is_a(nickel, timeStep), -is_a(flip(nickel), timeStep), -is_a(false, timeStep), -is_a(hide(nickel), timeStep), -is_a(dime, timeStep), -is_a(tails, timeStep), -is_a(true, timeStep), -is_a(flip(dime), timeStep), -is_a(heads, timeStep), -is_a(hide(quarter), timeStep), -is_a(quarter, timeStep), -is_a(flip(quarter), timeStep), -is_a(hide(dime), coins), -is_a(flip(nickel), coins), -is_a(false, coins), -is_a(hide(nickel), coins), -is_a(tails, coins), -is_a(true, coins), -is_a(flip(dime), coins), -is_a(heads, coins), -is_a(hide(quarter), coins), -is_a(flip(quarter), coins), -is_a(hide(dime), comparable_integers_subsort), -is_a(nickel, comparable_integers_subsort), -is_a(flip(nickel), comparable_integers_subsort), -is_a(false, comparable_integers_subsort), -is_a(hide(nickel), comparable_integers_subsort), -is_a(dime, comparable_integers_subsort), -is_a(tails, comparable_integers_subsort), -is_a(true, comparable_integers_subsort), -is_a(flip(dime), comparable_integers_subsort), -is_a(heads, comparable_integers_subsort), -is_a(hide(quarter), comparable_integers_subsort), -is_a(quarter, comparable_integers_subsort), -is_a(flip(quarter), comparable_integers_subsort), -is_a(hide(dime), flips), -is_a(nickel, flips), -is_a(false, flips), -is_a(hide(nickel), flips), -is_a(dime, flips), -is_a(tails, flips), -is_a(true, flips), -is_a(heads, flips), -is_a(hide(quarter), flips), -is_a(quarter, flips), -is_a(hide(dime), singleton_tails_sides___), -is_a(nickel, singleton_tails_sides___), -is_a(flip(nickel), singleton_tails_sides___), -is_a(false, singleton_tails_sides___), -is_a(hide(nickel), singleton_tails_sides___), -is_a(dime, singleton_tails_sides___), -is_a(tails, singleton_tails_sides___), -is_a(true, singleton_tails_sides___), -is_a(flip(dime), singleton_tails_sides___), -is_a(heads, singleton_tails_sides___), -is_a(hide(quarter), singleton_tails_sides___), -is_a(quarter, singleton_tails_sides___), -is_a(flip(quarter), singleton_tails_sides___), -is_a(hide(dime), universe), -is_a(nickel, universe), -is_a(flip(nickel), universe), -is_a(false, universe), -is_a(hide(nickel), universe), -is_a(dime, universe), -is_a(tails, universe), -is_a(true, universe), -is_a(flip(dime), universe), -is_a(heads, universe), -is_a(hide(quarter), universe), -is_a(quarter, universe), -is_a(flip(quarter), universe), -is_a(hide(dime), booleans), -is_a(nickel, booleans), -is_a(flip(nickel), booleans), -is_a(false, booleans), -is_a(hide(nickel), booleans), -is_a(dime, booleans), -is_a(tails, booleans), -is_a(true, booleans), -is_a(flip(dime), booleans), -is_a(heads, booleans), -is_a(hide(quarter), booleans), -is_a(quarter, booleans), -is_a(flip(quarter), booleans), -is_a(hide(dime), sides), -is_a(nickel, sides), -is_a(flip(nickel), sides), -is_a(false, sides), -is_a(hide(nickel), sides), -is_a(dime, sides), -is_a(true, sides), -is_a(flip(dime), sides), -is_a(hide(quarter), sides), -is_a(quarter, sides), -is_a(flip(quarter), sides), -is_a(hide(dime), singleton_heads_sides___), -is_a(nickel, singleton_heads_sides___), -is_a(flip(nickel), singleton_heads_sides___), -is_a(false, singleton_heads_sides___), -is_a(hide(nickel), singleton_heads_sides___), -is_a(dime, singleton_heads_sides___), -is_a(tails, singleton_heads_sides___), -is_a(true, singleton_heads_sides___), -is_a(flip(dime), singleton_heads_sides___), -is_a(heads, singleton_heads_sides___), -is_a(hide(quarter), singleton_heads_sides___), -is_a(quarter, singleton_heads_sides___), -is_a(flip(quarter), singleton_heads_sides___), -is_a(nickel, hides), -is_a(flip(nickel), hides), -is_a(false, hides), -is_a(dime, hides), -is_a(tails, hides), -is_a(true, hides), -is_a(flip(dime), hides), -is_a(heads, hides), -is_a(quarter, hides), -is_a(flip(quarter), hides), -is_a(hide(dime), actions), -is_a(nickel, actions), -is_a(flip(nickel), actions), -is_a(false, actions), -is_a(hide(nickel), actions), -is_a(dime, actions), -is_a(tails, actions), -is_a(true, actions), -is_a(flip(dime), actions), -is_a(heads, actions), -is_a(hide(quarter), actions), -is_a(quarter, actions), -is_a(flip(quarter), actions), -is_a(hide(dime), integers), -is_a(nickel, integers), -is_a(flip(nickel), integers), -is_a(false, integers), -is_a(hide(nickel), integers), -is_a(dime, integers), -is_a(tails, integers), -is_a(true, integers), -is_a(flip(dime), integers), -is_a(heads, integers), -is_a(hide(quarter), integers), -is_a(quarter, integers), -is_a(flip(quarter), integers)
,showing(dime, heads, 0), showing(nickel, heads, 0), showing(quarter, heads, 0), showing(dime, heads, 1), showing(nickel, heads, 1), showing(quarter, heads, 1), showing(dime, heads, 2), showing(nickel, heads, 2), showing(quarter, heads, 2), showing(nickel, heads, 3), showing(quarter, heads, 3), showing(dime, tails, 3), showing(dime, tails, 4), showing(quarter, heads, 4), showing(nickel, tails, 4), showing(dime, heads, 5), showing(nickel, tails, 5), -showing(dime, tails, 0), -showing(nickel, tails, 0), -showing(quarter, tails, 0), -showing(dime, tails, 1), -showing(nickel, tails, 1), -showing(quarter, tails, 1), -showing(dime, tails, 2), -showing(nickel, tails, 2), -showing(quarter, tails, 2), -showing(nickel, tails, 3), -showing(quarter, tails, 3), -showing(quarter, tails, 4), -showing(dime, tails, 5), -showing(dime, heads, 3), -showing(dime, heads, 4), -showing(nickel, heads, 4), -showing(nickel, heads, 5)
,current_time(3)
}

% Answer Set 2 of 7
{
 instance(heads, sides), instance(tails, sides), instance(nickel, coins), instance(dime, coins), instance(quarter, coins), instance(flip(nickel), flips), instance(flip(dime), flips), instance(flip(quarter), flips), instance(hide(dime), hides), instance(hide(nickel), hides), instance(hide(quarter), hides), instance(heads, universe), instance(tails, universe), instance(nickel, universe), instance(dime, universe), instance(quarter, universe), instance(flip(nickel), actions), instance(flip(dime), actions), instance(flip(quarter), actions), instance(hide(dime), actions), instance(hide(nickel), actions), instance(hide(quarter), actions), instance(flip(nickel), universe), instance(flip(dime), universe), instance(flip(quarter), universe), instance(hide(dime), universe), instance(hide(nickel), universe), instance(hide(quarter), universe), -instance(hide(dime), timeStep), -instance(nickel, timeStep), -instance(flip(nickel), timeStep), -instance(false, timeStep), -instance(hide(nickel), timeStep), -instance(dime, timeStep), -instance(tails, timeStep), -instance(true, timeStep), -instance(flip(dime), timeStep), -instance(heads, timeStep), -instance(hide(quarter), timeStep), -instance(quarter, timeStep), -instance(flip(quarter), timeStep), -instance(hide(dime), coins), -instance(flip(nickel), coins), -instance(false, coins), -instance(hide(nickel), coins), -instance(tails, coins), -instance(true, coins), -instance(flip(dime), coins), -instance(heads, coins), -instance(hide(quarter), coins), -instance(flip(quarter), coins), -instance(hide(dime), comparable_integers_subsort), -instance(nickel, comparable_integers_subsort), -instance(flip(nickel), comparable_integers_subsort), -instance(false, comparable_integers_subsort), -instance(hide(nickel), comparable_integers_subsort), -instance(dime, comparable_integers_subsort), -instance(tails, comparable_integers_subsort), -instance(true, comparable_integers_subsort), -instance(flip(dime), comparable_integers_subsort), -instance(heads, comparable_integers_subsort), -instance(hide(quarter), comparable_integers_subsort), -instance(quarter, comparable_integers_subsort), -instance(flip(quarter), comparable_integers_subsort), -instance(hide(dime), flips), -instance(nickel, flips), -instance(false, flips), -instance(hide(nickel), flips), -instance(dime, flips), -instance(tails, flips), -instance(true, flips), -instance(heads, flips), -instance(hide(quarter), flips), -instance(quarter, flips), -instance(hide(dime), singleton_tails_sides___), -instance(nickel, singleton_tails_sides___), -instance(flip(nickel), singleton_tails_sides___), -instance(false, singleton_tails_sides___), -instance(hide(nickel), singleton_tails_sides___), -instance(dime, singleton_tails_sides___), -instance(tails, singleton_tails_sides___), -instance(true, singleton_tails_sides___), -instance(flip(dime), singleton_tails_sides___), -instance(heads, singleton_tails_sides___), -instance(hide(quarter), singleton_tails_sides___), -instance(quarter, singleton_tails_sides___), -instance(flip(quarter), singleton_tails_sides___), -instance(false, universe), -instance(true, universe), -instance(hide(dime), booleans), -instance(nickel, booleans), -instance(flip(nickel), booleans), -instance(false, booleans), -instance(hide(nickel), booleans), -instance(dime, booleans), -instance(tails, booleans), -instance(true, booleans), -instance(flip(dime), booleans), -instance(heads, booleans), -instance(hide(quarter), booleans), -instance(quarter, booleans), -instance(flip(quarter), booleans), -instance(hide(dime), sides), -instance(nickel, sides), -instance(flip(nickel), sides), -instance(false, sides), -instance(hide(nickel), sides), -instance(dime, sides), -instance(true, sides), -instance(flip(dime), sides), -instance(hide(quarter), sides), -instance(quarter, sides), -instance(flip(quarter), sides), -instance(hide(dime), singleton_heads_sides___), -instance(nickel, singleton_heads_sides___), -instance(flip(nickel), singleton_heads_sides___), -instance(false, singleton_heads_sides___), -instance(hide(nickel), singleton_heads_sides___), -instance(dime, singleton_heads_sides___), -instance(tails, singleton_heads_sides___), -instance(true, singleton_heads_sides___), -instance(flip(dime), singleton_heads_sides___), -instance(heads, singleton_heads_sides___), -instance(hide(quarter), singleton_heads_sides___), -instance(quarter, singleton_heads_sides___), -instance(flip(quarter), singleton_heads_sides___), -instance(nickel, hides), -instance(flip(nickel), hides), -instance(false, hides), -instance(dime, hides), -instance(tails, hides), -instance(true, hides), -instance(flip(dime), hides), -instance(heads, hides), -instance(quarter, hides), -instance(flip(quarter), hides), -instance(nickel, actions), -instance(false, actions), -instance(dime, actions), -instance(tails, actions), -instance(true, actions), -instance(heads, actions), -instance(quarter, actions), -instance(hide(dime), integers), -instance(nickel, integers), -instance(flip(nickel), integers), -instance(false, integers), -instance(hide(nickel), integers), -instance(dime, integers), -instance(tails, integers), -instance(true, integers), -instance(flip(dime), integers), -instance(heads, integers), -instance(hide(quarter), integers), -instance(quarter, integers), -instance(flip(quarter), integers)
,planning_problem_success
,dom_hides_coin_hidden(hide(dime)), dom_hides_coin_hidden(hide(quarter)), dom_hides_coin_hidden(hide(nickel))
,hides_coin_hidden(hide(dime), dime), hides_coin_hidden(hide(quarter), quarter), hides_coin_hidden(hide(nickel), nickel)
,sink(timeStep), sink(comparable_integers_subsort), sink(universe), sink(booleans), -sink(coins), -sink(flips), -sink(singleton_tails_sides___), -sink(sides), -sink(singleton_heads_sides___), -sink(hides), -sink(actions), -sink(integers)
,planning_problem_something_happened(3), planning_problem_something_happened(4), -planning_problem_something_happened(0), -planning_problem_something_happened(1), -planning_problem_something_happened(2), -planning_problem_something_happened(5)
,link(sides, universe), link(singleton_heads_sides___, sides), link(singleton_tails_sides___, sides), link(actions, universe), link(flips, actions), link(hides, actions), link(integers, universe), link(coins, universe), -link(timeStep, timeStep), -link(timeStep, coins), -link(timeStep, comparable_integers_subsort), -link(timeStep, flips), -link(timeStep, singleton_tails_sides___), -link(timeStep, universe), -link(timeStep, booleans), -link(timeStep, sides), -link(timeStep, singleton_heads_sides___), -link(timeStep, hides), -link(timeStep, actions), -link(timeStep, integers), -link(coins, timeStep), -link(coins, coins), -link(coins, comparable_integers_subsort), -link(coins, flips), -link(coins, singleton_tails_sides___), -link(coins, booleans), -link(coins, sides), -link(coins, singleton_heads_sides___), -link(coins, hides), -link(coins, actions), -link(coins, integers), -link(comparable_integers_subsort, timeStep), -link(comparable_integers_subsort, coins), -link(comparable_integers_subsort, comparable_integers_subsort), -link(comparable_integers_subsort, flips), -link(comparable_integers_subsort, singleton_tails_sides___), -link(comparable_integers_subsort, universe), -link(comparable_integers_subsort, booleans), -link(comparable_integers_subsort, sides), -link(comparable_integers_subsort, singleton_heads_sides___), -link(comparable_integers_subsort, hides), -link(comparable_integers_subsort, actions), -link(comparable_integers_subsort, integers), -link(flips, timeStep), -link(flips, coins), -link(flips, comparable_integers_subsort), -link(flips, flips), -link(flips, singleton_tails_sides___), -link(flips, universe), -link(flips, booleans), -link(flips, sides), -link(flips, singleton_heads_sides___), -link(flips, hides), -link(flips, integers), -link(singleton_tails_sides___, timeStep), -link(singleton_tails_sides___, coins), -link(singleton_tails_sides___, comparable_integers_subsort), -link(singleton_tails_sides___, flips), -link(singleton_tails_sides___, singleton_tails_sides___), -link(singleton_tails_sides___, universe), -link(singleton_tails_sides___, booleans), -link(singleton_tails_sides___, singleton_heads_sides___), -link(singleton_tails_sides___, hides), -link(singleton_tails_sides___, actions), -link(singleton_tails_sides___, integers), -link(universe, timeStep), -link(universe, coins), -link(universe, comparable_integers_subsort), -link(universe, flips), -link(universe, singleton_tails_sides___), -link(universe, universe), -link(universe, booleans), -link(universe, sides), -link(universe, singleton_heads_sides___), -link(universe, hides), -link(universe, actions), -link(universe, integers), -link(booleans, timeStep), -link(booleans, coins), -link(booleans, comparable_integers_subsort), -link(booleans, flips), -link(booleans, singleton_tails_sides___), -link(booleans, universe), -link(booleans, booleans), -link(booleans, sides), -link(booleans, singleton_heads_sides___), -link(booleans, hides), -link(booleans, actions), -link(booleans, integers), -link(sides, timeStep), -link(sides, coins), -link(sides, comparable_integers_subsort), -link(sides, flips), -link(sides, singleton_tails_sides___), -link(sides, booleans), -link(sides, sides), -link(sides, singleton_heads_sides___), -link(sides, hides), -link(sides, actions), -link(sides, integers), -link(singleton_heads_sides___, timeStep), -link(singleton_heads_sides___, coins), -link(singleton_heads_sides___, comparable_integers_subsort), -link(singleton_heads_sides___, flips), -link(singleton_heads_sides___, singleton_tails_sides___), -link(singleton_heads_sides___, universe), -link(singleton_heads_sides___, booleans), -link(singleton_heads_sides___, singleton_heads_sides___), -link(singleton_heads_sides___, hides), -link(singleton_heads_sides___, actions), -link(singleton_heads_sides___, integers), -link(hides, timeStep), -link(hides, coins), -link(hides, comparable_integers_subsort), -link(hides, flips), -link(hides, singleton_tails_sides___), -link(hides, universe), -link(hides, booleans), -link(hides, sides), -link(hides, singleton_heads_sides___), -link(hides, hides), -link(hides, integers), -link(actions, timeStep), -link(actions, coins), -link(actions, comparable_integers_subsort), -link(actions, flips), -link(actions, singleton_tails_sides___), -link(actions, booleans), -link(actions, sides), -link(actions, singleton_heads_sides___), -link(actions, hides), -link(actions, actions), -link(actions, integers), -link(integers, timeStep), -link(integers, coins), -link(integers, comparable_integers_subsort), -link(integers, flips), -link(integers, singleton_tails_sides___), -link(integers, booleans), -link(integers, sides), -link(integers, singleton_heads_sides___), -link(integers, hides), -link(integers, actions), -link(integers, integers)
,has_parent(sides), has_parent(singleton_heads_sides___), has_parent(singleton_tails_sides___), has_parent(actions), has_parent(flips), has_parent(hides), has_parent(integers), has_parent(coins), -has_parent(timeStep), -has_parent(comparable_integers_subsort), -has_parent(universe), -has_parent(booleans)
,source(timeStep), source(coins), source(comparable_integers_subsort), source(flips), source(singleton_tails_sides___), source(booleans), source(singleton_heads_sides___), source(hides), source(integers), -source(universe), -source(sides), -source(actions)
,planning_problem_goal(5), -planning_problem_goal(0), -planning_problem_goal(1), -planning_problem_goal(2), -planning_problem_goal(3), -planning_problem_goal(4)
,occurs(flip(dime), 2), occurs(flip(nickel), 3), occurs(hide(quarter), 3), occurs(flip(dime), 4)
,dom_flips_flipped_coin(flip(nickel)), dom_flips_flipped_coin(flip(dime)), dom_flips_flipped_coin(flip(quarter))
,happened(flip(dime), 2)
,observed(showing(dime), heads, 0), observed(showing(nickel), heads, 0), observed(showing(quarter), heads, 0)
,planning_problem_allow_actions(3), planning_problem_allow_actions(4), planning_problem_allow_actions(5)
,subsort(sides, universe), subsort(singleton_heads_sides___, sides), subsort(singleton_tails_sides___, sides), subsort(actions, universe), subsort(flips, actions), subsort(hides, actions), subsort(integers, universe), subsort(coins, universe), subsort(singleton_heads_sides___, universe), subsort(singleton_tails_sides___, universe), subsort(flips, universe), subsort(hides, universe), -subsort(timeStep, timeStep), -subsort(timeStep, coins), -subsort(timeStep, comparable_integers_subsort), -subsort(timeStep, flips), -subsort(timeStep, singleton_tails_sides___), -subsort(timeStep, universe), -subsort(timeStep, booleans), -subsort(timeStep, sides), -subsort(timeStep, singleton_heads_sides___), -subsort(timeStep, hides), -subsort(timeStep, actions), -subsort(timeStep, integers), -subsort(coins, timeStep), -subsort(coins, coins), -subsort(coins, comparable_integers_subsort), -subsort(coins, flips), -subsort(coins, singleton_tails_sides___), -subsort(coins, booleans), -subsort(coins, sides), -subsort(coins, singleton_heads_sides___), -subsort(coins, hides), -subsort(coins, actions), -subsort(coins, integers), -subsort(comparable_integers_subsort, timeStep), -subsort(comparable_integers_subsort, coins), -subsort(comparable_integers_subsort, comparable_integers_subsort), -subsort(comparable_integers_subsort, flips), -subsort(comparable_integers_subsort, singleton_tails_sides___), -subsort(comparable_integers_subsort, universe), -subsort(comparable_integers_subsort, booleans), -subsort(comparable_integers_subsort, sides), -subsort(comparable_integers_subsort, singleton_heads_sides___), -subsort(comparable_integers_subsort, hides), -subsort(comparable_integers_subsort, actions), -subsort(comparable_integers_subsort, integers), -subsort(flips, timeStep), -subsort(flips, coins), -subsort(flips, comparable_integers_subsort), -subsort(flips, flips), -subsort(flips, singleton_tails_sides___), -subsort(flips, booleans), -subsort(flips, sides), -subsort(flips, singleton_heads_sides___), -subsort(flips, hides), -subsort(flips, integers), -subsort(singleton_tails_sides___, timeStep), -subsort(singleton_tails_sides___, coins), -subsort(singleton_tails_sides___, comparable_integers_subsort), -subsort(singleton_tails_sides___, flips), -subsort(singleton_tails_sides___, singleton_tails_sides___), -subsort(singleton_tails_sides___, booleans), -subsort(singleton_tails_sides___, singleton_heads_sides___), -subsort(singleton_tails_sides___, hides), -subsort(singleton_tails_sides___, actions), -subsort(singleton_tails_sides___, integers), -subsort(universe, timeStep), -subsort(universe, coins), -subsort(universe, comparable_integers_subsort), -subsort(universe, flips), -subsort(universe, singleton_tails_sides___), -subsort(universe, universe), -subsort(universe, booleans), -subsort(universe, sides), -subsort(universe, singleton_heads_sides___), -subsort(universe, hides), -subsort(universe, actions), -subsort(universe, integers), -subsort(booleans, timeStep), -subsort(booleans, coins), -subsort(booleans, comparable_integers_subsort), -subsort(booleans, flips), -subsort(booleans, singleton_tails_sides___), -subsort(booleans, universe), -subsort(booleans, booleans), -subsort(booleans, sides), -subsort(booleans, singleton_heads_sides___), -subsort(booleans, hides), -subsort(booleans, actions), -subsort(booleans, integers), -subsort(sides, timeStep), -subsort(sides, coins), -subsort(sides, comparable_integers_subsort), -subsort(sides, flips), -subsort(sides, singleton_tails_sides___), -subsort(sides, booleans), -subsort(sides, sides), -subsort(sides, singleton_heads_sides___), -subsort(sides, hides), -subsort(sides, actions), -subsort(sides, integers), -subsort(singleton_heads_sides___, timeStep), -subsort(singleton_heads_sides___, coins), -subsort(singleton_heads_sides___, comparable_integers_subsort), -subsort(singleton_heads_sides___, flips), -subsort(singleton_heads_sides___, singleton_tails_sides___), -subsort(singleton_heads_sides___, booleans), -subsort(singleton_heads_sides___, singleton_heads_sides___), -subsort(singleton_heads_sides___, hides), -subsort(singleton_heads_sides___, actions), -subsort(singleton_heads_sides___, integers), -subsort(hides, timeStep), -subsort(hides, coins), -subsort(hides, comparable_integers_subsort), -subsort(hides, flips), -subsort(hides, singleton_tails_sides___), -subsort(hides, booleans), -subsort(hides, sides), -subsort(hides, singleton_heads_sides___), -subsort(hides, hides), -subsort(hides, integers), -subsort(actions, timeStep), -subsort(actions, coins), -subsort(actions, comparable_integers_subsort), -subsort(actions, flips), -subsort(actions, singleton_tails_sides___), -subsort(actions, booleans), -subsort(actions, sides), -subsort(actions, singleton_heads_sides___), -subsort(actions, hides), -subsort(actions, actions), -subsort(actions, integers), -subsort(integers, timeStep), -subsort(integers, coins), -subsort(integers, comparable_integers_subsort), -subsort(integers, flips), -subsort(integers, singleton_tails_sides___), -subsort(integers, booleans), -subsort(integers, sides), -subsort(integers, singleton_heads_sides___), -subsort(integers, hides), -subsort(integers, actions), -subsort(integers, integers)
,flips_flipped_coin(flip(nickel), nickel), flips_flipped_coin(flip(dime), dime), flips_flipped_coin(flip(quarter), quarter)
,dom_showing(dime, 0), dom_showing(nickel, 0), dom_showing(quarter, 0), dom_showing(dime, 1), dom_showing(nickel, 1), dom_showing(quarter, 1), dom_showing(dime, 2), dom_showing(nickel, 2), dom_showing(quarter, 2), dom_showing(dime, 3), dom_showing(nickel, 3), dom_showing(quarter, 3), dom_showing(dime, 4), dom_showing(nickel, 4), dom_showing(dime, 5), dom_showing(nickel, 5), -dom_showing(quarter, 4), -dom_showing(quarter, 5)
,has_child(universe), has_child(sides), has_child(actions), -has_child(timeStep), -has_child(coins), -has_child(comparable_integers_subsort), -has_child(flips), -has_child(singleton_tails_sides___), -has_child(booleans), -has_child(singleton_heads_sides___), -has_child(hides), -has_child(integers)
,is_a(heads, sides), is_a(tails, sides), is_a(nickel, coins), is_a(dime, coins), is_a(quarter, coins), is_a(flip(nickel), flips), is_a(flip(dime), flips), is_a(flip(quarter), flips), is_a(hide(dime), hides), is_a(hide(nickel), hides), is_a(hide(quarter), hides), -is_a(hide(dime), timeStep), -is_a(nickel, timeStep), -is_a(flip(nickel), timeStep), -is_a(false, timeStep), -is_a(hide(nickel), timeStep), -is_a(dime, timeStep), -is_a(tails, timeStep), -is_a(true, timeStep), -is_a(flip(dime), timeStep), -is_a(heads, timeStep), -is_a(hide(quarter), timeStep), -is_a(quarter, timeStep), -is_a(flip(quarter), timeStep), -is_a(hide(dime), coins), -is_a(flip(nickel), coins), -is_a(false, coins), -is_a(hide(nickel), coins), -is_a(tails, coins), -is_a(true, coins), -is_a(flip(dime), coins), -is_a(heads, coins), -is_a(hide(quarter), coins), -is_a(flip(quarter), coins), -is_a(hide(dime), comparable_integers_subsort), -is_a(nickel, comparable_integers_subsort), -is_a(flip(nickel), comparable_integers_subsort), -is_a(false, comparable_integers_subsort), -is_a(hide(nickel), comparable_integers_subsort), -is_a(dime, comparable_integers_subsort), -is_a(tails, comparable_integers_subsort), -is_a(true, comparable_integers_subsort), -is_a(flip(dime), comparable_integers_subsort), -is_a(heads, comparable_integers_subsort), -is_a(hide(quarter), comparable_integers_subsort), -is_a(quarter, comparable_integers_subsort), -is_a(flip(quarter), comparable_integers_subsort), -is_a(hide(dime), flips), -is_a(nickel, flips), -is_a(false, flips), -is_a(hide(nickel), flips), -is_a(dime, flips), -is_a(tails, flips), -is_a(true, flips), -is_a(heads, flips), -is_a(hide(quarter), flips), -is_a(quarter, flips), -is_a(hide(dime), singleton_tails_sides___), -is_a(nickel, singleton_tails_sides___), -is_a(flip(nickel), singleton_tails_sides___), -is_a(false, singleton_tails_sides___), -is_a(hide(nickel), singleton_tails_sides___), -is_a(dime, singleton_tails_sides___), -is_a(tails, singleton_tails_sides___), -is_a(true, singleton_tails_sides___), -is_a(flip(dime), singleton_tails_sides___), -is_a(heads, singleton_tails_sides___), -is_a(hide(quarter), singleton_tails_sides___), -is_a(quarter, singleton_tails_sides___), -is_a(flip(quarter), singleton_tails_sides___), -is_a(hide(dime), universe), -is_a(nickel, universe), -is_a(flip(nickel), universe), -is_a(false, universe), -is_a(hide(nickel), universe), -is_a(dime, universe), -is_a(tails, universe), -is_a(true, universe), -is_a(flip(dime), universe), -is_a(heads, universe), -is_a(hide(quarter), universe), -is_a(quarter, universe), -is_a(flip(quarter), universe), -is_a(hide(dime), booleans), -is_a(nickel, booleans), -is_a(flip(nickel), booleans), -is_a(false, booleans), -is_a(hide(nickel), booleans), -is_a(dime, booleans), -is_a(tails, booleans), -is_a(true, booleans), -is_a(flip(dime), booleans), -is_a(heads, booleans), -is_a(hide(quarter), booleans), -is_a(quarter, booleans), -is_a(flip(quarter), booleans), -is_a(hide(dime), sides), -is_a(nickel, sides), -is_a(flip(nickel), sides), -is_a(false, sides), -is_a(hide(nickel), sides), -is_a(dime, sides), -is_a(true, sides), -is_a(flip(dime), sides), -is_a(hide(quarter), sides), -is_a(quarter, sides), -is_a(flip(quarter), sides), -is_a(hide(dime), singleton_heads_sides___), -is_a(nickel, singleton_heads_sides___), -is_a(flip(nickel), singleton_heads_sides___), -is_a(false, singleton_heads_sides___), -is_a(hide(nickel), singleton_heads_sides___), -is_a(dime, singleton_heads_sides___), -is_a(tails, singleton_heads_sides___), -is_a(true, singleton_heads_sides___), -is_a(flip(dime), singleton_heads_sides___), -is_a(heads, singleton_heads_sides___), -is_a(hide(quarter), singleton_heads_sides___), -is_a(quarter, singleton_heads_sides___), -is_a(flip(quarter), singleton_heads_sides___), -is_a(nickel, hides), -is_a(flip(nickel), hides), -is_a(false, hides), -is_a(dime, hides), -is_a(tails, hides), -is_a(true, hides), -is_a(flip(dime), hides), -is_a(heads, hides), -is_a(quarter, hides), -is_a(flip(quarter), hides), -is_a(hide(dime), actions), -is_a(nickel, actions), -is_a(flip(nickel), actions), -is_a(false, actions), -is_a(hide(nickel), actions), -is_a(dime, actions), -is_a(tails, actions), -is_a(true, actions), -is_a(flip(dime), actions), -is_a(heads, actions), -is_a(hide(quarter), actions), -is_a(quarter, actions), -is_a(flip(quarter), actions), -is_a(hide(dime), integers), -is_a(nickel, integers), -is_a(flip(nickel), integers), -is_a(false, integers), -is_a(hide(nickel), integers), -is_a(dime, integers), -is_a(tails, integers), -is_a(true, integers), -is_a(flip(dime), integers), -is_a(heads, integers), -is_a(hide(quarter), integers), -is_a(quarter, integers), -is_a(flip(quarter), integers)
,showing(dime, heads, 0), showing(nickel, heads, 0), showing(quarter, heads, 0), showing(dime, heads, 1), showing(nickel, heads, 1), showing(quarter, heads, 1), showing(dime, heads, 2), showing(nickel, heads, 2), showing(quarter, heads, 2), showing(nickel, heads, 3), showing(quarter, heads, 3), showing(dime, tails, 3), showing(dime, tails, 4), showing(nickel, tails, 4), showing(dime, heads, 5), showing(nickel, tails, 5), -showing(dime, tails, 0), -showing(nickel, tails, 0), -showing(quarter, tails, 0), -showing(dime, tails, 1), -showing(nickel, tails, 1), -showing(quarter, tails, 1), -showing(dime, tails, 2), -showing(nickel, tails, 2), -showing(quarter, tails, 2), -showing(nickel, tails, 3), -showing(quarter, tails, 3), -showing(dime, tails, 5), -showing(dime, heads, 3), -showing(dime, heads, 4), -showing(nickel, heads, 4), -showing(nickel, heads, 5)
,current_time(3)
}

% Answer Set 3 of 7
{
 instance(heads, sides), instance(tails, sides), instance(nickel, coins), instance(dime, coins), instance(quarter, coins), instance(flip(nickel), flips), instance(flip(dime), flips), instance(flip(quarter), flips), instance(hide(dime), hides), instance(hide(nickel), hides), instance(hide(quarter), hides), instance(heads, universe), instance(tails, universe), instance(nickel, universe), instance(dime, universe), instance(quarter, universe), instance(flip(nickel), actions), instance(flip(dime), actions), instance(flip(quarter), actions), instance(hide(dime), actions), instance(hide(nickel), actions), instance(hide(quarter), actions), instance(flip(nickel), universe), instance(flip(dime), universe), instance(flip(quarter), universe), instance(hide(dime), universe), instance(hide(nickel), universe), instance(hide(quarter), universe), -instance(hide(dime), timeStep), -instance(nickel, timeStep), -instance(flip(nickel), timeStep), -instance(false, timeStep), -instance(hide(nickel), timeStep), -instance(dime, timeStep), -instance(tails, timeStep), -instance(true, timeStep), -instance(flip(dime), timeStep), -instance(heads, timeStep), -instance(hide(quarter), timeStep), -instance(quarter, timeStep), -instance(flip(quarter), timeStep), -instance(hide(dime), coins), -instance(flip(nickel), coins), -instance(false, coins), -instance(hide(nickel), coins), -instance(tails, coins), -instance(true, coins), -instance(flip(dime), coins), -instance(heads, coins), -instance(hide(quarter), coins), -instance(flip(quarter), coins), -instance(hide(dime), comparable_integers_subsort), -instance(nickel, comparable_integers_subsort), -instance(flip(nickel), comparable_integers_subsort), -instance(false, comparable_integers_subsort), -instance(hide(nickel), comparable_integers_subsort), -instance(dime, comparable_integers_subsort), -instance(tails, comparable_integers_subsort), -instance(true, comparable_integers_subsort), -instance(flip(dime), comparable_integers_subsort), -instance(heads, comparable_integers_subsort), -instance(hide(quarter), comparable_integers_subsort), -instance(quarter, comparable_integers_subsort), -instance(flip(quarter), comparable_integers_subsort), -instance(hide(dime), flips), -instance(nickel, flips), -instance(false, flips), -instance(hide(nickel), flips), -instance(dime, flips), -instance(tails, flips), -instance(true, flips), -instance(heads, flips), -instance(hide(quarter), flips), -instance(quarter, flips), -instance(hide(dime), singleton_tails_sides___), -instance(nickel, singleton_tails_sides___), -instance(flip(nickel), singleton_tails_sides___), -instance(false, singleton_tails_sides___), -instance(hide(nickel), singleton_tails_sides___), -instance(dime, singleton_tails_sides___), -instance(tails, singleton_tails_sides___), -instance(true, singleton_tails_sides___), -instance(flip(dime), singleton_tails_sides___), -instance(heads, singleton_tails_sides___), -instance(hide(quarter), singleton_tails_sides___), -instance(quarter, singleton_tails_sides___), -instance(flip(quarter), singleton_tails_sides___), -instance(false, universe), -instance(true, universe), -instance(hide(dime), booleans), -instance(nickel, booleans), -instance(flip(nickel), booleans), -instance(false, booleans), -instance(hide(nickel), booleans), -instance(dime, booleans), -instance(tails, booleans), -instance(true, booleans), -instance(flip(dime), booleans), -instance(heads, booleans), -instance(hide(quarter), booleans), -instance(quarter, booleans), -instance(flip(quarter), booleans), -instance(hide(dime), sides), -instance(nickel, sides), -instance(flip(nickel), sides), -instance(false, sides), -instance(hide(nickel), sides), -instance(dime, sides), -instance(true, sides), -instance(flip(dime), sides), -instance(hide(quarter), sides), -instance(quarter, sides), -instance(flip(quarter), sides), -instance(hide(dime), singleton_heads_sides___), -instance(nickel, singleton_heads_sides___), -instance(flip(nickel), singleton_heads_sides___), -instance(false, singleton_heads_sides___), -instance(hide(nickel), singleton_heads_sides___), -instance(dime, singleton_heads_sides___), -instance(tails, singleton_heads_sides___), -instance(true, singleton_heads_sides___), -instance(flip(dime), singleton_heads_sides___), -instance(heads, singleton_heads_sides___), -instance(hide(quarter), singleton_heads_sides___), -instance(quarter, singleton_heads_sides___), -instance(flip(quarter), singleton_heads_sides___), -instance(nickel, hides), -instance(flip(nickel), hides), -instance(false, hides), -instance(dime, hides), -instance(tails, hides), -instance(true, hides), -instance(flip(dime), hides), -instance(heads, hides), -instance(quarter, hides), -instance(flip(quarter), hides), -instance(nickel, actions), -instance(false, actions), -instance(dime, actions), -instance(tails, actions), -instance(true, actions), -instance(heads, actions), -instance(quarter, actions), -instance(hide(dime), integers), -instance(nickel, integers), -instance(flip(nickel), integers), -instance(false, integers), -instance(hide(nickel), integers), -instance(dime, integers), -instance(tails, integers), -instance(true, integers), -instance(flip(dime), integers), -instance(heads, integers), -instance(hide(quarter), integers), -instance(quarter, integers), -instance(flip(quarter), integers)
,planning_problem_success
,dom_hides_coin_hidden(hide(dime)), dom_hides_coin_hidden(hide(quarter)), dom_hides_coin_hidden(hide(nickel))
,hides_coin_hidden(hide(dime), dime), hides_coin_hidden(hide(quarter), quarter), hides_coin_hidden(hide(nickel), nickel)
,sink(timeStep), sink(comparable_integers_subsort), sink(universe), sink(booleans), -sink(coins), -sink(flips), -sink(singleton_tails_sides___), -sink(sides), -sink(singleton_heads_sides___), -sink(hides), -sink(actions), -sink(integers)
,planning_problem_something_happened(3), planning_problem_something_happened(4), -planning_problem_something_happened(0), -planning_problem_something_happened(1), -planning_problem_something_happened(2), -planning_problem_something_happened(5)
,link(sides, universe), link(singleton_heads_sides___, sides), link(singleton_tails_sides___, sides), link(actions, universe), link(flips, actions), link(hides, actions), link(integers, universe), link(coins, universe), -link(timeStep, timeStep), -link(timeStep, coins), -link(timeStep, comparable_integers_subsort), -link(timeStep, flips), -link(timeStep, singleton_tails_sides___), -link(timeStep, universe), -link(timeStep, booleans), -link(timeStep, sides), -link(timeStep, singleton_heads_sides___), -link(timeStep, hides), -link(timeStep, actions), -link(timeStep, integers), -link(coins, timeStep), -link(coins, coins), -link(coins, comparable_integers_subsort), -link(coins, flips), -link(coins, singleton_tails_sides___), -link(coins, booleans), -link(coins, sides), -link(coins, singleton_heads_sides___), -link(coins, hides), -link(coins, actions), -link(coins, integers), -link(comparable_integers_subsort, timeStep), -link(comparable_integers_subsort, coins), -link(comparable_integers_subsort, comparable_integers_subsort), -link(comparable_integers_subsort, flips), -link(comparable_integers_subsort, singleton_tails_sides___), -link(comparable_integers_subsort, universe), -link(comparable_integers_subsort, booleans), -link(comparable_integers_subsort, sides), -link(comparable_integers_subsort, singleton_heads_sides___), -link(comparable_integers_subsort, hides), -link(comparable_integers_subsort, actions), -link(comparable_integers_subsort, integers), -link(flips, timeStep), -link(flips, coins), -link(flips, comparable_integers_subsort), -link(flips, flips), -link(flips, singleton_tails_sides___), -link(flips, universe), -link(flips, booleans), -link(flips, sides), -link(flips, singleton_heads_sides___), -link(flips, hides), -link(flips, integers), -link(singleton_tails_sides___, timeStep), -link(singleton_tails_sides___, coins), -link(singleton_tails_sides___, comparable_integers_subsort), -link(singleton_tails_sides___, flips), -link(singleton_tails_sides___, singleton_tails_sides___), -link(singleton_tails_sides___, universe), -link(singleton_tails_sides___, booleans), -link(singleton_tails_sides___, singleton_heads_sides___), -link(singleton_tails_sides___, hides), -link(singleton_tails_sides___, actions), -link(singleton_tails_sides___, integers), -link(universe, timeStep), -link(universe, coins), -link(universe, comparable_integers_subsort), -link(universe, flips), -link(universe, singleton_tails_sides___), -link(universe, universe), -link(universe, booleans), -link(universe, sides), -link(universe, singleton_heads_sides___), -link(universe, hides), -link(universe, actions), -link(universe, integers), -link(booleans, timeStep), -link(booleans, coins), -link(booleans, comparable_integers_subsort), -link(booleans, flips), -link(booleans, singleton_tails_sides___), -link(booleans, universe), -link(booleans, booleans), -link(booleans, sides), -link(booleans, singleton_heads_sides___), -link(booleans, hides), -link(booleans, actions), -link(booleans, integers), -link(sides, timeStep), -link(sides, coins), -link(sides, comparable_integers_subsort), -link(sides, flips), -link(sides, singleton_tails_sides___), -link(sides, booleans), -link(sides, sides), -link(sides, singleton_heads_sides___), -link(sides, hides), -link(sides, actions), -link(sides, integers), -link(singleton_heads_sides___, timeStep), -link(singleton_heads_sides___, coins), -link(singleton_heads_sides___, comparable_integers_subsort), -link(singleton_heads_sides___, flips), -link(singleton_heads_sides___, singleton_tails_sides___), -link(singleton_heads_sides___, universe), -link(singleton_heads_sides___, booleans), -link(singleton_heads_sides___, singleton_heads_sides___), -link(singleton_heads_sides___, hides), -link(singleton_heads_sides___, actions), -link(singleton_heads_sides___, integers), -link(hides, timeStep), -link(hides, coins), -link(hides, comparable_integers_subsort), -link(hides, flips), -link(hides, singleton_tails_sides___), -link(hides, universe), -link(hides, booleans), -link(hides, sides), -link(hides, singleton_heads_sides___), -link(hides, hides), -link(hides, integers), -link(actions, timeStep), -link(actions, coins), -link(actions, comparable_integers_subsort), -link(actions, flips), -link(actions, singleton_tails_sides___), -link(actions, booleans), -link(actions, sides), -link(actions, singleton_heads_sides___), -link(actions, hides), -link(actions, actions), -link(actions, integers), -link(integers, timeStep), -link(integers, coins), -link(integers, comparable_integers_subsort), -link(integers, flips), -link(integers, singleton_tails_sides___), -link(integers, booleans), -link(integers, sides), -link(integers, singleton_heads_sides___), -link(integers, hides), -link(integers, actions), -link(integers, integers)
,has_parent(sides), has_parent(singleton_heads_sides___), has_parent(singleton_tails_sides___), has_parent(actions), has_parent(flips), has_parent(hides), has_parent(integers), has_parent(coins), -has_parent(timeStep), -has_parent(comparable_integers_subsort), -has_parent(universe), -has_parent(booleans)
,source(timeStep), source(coins), source(comparable_integers_subsort), source(flips), source(singleton_tails_sides___), source(booleans), source(singleton_heads_sides___), source(hides), source(integers), -source(universe), -source(sides), -source(actions)
,planning_problem_goal(5), -planning_problem_goal(0), -planning_problem_goal(1), -planning_problem_goal(2), -planning_problem_goal(3), -planning_problem_goal(4)
,occurs(flip(dime), 2), occurs(hide(quarter), 3), occurs(flip(nickel), 4), occurs(flip(dime), 4)
,dom_flips_flipped_coin(flip(nickel)), dom_flips_flipped_coin(flip(dime)), dom_flips_flipped_coin(flip(quarter))
,happened(flip(dime), 2)
,observed(showing(dime), heads, 0), observed(showing(nickel), heads, 0), observed(showing(quarter), heads, 0)
,planning_problem_allow_actions(3), planning_problem_allow_actions(4), planning_problem_allow_actions(5)
,subsort(sides, universe), subsort(singleton_heads_sides___, sides), subsort(singleton_tails_sides___, sides), subsort(actions, universe), subsort(flips, actions), subsort(hides, actions), subsort(integers, universe), subsort(coins, universe), subsort(singleton_heads_sides___, universe), subsort(singleton_tails_sides___, universe), subsort(flips, universe), subsort(hides, universe), -subsort(timeStep, timeStep), -subsort(timeStep, coins), -subsort(timeStep, comparable_integers_subsort), -subsort(timeStep, flips), -subsort(timeStep, singleton_tails_sides___), -subsort(timeStep, universe), -subsort(timeStep, booleans), -subsort(timeStep, sides), -subsort(timeStep, singleton_heads_sides___), -subsort(timeStep, hides), -subsort(timeStep, actions), -subsort(timeStep, integers), -subsort(coins, timeStep), -subsort(coins, coins), -subsort(coins, comparable_integers_subsort), -subsort(coins, flips), -subsort(coins, singleton_tails_sides___), -subsort(coins, booleans), -subsort(coins, sides), -subsort(coins, singleton_heads_sides___), -subsort(coins, hides), -subsort(coins, actions), -subsort(coins, integers), -subsort(comparable_integers_subsort, timeStep), -subsort(comparable_integers_subsort, coins), -subsort(comparable_integers_subsort, comparable_integers_subsort), -subsort(comparable_integers_subsort, flips), -subsort(comparable_integers_subsort, singleton_tails_sides___), -subsort(comparable_integers_subsort, universe), -subsort(comparable_integers_subsort, booleans), -subsort(comparable_integers_subsort, sides), -subsort(comparable_integers_subsort, singleton_heads_sides___), -subsort(comparable_integers_subsort, hides), -subsort(comparable_integers_subsort, actions), -subsort(comparable_integers_subsort, integers), -subsort(flips, timeStep), -subsort(flips, coins), -subsort(flips, comparable_integers_subsort), -subsort(flips, flips), -subsort(flips, singleton_tails_sides___), -subsort(flips, booleans), -subsort(flips, sides), -subsort(flips, singleton_heads_sides___), -subsort(flips, hides), -subsort(flips, integers), -subsort(singleton_tails_sides___, timeStep), -subsort(singleton_tails_sides___, coins), -subsort(singleton_tails_sides___, comparable_integers_subsort), -subsort(singleton_tails_sides___, flips), -subsort(singleton_tails_sides___, singleton_tails_sides___), -subsort(singleton_tails_sides___, booleans), -subsort(singleton_tails_sides___, singleton_heads_sides___), -subsort(singleton_tails_sides___, hides), -subsort(singleton_tails_sides___, actions), -subsort(singleton_tails_sides___, integers), -subsort(universe, timeStep), -subsort(universe, coins), -subsort(universe, comparable_integers_subsort), -subsort(universe, flips), -subsort(universe, singleton_tails_sides___), -subsort(universe, universe), -subsort(universe, booleans), -subsort(universe, sides), -subsort(universe, singleton_heads_sides___), -subsort(universe, hides), -subsort(universe, actions), -subsort(universe, integers), -subsort(booleans, timeStep), -subsort(booleans, coins), -subsort(booleans, comparable_integers_subsort), -subsort(booleans, flips), -subsort(booleans, singleton_tails_sides___), -subsort(booleans, universe), -subsort(booleans, booleans), -subsort(booleans, sides), -subsort(booleans, singleton_heads_sides___), -subsort(booleans, hides), -subsort(booleans, actions), -subsort(booleans, integers), -subsort(sides, timeStep), -subsort(sides, coins), -subsort(sides, comparable_integers_subsort), -subsort(sides, flips), -subsort(sides, singleton_tails_sides___), -subsort(sides, booleans), -subsort(sides, sides), -subsort(sides, singleton_heads_sides___), -subsort(sides, hides), -subsort(sides, actions), -subsort(sides, integers), -subsort(singleton_heads_sides___, timeStep), -subsort(singleton_heads_sides___, coins), -subsort(singleton_heads_sides___, comparable_integers_subsort), -subsort(singleton_heads_sides___, flips), -subsort(singleton_heads_sides___, singleton_tails_sides___), -subsort(singleton_heads_sides___, booleans), -subsort(singleton_heads_sides___, singleton_heads_sides___), -subsort(singleton_heads_sides___, hides), -subsort(singleton_heads_sides___, actions), -subsort(singleton_heads_sides___, integers), -subsort(hides, timeStep), -subsort(hides, coins), -subsort(hides, comparable_integers_subsort), -subsort(hides, flips), -subsort(hides, singleton_tails_sides___), -subsort(hides, booleans), -subsort(hides, sides), -subsort(hides, singleton_heads_sides___), -subsort(hides, hides), -subsort(hides, integers), -subsort(actions, timeStep), -subsort(actions, coins), -subsort(actions, comparable_integers_subsort), -subsort(actions, flips), -subsort(actions, singleton_tails_sides___), -subsort(actions, booleans), -subsort(actions, sides), -subsort(actions, singleton_heads_sides___), -subsort(actions, hides), -subsort(actions, actions), -subsort(actions, integers), -subsort(integers, timeStep), -subsort(integers, coins), -subsort(integers, comparable_integers_subsort), -subsort(integers, flips), -subsort(integers, singleton_tails_sides___), -subsort(integers, booleans), -subsort(integers, sides), -subsort(integers, singleton_heads_sides___), -subsort(integers, hides), -subsort(integers, actions), -subsort(integers, integers)
,flips_flipped_coin(flip(nickel), nickel), flips_flipped_coin(flip(dime), dime), flips_flipped_coin(flip(quarter), quarter)
,dom_showing(dime, 0), dom_showing(nickel, 0), dom_showing(quarter, 0), dom_showing(dime, 1), dom_showing(nickel, 1), dom_showing(quarter, 1), dom_showing(dime, 2), dom_showing(nickel, 2), dom_showing(quarter, 2), dom_showing(dime, 3), dom_showing(nickel, 3), dom_showing(quarter, 3), dom_showing(dime, 4), dom_showing(nickel, 4), dom_showing(dime, 5), dom_showing(nickel, 5), -dom_showing(quarter, 4), -dom_showing(quarter, 5)
,has_child(universe), has_child(sides), has_child(actions), -has_child(timeStep), -has_child(coins), -has_child(comparable_integers_subsort), -has_child(flips), -has_child(singleton_tails_sides___), -has_child(booleans), -has_child(singleton_heads_sides___), -has_child(hides), -has_child(integers)
,is_a(heads, sides), is_a(tails, sides), is_a(nickel, coins), is_a(dime, coins), is_a(quarter, coins), is_a(flip(nickel), flips), is_a(flip(dime), flips), is_a(flip(quarter), flips), is_a(hide(dime), hides), is_a(hide(nickel), hides), is_a(hide(quarter), hides), -is_a(hide(dime), timeStep), -is_a(nickel, timeStep), -is_a(flip(nickel), timeStep), -is_a(false, timeStep), -is_a(hide(nickel), timeStep), -is_a(dime, timeStep), -is_a(tails, timeStep), -is_a(true, timeStep), -is_a(flip(dime), timeStep), -is_a(heads, timeStep), -is_a(hide(quarter), timeStep), -is_a(quarter, timeStep), -is_a(flip(quarter), timeStep), -is_a(hide(dime), coins), -is_a(flip(nickel), coins), -is_a(false, coins), -is_a(hide(nickel), coins), -is_a(tails, coins), -is_a(true, coins), -is_a(flip(dime), coins), -is_a(heads, coins), -is_a(hide(quarter), coins), -is_a(flip(quarter), coins), -is_a(hide(dime), comparable_integers_subsort), -is_a(nickel, comparable_integers_subsort), -is_a(flip(nickel), comparable_integers_subsort), -is_a(false, comparable_integers_subsort), -is_a(hide(nickel), comparable_integers_subsort), -is_a(dime, comparable_integers_subsort), -is_a(tails, comparable_integers_subsort), -is_a(true, comparable_integers_subsort), -is_a(flip(dime), comparable_integers_subsort), -is_a(heads, comparable_integers_subsort), -is_a(hide(quarter), comparable_integers_subsort), -is_a(quarter, comparable_integers_subsort), -is_a(flip(quarter), comparable_integers_subsort), -is_a(hide(dime), flips), -is_a(nickel, flips), -is_a(false, flips), -is_a(hide(nickel), flips), -is_a(dime, flips), -is_a(tails, flips), -is_a(true, flips), -is_a(heads, flips), -is_a(hide(quarter), flips), -is_a(quarter, flips), -is_a(hide(dime), singleton_tails_sides___), -is_a(nickel, singleton_tails_sides___), -is_a(flip(nickel), singleton_tails_sides___), -is_a(false, singleton_tails_sides___), -is_a(hide(nickel), singleton_tails_sides___), -is_a(dime, singleton_tails_sides___), -is_a(tails, singleton_tails_sides___), -is_a(true, singleton_tails_sides___), -is_a(flip(dime), singleton_tails_sides___), -is_a(heads, singleton_tails_sides___), -is_a(hide(quarter), singleton_tails_sides___), -is_a(quarter, singleton_tails_sides___), -is_a(flip(quarter), singleton_tails_sides___), -is_a(hide(dime), universe), -is_a(nickel, universe), -is_a(flip(nickel), universe), -is_a(false, universe), -is_a(hide(nickel), universe), -is_a(dime, universe), -is_a(tails, universe), -is_a(true, universe), -is_a(flip(dime), universe), -is_a(heads, universe), -is_a(hide(quarter), universe), -is_a(quarter, universe), -is_a(flip(quarter), universe), -is_a(hide(dime), booleans), -is_a(nickel, booleans), -is_a(flip(nickel), booleans), -is_a(false, booleans), -is_a(hide(nickel), booleans), -is_a(dime, booleans), -is_a(tails, booleans), -is_a(true, booleans), -is_a(flip(dime), booleans), -is_a(heads, booleans), -is_a(hide(quarter), booleans), -is_a(quarter, booleans), -is_a(flip(quarter), booleans), -is_a(hide(dime), sides), -is_a(nickel, sides), -is_a(flip(nickel), sides), -is_a(false, sides), -is_a(hide(nickel), sides), -is_a(dime, sides), -is_a(true, sides), -is_a(flip(dime), sides), -is_a(hide(quarter), sides), -is_a(quarter, sides), -is_a(flip(quarter), sides), -is_a(hide(dime), singleton_heads_sides___), -is_a(nickel, singleton_heads_sides___), -is_a(flip(nickel), singleton_heads_sides___), -is_a(false, singleton_heads_sides___), -is_a(hide(nickel), singleton_heads_sides___), -is_a(dime, singleton_heads_sides___), -is_a(tails, singleton_heads_sides___), -is_a(true, singleton_heads_sides___), -is_a(flip(dime), singleton_heads_sides___), -is_a(heads, singleton_heads_sides___), -is_a(hide(quarter), singleton_heads_sides___), -is_a(quarter, singleton_heads_sides___), -is_a(flip(quarter), singleton_heads_sides___), -is_a(nickel, hides), -is_a(flip(nickel), hides), -is_a(false, hides), -is_a(dime, hides), -is_a(tails, hides), -is_a(true, hides), -is_a(flip(dime), hides), -is_a(heads, hides), -is_a(quarter, hides), -is_a(flip(quarter), hides), -is_a(hide(dime), actions), -is_a(nickel, actions), -is_a(flip(nickel), actions), -is_a(false, actions), -is_a(hide(nickel), actions), -is_a(dime, actions), -is_a(tails, actions), -is_a(true, actions), -is_a(flip(dime), actions), -is_a(heads, actions), -is_a(hide(quarter), actions), -is_a(quarter, actions), -is_a(flip(quarter), actions), -is_a(hide(dime), integers), -is_a(nickel, integers), -is_a(flip(nickel), integers), -is_a(false, integers), -is_a(hide(nickel), integers), -is_a(dime, integers), -is_a(tails, integers), -is_a(true, integers), -is_a(flip(dime), integers), -is_a(heads, integers), -is_a(hide(quarter), integers), -is_a(quarter, integers), -is_a(flip(quarter), integers)
,showing(dime, heads, 0), showing(nickel, heads, 0), showing(quarter, heads, 0), showing(dime, heads, 1), showing(nickel, heads, 1), showing(quarter, heads, 1), showing(dime, heads, 2), showing(nickel, heads, 2), showing(quarter, heads, 2), showing(nickel, heads, 3), showing(quarter, heads, 3), showing(dime, tails, 3), showing(dime, tails, 4), showing(nickel, heads, 4), showing(dime, heads, 5), showing(nickel, tails, 5), -showing(dime, tails, 0), -showing(nickel, tails, 0), -showing(quarter, tails, 0), -showing(dime, tails, 1), -showing(nickel, tails, 1), -showing(quarter, tails, 1), -showing(dime, tails, 2), -showing(nickel, tails, 2), -showing(quarter, tails, 2), -showing(nickel, tails, 3), -showing(quarter, tails, 3), -showing(nickel, tails, 4), -showing(dime, tails, 5), -showing(dime, heads, 3), -showing(dime, heads, 4), -showing(nickel, heads, 5)
,current_time(3)
}

% Answer Set 4 of 7
{
 instance(heads, sides), instance(tails, sides), instance(nickel, coins), instance(dime, coins), instance(quarter, coins), instance(flip(nickel), flips), instance(flip(dime), flips), instance(flip(quarter), flips), instance(hide(dime), hides), instance(hide(nickel), hides), instance(hide(quarter), hides), instance(heads, universe), instance(tails, universe), instance(nickel, universe), instance(dime, universe), instance(quarter, universe), instance(flip(nickel), actions), instance(flip(dime), actions), instance(flip(quarter), actions), instance(hide(dime), actions), instance(hide(nickel), actions), instance(hide(quarter), actions), instance(flip(nickel), universe), instance(flip(dime), universe), instance(flip(quarter), universe), instance(hide(dime), universe), instance(hide(nickel), universe), instance(hide(quarter), universe), -instance(hide(dime), timeStep), -instance(nickel, timeStep), -instance(flip(nickel), timeStep), -instance(false, timeStep), -instance(hide(nickel), timeStep), -instance(dime, timeStep), -instance(tails, timeStep), -instance(true, timeStep), -instance(flip(dime), timeStep), -instance(heads, timeStep), -instance(hide(quarter), timeStep), -instance(quarter, timeStep), -instance(flip(quarter), timeStep), -instance(hide(dime), coins), -instance(flip(nickel), coins), -instance(false, coins), -instance(hide(nickel), coins), -instance(tails, coins), -instance(true, coins), -instance(flip(dime), coins), -instance(heads, coins), -instance(hide(quarter), coins), -instance(flip(quarter), coins), -instance(hide(dime), comparable_integers_subsort), -instance(nickel, comparable_integers_subsort), -instance(flip(nickel), comparable_integers_subsort), -instance(false, comparable_integers_subsort), -instance(hide(nickel), comparable_integers_subsort), -instance(dime, comparable_integers_subsort), -instance(tails, comparable_integers_subsort), -instance(true, comparable_integers_subsort), -instance(flip(dime), comparable_integers_subsort), -instance(heads, comparable_integers_subsort), -instance(hide(quarter), comparable_integers_subsort), -instance(quarter, comparable_integers_subsort), -instance(flip(quarter), comparable_integers_subsort), -instance(hide(dime), flips), -instance(nickel, flips), -instance(false, flips), -instance(hide(nickel), flips), -instance(dime, flips), -instance(tails, flips), -instance(true, flips), -instance(heads, flips), -instance(hide(quarter), flips), -instance(quarter, flips), -instance(hide(dime), singleton_tails_sides___), -instance(nickel, singleton_tails_sides___), -instance(flip(nickel), singleton_tails_sides___), -instance(false, singleton_tails_sides___), -instance(hide(nickel), singleton_tails_sides___), -instance(dime, singleton_tails_sides___), -instance(tails, singleton_tails_sides___), -instance(true, singleton_tails_sides___), -instance(flip(dime), singleton_tails_sides___), -instance(heads, singleton_tails_sides___), -instance(hide(quarter), singleton_tails_sides___), -instance(quarter, singleton_tails_sides___), -instance(flip(quarter), singleton_tails_sides___), -instance(false, universe), -instance(true, universe), -instance(hide(dime), booleans), -instance(nickel, booleans), -instance(flip(nickel), booleans), -instance(false, booleans), -instance(hide(nickel), booleans), -instance(dime, booleans), -instance(tails, booleans), -instance(true, booleans), -instance(flip(dime), booleans), -instance(heads, booleans), -instance(hide(quarter), booleans), -instance(quarter, booleans), -instance(flip(quarter), booleans), -instance(hide(dime), sides), -instance(nickel, sides), -instance(flip(nickel), sides), -instance(false, sides), -instance(hide(nickel), sides), -instance(dime, sides), -instance(true, sides), -instance(flip(dime), sides), -instance(hide(quarter), sides), -instance(quarter, sides), -instance(flip(quarter), sides), -instance(hide(dime), singleton_heads_sides___), -instance(nickel, singleton_heads_sides___), -instance(flip(nickel), singleton_heads_sides___), -instance(false, singleton_heads_sides___), -instance(hide(nickel), singleton_heads_sides___), -instance(dime, singleton_heads_sides___), -instance(tails, singleton_heads_sides___), -instance(true, singleton_heads_sides___), -instance(flip(dime), singleton_heads_sides___), -instance(heads, singleton_heads_sides___), -instance(hide(quarter), singleton_heads_sides___), -instance(quarter, singleton_heads_sides___), -instance(flip(quarter), singleton_heads_sides___), -instance(nickel, hides), -instance(flip(nickel), hides), -instance(false, hides), -instance(dime, hides), -instance(tails, hides), -instance(true, hides), -instance(flip(dime), hides), -instance(heads, hides), -instance(quarter, hides), -instance(flip(quarter), hides), -instance(nickel, actions), -instance(false, actions), -instance(dime, actions), -instance(tails, actions), -instance(true, actions), -instance(heads, actions), -instance(quarter, actions), -instance(hide(dime), integers), -instance(nickel, integers), -instance(flip(nickel), integers), -instance(false, integers), -instance(hide(nickel), integers), -instance(dime, integers), -instance(tails, integers), -instance(true, integers), -instance(flip(dime), integers), -instance(heads, integers), -instance(hide(quarter), integers), -instance(quarter, integers), -instance(flip(quarter), integers)
,planning_problem_success
,dom_hides_coin_hidden(hide(dime)), dom_hides_coin_hidden(hide(quarter)), dom_hides_coin_hidden(hide(nickel))
,hides_coin_hidden(hide(dime), dime), hides_coin_hidden(hide(quarter), quarter), hides_coin_hidden(hide(nickel), nickel)
,sink(timeStep), sink(comparable_integers_subsort), sink(universe), sink(booleans), -sink(coins), -sink(flips), -sink(singleton_tails_sides___), -sink(sides), -sink(singleton_heads_sides___), -sink(hides), -sink(actions), -sink(integers)
,planning_problem_something_happened(3), planning_problem_something_happened(4), -planning_problem_something_happened(0), -planning_problem_something_happened(1), -planning_problem_something_happened(2), -planning_problem_something_happened(5)
,link(sides, universe), link(singleton_heads_sides___, sides), link(singleton_tails_sides___, sides), link(actions, universe), link(flips, actions), link(hides, actions), link(integers, universe), link(coins, universe), -link(timeStep, timeStep), -link(timeStep, coins), -link(timeStep, comparable_integers_subsort), -link(timeStep, flips), -link(timeStep, singleton_tails_sides___), -link(timeStep, universe), -link(timeStep, booleans), -link(timeStep, sides), -link(timeStep, singleton_heads_sides___), -link(timeStep, hides), -link(timeStep, actions), -link(timeStep, integers), -link(coins, timeStep), -link(coins, coins), -link(coins, comparable_integers_subsort), -link(coins, flips), -link(coins, singleton_tails_sides___), -link(coins, booleans), -link(coins, sides), -link(coins, singleton_heads_sides___), -link(coins, hides), -link(coins, actions), -link(coins, integers), -link(comparable_integers_subsort, timeStep), -link(comparable_integers_subsort, coins), -link(comparable_integers_subsort, comparable_integers_subsort), -link(comparable_integers_subsort, flips), -link(comparable_integers_subsort, singleton_tails_sides___), -link(comparable_integers_subsort, universe), -link(comparable_integers_subsort, booleans), -link(comparable_integers_subsort, sides), -link(comparable_integers_subsort, singleton_heads_sides___), -link(comparable_integers_subsort, hides), -link(comparable_integers_subsort, actions), -link(comparable_integers_subsort, integers), -link(flips, timeStep), -link(flips, coins), -link(flips, comparable_integers_subsort), -link(flips, flips), -link(flips, singleton_tails_sides___), -link(flips, universe), -link(flips, booleans), -link(flips, sides), -link(flips, singleton_heads_sides___), -link(flips, hides), -link(flips, integers), -link(singleton_tails_sides___, timeStep), -link(singleton_tails_sides___, coins), -link(singleton_tails_sides___, comparable_integers_subsort), -link(singleton_tails_sides___, flips), -link(singleton_tails_sides___, singleton_tails_sides___), -link(singleton_tails_sides___, universe), -link(singleton_tails_sides___, booleans), -link(singleton_tails_sides___, singleton_heads_sides___), -link(singleton_tails_sides___, hides), -link(singleton_tails_sides___, actions), -link(singleton_tails_sides___, integers), -link(universe, timeStep), -link(universe, coins), -link(universe, comparable_integers_subsort), -link(universe, flips), -link(universe, singleton_tails_sides___), -link(universe, universe), -link(universe, booleans), -link(universe, sides), -link(universe, singleton_heads_sides___), -link(universe, hides), -link(universe, actions), -link(universe, integers), -link(booleans, timeStep), -link(booleans, coins), -link(booleans, comparable_integers_subsort), -link(booleans, flips), -link(booleans, singleton_tails_sides___), -link(booleans, universe), -link(booleans, booleans), -link(booleans, sides), -link(booleans, singleton_heads_sides___), -link(booleans, hides), -link(booleans, actions), -link(booleans, integers), -link(sides, timeStep), -link(sides, coins), -link(sides, comparable_integers_subsort), -link(sides, flips), -link(sides, singleton_tails_sides___), -link(sides, booleans), -link(sides, sides), -link(sides, singleton_heads_sides___), -link(sides, hides), -link(sides, actions), -link(sides, integers), -link(singleton_heads_sides___, timeStep), -link(singleton_heads_sides___, coins), -link(singleton_heads_sides___, comparable_integers_subsort), -link(singleton_heads_sides___, flips), -link(singleton_heads_sides___, singleton_tails_sides___), -link(singleton_heads_sides___, universe), -link(singleton_heads_sides___, booleans), -link(singleton_heads_sides___, singleton_heads_sides___), -link(singleton_heads_sides___, hides), -link(singleton_heads_sides___, actions), -link(singleton_heads_sides___, integers), -link(hides, timeStep), -link(hides, coins), -link(hides, comparable_integers_subsort), -link(hides, flips), -link(hides, singleton_tails_sides___), -link(hides, universe), -link(hides, booleans), -link(hides, sides), -link(hides, singleton_heads_sides___), -link(hides, hides), -link(hides, integers), -link(actions, timeStep), -link(actions, coins), -link(actions, comparable_integers_subsort), -link(actions, flips), -link(actions, singleton_tails_sides___), -link(actions, booleans), -link(actions, sides), -link(actions, singleton_heads_sides___), -link(actions, hides), -link(actions, actions), -link(actions, integers), -link(integers, timeStep), -link(integers, coins), -link(integers, comparable_integers_subsort), -link(integers, flips), -link(integers, singleton_tails_sides___), -link(integers, booleans), -link(integers, sides), -link(integers, singleton_heads_sides___), -link(integers, hides), -link(integers, actions), -link(integers, integers)
,has_parent(sides), has_parent(singleton_heads_sides___), has_parent(singleton_tails_sides___), has_parent(actions), has_parent(flips), has_parent(hides), has_parent(integers), has_parent(coins), -has_parent(timeStep), -has_parent(comparable_integers_subsort), -has_parent(universe), -has_parent(booleans)
,source(timeStep), source(coins), source(comparable_integers_subsort), source(flips), source(singleton_tails_sides___), source(booleans), source(singleton_heads_sides___), source(hides), source(integers), -source(universe), -source(sides), -source(actions)
,planning_problem_goal(5), -planning_problem_goal(0), -planning_problem_goal(1), -planning_problem_goal(2), -planning_problem_goal(3), -planning_problem_goal(4)
,occurs(flip(dime), 2), occurs(flip(nickel), 3), occurs(flip(dime), 3), occurs(hide(quarter), 4)
,dom_flips_flipped_coin(flip(nickel)), dom_flips_flipped_coin(flip(dime)), dom_flips_flipped_coin(flip(quarter))
,happened(flip(dime), 2)
,observed(showing(dime), heads, 0), observed(showing(nickel), heads, 0), observed(showing(quarter), heads, 0)
,planning_problem_allow_actions(3), planning_problem_allow_actions(4), planning_problem_allow_actions(5)
,subsort(sides, universe), subsort(singleton_heads_sides___, sides), subsort(singleton_tails_sides___, sides), subsort(actions, universe), subsort(flips, actions), subsort(hides, actions), subsort(integers, universe), subsort(coins, universe), subsort(singleton_heads_sides___, universe), subsort(singleton_tails_sides___, universe), subsort(flips, universe), subsort(hides, universe), -subsort(timeStep, timeStep), -subsort(timeStep, coins), -subsort(timeStep, comparable_integers_subsort), -subsort(timeStep, flips), -subsort(timeStep, singleton_tails_sides___), -subsort(timeStep, universe), -subsort(timeStep, booleans), -subsort(timeStep, sides), -subsort(timeStep, singleton_heads_sides___), -subsort(timeStep, hides), -subsort(timeStep, actions), -subsort(timeStep, integers), -subsort(coins, timeStep), -subsort(coins, coins), -subsort(coins, comparable_integers_subsort), -subsort(coins, flips), -subsort(coins, singleton_tails_sides___), -subsort(coins, booleans), -subsort(coins, sides), -subsort(coins, singleton_heads_sides___), -subsort(coins, hides), -subsort(coins, actions), -subsort(coins, integers), -subsort(comparable_integers_subsort, timeStep), -subsort(comparable_integers_subsort, coins), -subsort(comparable_integers_subsort, comparable_integers_subsort), -subsort(comparable_integers_subsort, flips), -subsort(comparable_integers_subsort, singleton_tails_sides___), -subsort(comparable_integers_subsort, universe), -subsort(comparable_integers_subsort, booleans), -subsort(comparable_integers_subsort, sides), -subsort(comparable_integers_subsort, singleton_heads_sides___), -subsort(comparable_integers_subsort, hides), -subsort(comparable_integers_subsort, actions), -subsort(comparable_integers_subsort, integers), -subsort(flips, timeStep), -subsort(flips, coins), -subsort(flips, comparable_integers_subsort), -subsort(flips, flips), -subsort(flips, singleton_tails_sides___), -subsort(flips, booleans), -subsort(flips, sides), -subsort(flips, singleton_heads_sides___), -subsort(flips, hides), -subsort(flips, integers), -subsort(singleton_tails_sides___, timeStep), -subsort(singleton_tails_sides___, coins), -subsort(singleton_tails_sides___, comparable_integers_subsort), -subsort(singleton_tails_sides___, flips), -subsort(singleton_tails_sides___, singleton_tails_sides___), -subsort(singleton_tails_sides___, booleans), -subsort(singleton_tails_sides___, singleton_heads_sides___), -subsort(singleton_tails_sides___, hides), -subsort(singleton_tails_sides___, actions), -subsort(singleton_tails_sides___, integers), -subsort(universe, timeStep), -subsort(universe, coins), -subsort(universe, comparable_integers_subsort), -subsort(universe, flips), -subsort(universe, singleton_tails_sides___), -subsort(universe, universe), -subsort(universe, booleans), -subsort(universe, sides), -subsort(universe, singleton_heads_sides___), -subsort(universe, hides), -subsort(universe, actions), -subsort(universe, integers), -subsort(booleans, timeStep), -subsort(booleans, coins), -subsort(booleans, comparable_integers_subsort), -subsort(booleans, flips), -subsort(booleans, singleton_tails_sides___), -subsort(booleans, universe), -subsort(booleans, booleans), -subsort(booleans, sides), -subsort(booleans, singleton_heads_sides___), -subsort(booleans, hides), -subsort(booleans, actions), -subsort(booleans, integers), -subsort(sides, timeStep), -subsort(sides, coins), -subsort(sides, comparable_integers_subsort), -subsort(sides, flips), -subsort(sides, singleton_tails_sides___), -subsort(sides, booleans), -subsort(sides, sides), -subsort(sides, singleton_heads_sides___), -subsort(sides, hides), -subsort(sides, actions), -subsort(sides, integers), -subsort(singleton_heads_sides___, timeStep), -subsort(singleton_heads_sides___, coins), -subsort(singleton_heads_sides___, comparable_integers_subsort), -subsort(singleton_heads_sides___, flips), -subsort(singleton_heads_sides___, singleton_tails_sides___), -subsort(singleton_heads_sides___, booleans), -subsort(singleton_heads_sides___, singleton_heads_sides___), -subsort(singleton_heads_sides___, hides), -subsort(singleton_heads_sides___, actions), -subsort(singleton_heads_sides___, integers), -subsort(hides, timeStep), -subsort(hides, coins), -subsort(hides, comparable_integers_subsort), -subsort(hides, flips), -subsort(hides, singleton_tails_sides___), -subsort(hides, booleans), -subsort(hides, sides), -subsort(hides, singleton_heads_sides___), -subsort(hides, hides), -subsort(hides, integers), -subsort(actions, timeStep), -subsort(actions, coins), -subsort(actions, comparable_integers_subsort), -subsort(actions, flips), -subsort(actions, singleton_tails_sides___), -subsort(actions, booleans), -subsort(actions, sides), -subsort(actions, singleton_heads_sides___), -subsort(actions, hides), -subsort(actions, actions), -subsort(actions, integers), -subsort(integers, timeStep), -subsort(integers, coins), -subsort(integers, comparable_integers_subsort), -subsort(integers, flips), -subsort(integers, singleton_tails_sides___), -subsort(integers, booleans), -subsort(integers, sides), -subsort(integers, singleton_heads_sides___), -subsort(integers, hides), -subsort(integers, actions), -subsort(integers, integers)
,flips_flipped_coin(flip(nickel), nickel), flips_flipped_coin(flip(dime), dime), flips_flipped_coin(flip(quarter), quarter)
,dom_showing(dime, 0), dom_showing(nickel, 0), dom_showing(quarter, 0), dom_showing(dime, 1), dom_showing(nickel, 1), dom_showing(quarter, 1), dom_showing(dime, 2), dom_showing(nickel, 2), dom_showing(quarter, 2), dom_showing(dime, 3), dom_showing(nickel, 3), dom_showing(quarter, 3), dom_showing(dime, 4), dom_showing(nickel, 4), dom_showing(quarter, 4), dom_showing(dime, 5), dom_showing(nickel, 5), -dom_showing(quarter, 5)
,has_child(universe), has_child(sides), has_child(actions), -has_child(timeStep), -has_child(coins), -has_child(comparable_integers_subsort), -has_child(flips), -has_child(singleton_tails_sides___), -has_child(booleans), -has_child(singleton_heads_sides___), -has_child(hides), -has_child(integers)
,is_a(heads, sides), is_a(tails, sides), is_a(nickel, coins), is_a(dime, coins), is_a(quarter, coins), is_a(flip(nickel), flips), is_a(flip(dime), flips), is_a(flip(quarter), flips), is_a(hide(dime), hides), is_a(hide(nickel), hides), is_a(hide(quarter), hides), -is_a(hide(dime), timeStep), -is_a(nickel, timeStep), -is_a(flip(nickel), timeStep), -is_a(false, timeStep), -is_a(hide(nickel), timeStep), -is_a(dime, timeStep), -is_a(tails, timeStep), -is_a(true, timeStep), -is_a(flip(dime), timeStep), -is_a(heads, timeStep), -is_a(hide(quarter), timeStep), -is_a(quarter, timeStep), -is_a(flip(quarter), timeStep), -is_a(hide(dime), coins), -is_a(flip(nickel), coins), -is_a(false, coins), -is_a(hide(nickel), coins), -is_a(tails, coins), -is_a(true, coins), -is_a(flip(dime), coins), -is_a(heads, coins), -is_a(hide(quarter), coins), -is_a(flip(quarter), coins), -is_a(hide(dime), comparable_integers_subsort), -is_a(nickel, comparable_integers_subsort), -is_a(flip(nickel), comparable_integers_subsort), -is_a(false, comparable_integers_subsort), -is_a(hide(nickel), comparable_integers_subsort), -is_a(dime, comparable_integers_subsort), -is_a(tails, comparable_integers_subsort), -is_a(true, comparable_integers_subsort), -is_a(flip(dime), comparable_integers_subsort), -is_a(heads, comparable_integers_subsort), -is_a(hide(quarter), comparable_integers_subsort), -is_a(quarter, comparable_integers_subsort), -is_a(flip(quarter), comparable_integers_subsort), -is_a(hide(dime), flips), -is_a(nickel, flips), -is_a(false, flips), -is_a(hide(nickel), flips), -is_a(dime, flips), -is_a(tails, flips), -is_a(true, flips), -is_a(heads, flips), -is_a(hide(quarter), flips), -is_a(quarter, flips), -is_a(hide(dime), singleton_tails_sides___), -is_a(nickel, singleton_tails_sides___), -is_a(flip(nickel), singleton_tails_sides___), -is_a(false, singleton_tails_sides___), -is_a(hide(nickel), singleton_tails_sides___), -is_a(dime, singleton_tails_sides___), -is_a(tails, singleton_tails_sides___), -is_a(true, singleton_tails_sides___), -is_a(flip(dime), singleton_tails_sides___), -is_a(heads, singleton_tails_sides___), -is_a(hide(quarter), singleton_tails_sides___), -is_a(quarter, singleton_tails_sides___), -is_a(flip(quarter), singleton_tails_sides___), -is_a(hide(dime), universe), -is_a(nickel, universe), -is_a(flip(nickel), universe), -is_a(false, universe), -is_a(hide(nickel), universe), -is_a(dime, universe), -is_a(tails, universe), -is_a(true, universe), -is_a(flip(dime), universe), -is_a(heads, universe), -is_a(hide(quarter), universe), -is_a(quarter, universe), -is_a(flip(quarter), universe), -is_a(hide(dime), booleans), -is_a(nickel, booleans), -is_a(flip(nickel), booleans), -is_a(false, booleans), -is_a(hide(nickel), booleans), -is_a(dime, booleans), -is_a(tails, booleans), -is_a(true, booleans), -is_a(flip(dime), booleans), -is_a(heads, booleans), -is_a(hide(quarter), booleans), -is_a(quarter, booleans), -is_a(flip(quarter), booleans), -is_a(hide(dime), sides), -is_a(nickel, sides), -is_a(flip(nickel), sides), -is_a(false, sides), -is_a(hide(nickel), sides), -is_a(dime, sides), -is_a(true, sides), -is_a(flip(dime), sides), -is_a(hide(quarter), sides), -is_a(quarter, sides), -is_a(flip(quarter), sides), -is_a(hide(dime), singleton_heads_sides___), -is_a(nickel, singleton_heads_sides___), -is_a(flip(nickel), singleton_heads_sides___), -is_a(false, singleton_heads_sides___), -is_a(hide(nickel), singleton_heads_sides___), -is_a(dime, singleton_heads_sides___), -is_a(tails, singleton_heads_sides___), -is_a(true, singleton_heads_sides___), -is_a(flip(dime), singleton_heads_sides___), -is_a(heads, singleton_heads_sides___), -is_a(hide(quarter), singleton_heads_sides___), -is_a(quarter, singleton_heads_sides___), -is_a(flip(quarter), singleton_heads_sides___), -is_a(nickel, hides), -is_a(flip(nickel), hides), -is_a(false, hides), -is_a(dime, hides), -is_a(tails, hides), -is_a(true, hides), -is_a(flip(dime), hides), -is_a(heads, hides), -is_a(quarter, hides), -is_a(flip(quarter), hides), -is_a(hide(dime), actions), -is_a(nickel, actions), -is_a(flip(nickel), actions), -is_a(false, actions), -is_a(hide(nickel), actions), -is_a(dime, actions), -is_a(tails, actions), -is_a(true, actions), -is_a(flip(dime), actions), -is_a(heads, actions), -is_a(hide(quarter), actions), -is_a(quarter, actions), -is_a(flip(quarter), actions), -is_a(hide(dime), integers), -is_a(nickel, integers), -is_a(flip(nickel), integers), -is_a(false, integers), -is_a(hide(nickel), integers), -is_a(dime, integers), -is_a(tails, integers), -is_a(true, integers), -is_a(flip(dime), integers), -is_a(heads, integers), -is_a(hide(quarter), integers), -is_a(quarter, integers), -is_a(flip(quarter), integers)
,showing(dime, heads, 0), showing(nickel, heads, 0), showing(quarter, heads, 0), showing(dime, heads, 1), showing(nickel, heads, 1), showing(quarter, heads, 1), showing(dime, heads, 2), showing(nickel, heads, 2), showing(quarter, heads, 2), showing(nickel, heads, 3), showing(quarter, heads, 3), showing(dime, tails, 3), showing(dime, heads, 4), showing(quarter, heads, 4), showing(nickel, tails, 4), showing(dime, heads, 5), showing(nickel, tails, 5), -showing(dime, tails, 0), -showing(nickel, tails, 0), -showing(quarter, tails, 0), -showing(dime, tails, 1), -showing(nickel, tails, 1), -showing(quarter, tails, 1), -showing(dime, tails, 2), -showing(nickel, tails, 2), -showing(quarter, tails, 2), -showing(nickel, tails, 3), -showing(quarter, tails, 3), -showing(dime, tails, 4), -showing(quarter, tails, 4), -showing(dime, tails, 5), -showing(dime, heads, 3), -showing(nickel, heads, 4), -showing(nickel, heads, 5)
,current_time(3)
}

% Answer Set 5 of 7
{
 instance(heads, sides), instance(tails, sides), instance(nickel, coins), instance(dime, coins), instance(quarter, coins), instance(flip(nickel), flips), instance(flip(dime), flips), instance(flip(quarter), flips), instance(hide(dime), hides), instance(hide(nickel), hides), instance(hide(quarter), hides), instance(heads, universe), instance(tails, universe), instance(nickel, universe), instance(dime, universe), instance(quarter, universe), instance(flip(nickel), actions), instance(flip(dime), actions), instance(flip(quarter), actions), instance(hide(dime), actions), instance(hide(nickel), actions), instance(hide(quarter), actions), instance(flip(nickel), universe), instance(flip(dime), universe), instance(flip(quarter), universe), instance(hide(dime), universe), instance(hide(nickel), universe), instance(hide(quarter), universe), -instance(hide(dime), timeStep), -instance(nickel, timeStep), -instance(flip(nickel), timeStep), -instance(false, timeStep), -instance(hide(nickel), timeStep), -instance(dime, timeStep), -instance(tails, timeStep), -instance(true, timeStep), -instance(flip(dime), timeStep), -instance(heads, timeStep), -instance(hide(quarter), timeStep), -instance(quarter, timeStep), -instance(flip(quarter), timeStep), -instance(hide(dime), coins), -instance(flip(nickel), coins), -instance(false, coins), -instance(hide(nickel), coins), -instance(tails, coins), -instance(true, coins), -instance(flip(dime), coins), -instance(heads, coins), -instance(hide(quarter), coins), -instance(flip(quarter), coins), -instance(hide(dime), comparable_integers_subsort), -instance(nickel, comparable_integers_subsort), -instance(flip(nickel), comparable_integers_subsort), -instance(false, comparable_integers_subsort), -instance(hide(nickel), comparable_integers_subsort), -instance(dime, comparable_integers_subsort), -instance(tails, comparable_integers_subsort), -instance(true, comparable_integers_subsort), -instance(flip(dime), comparable_integers_subsort), -instance(heads, comparable_integers_subsort), -instance(hide(quarter), comparable_integers_subsort), -instance(quarter, comparable_integers_subsort), -instance(flip(quarter), comparable_integers_subsort), -instance(hide(dime), flips), -instance(nickel, flips), -instance(false, flips), -instance(hide(nickel), flips), -instance(dime, flips), -instance(tails, flips), -instance(true, flips), -instance(heads, flips), -instance(hide(quarter), flips), -instance(quarter, flips), -instance(hide(dime), singleton_tails_sides___), -instance(nickel, singleton_tails_sides___), -instance(flip(nickel), singleton_tails_sides___), -instance(false, singleton_tails_sides___), -instance(hide(nickel), singleton_tails_sides___), -instance(dime, singleton_tails_sides___), -instance(tails, singleton_tails_sides___), -instance(true, singleton_tails_sides___), -instance(flip(dime), singleton_tails_sides___), -instance(heads, singleton_tails_sides___), -instance(hide(quarter), singleton_tails_sides___), -instance(quarter, singleton_tails_sides___), -instance(flip(quarter), singleton_tails_sides___), -instance(false, universe), -instance(true, universe), -instance(hide(dime), booleans), -instance(nickel, booleans), -instance(flip(nickel), booleans), -instance(false, booleans), -instance(hide(nickel), booleans), -instance(dime, booleans), -instance(tails, booleans), -instance(true, booleans), -instance(flip(dime), booleans), -instance(heads, booleans), -instance(hide(quarter), booleans), -instance(quarter, booleans), -instance(flip(quarter), booleans), -instance(hide(dime), sides), -instance(nickel, sides), -instance(flip(nickel), sides), -instance(false, sides), -instance(hide(nickel), sides), -instance(dime, sides), -instance(true, sides), -instance(flip(dime), sides), -instance(hide(quarter), sides), -instance(quarter, sides), -instance(flip(quarter), sides), -instance(hide(dime), singleton_heads_sides___), -instance(nickel, singleton_heads_sides___), -instance(flip(nickel), singleton_heads_sides___), -instance(false, singleton_heads_sides___), -instance(hide(nickel), singleton_heads_sides___), -instance(dime, singleton_heads_sides___), -instance(tails, singleton_heads_sides___), -instance(true, singleton_heads_sides___), -instance(flip(dime), singleton_heads_sides___), -instance(heads, singleton_heads_sides___), -instance(hide(quarter), singleton_heads_sides___), -instance(quarter, singleton_heads_sides___), -instance(flip(quarter), singleton_heads_sides___), -instance(nickel, hides), -instance(flip(nickel), hides), -instance(false, hides), -instance(dime, hides), -instance(tails, hides), -instance(true, hides), -instance(flip(dime), hides), -instance(heads, hides), -instance(quarter, hides), -instance(flip(quarter), hides), -instance(nickel, actions), -instance(false, actions), -instance(dime, actions), -instance(tails, actions), -instance(true, actions), -instance(heads, actions), -instance(quarter, actions), -instance(hide(dime), integers), -instance(nickel, integers), -instance(flip(nickel), integers), -instance(false, integers), -instance(hide(nickel), integers), -instance(dime, integers), -instance(tails, integers), -instance(true, integers), -instance(flip(dime), integers), -instance(heads, integers), -instance(hide(quarter), integers), -instance(quarter, integers), -instance(flip(quarter), integers)
,planning_problem_success
,dom_hides_coin_hidden(hide(dime)), dom_hides_coin_hidden(hide(quarter)), dom_hides_coin_hidden(hide(nickel))
,hides_coin_hidden(hide(dime), dime), hides_coin_hidden(hide(quarter), quarter), hides_coin_hidden(hide(nickel), nickel)
,sink(timeStep), sink(comparable_integers_subsort), sink(universe), sink(booleans), -sink(coins), -sink(flips), -sink(singleton_tails_sides___), -sink(sides), -sink(singleton_heads_sides___), -sink(hides), -sink(actions), -sink(integers)
,planning_problem_something_happened(3), planning_problem_something_happened(4), -planning_problem_something_happened(0), -planning_problem_something_happened(1), -planning_problem_something_happened(2), -planning_problem_something_happened(5)
,link(sides, universe), link(singleton_heads_sides___, sides), link(singleton_tails_sides___, sides), link(actions, universe), link(flips, actions), link(hides, actions), link(integers, universe), link(coins, universe), -link(timeStep, timeStep), -link(timeStep, coins), -link(timeStep, comparable_integers_subsort), -link(timeStep, flips), -link(timeStep, singleton_tails_sides___), -link(timeStep, universe), -link(timeStep, booleans), -link(timeStep, sides), -link(timeStep, singleton_heads_sides___), -link(timeStep, hides), -link(timeStep, actions), -link(timeStep, integers), -link(coins, timeStep), -link(coins, coins), -link(coins, comparable_integers_subsort), -link(coins, flips), -link(coins, singleton_tails_sides___), -link(coins, booleans), -link(coins, sides), -link(coins, singleton_heads_sides___), -link(coins, hides), -link(coins, actions), -link(coins, integers), -link(comparable_integers_subsort, timeStep), -link(comparable_integers_subsort, coins), -link(comparable_integers_subsort, comparable_integers_subsort), -link(comparable_integers_subsort, flips), -link(comparable_integers_subsort, singleton_tails_sides___), -link(comparable_integers_subsort, universe), -link(comparable_integers_subsort, booleans), -link(comparable_integers_subsort, sides), -link(comparable_integers_subsort, singleton_heads_sides___), -link(comparable_integers_subsort, hides), -link(comparable_integers_subsort, actions), -link(comparable_integers_subsort, integers), -link(flips, timeStep), -link(flips, coins), -link(flips, comparable_integers_subsort), -link(flips, flips), -link(flips, singleton_tails_sides___), -link(flips, universe), -link(flips, booleans), -link(flips, sides), -link(flips, singleton_heads_sides___), -link(flips, hides), -link(flips, integers), -link(singleton_tails_sides___, timeStep), -link(singleton_tails_sides___, coins), -link(singleton_tails_sides___, comparable_integers_subsort), -link(singleton_tails_sides___, flips), -link(singleton_tails_sides___, singleton_tails_sides___), -link(singleton_tails_sides___, universe), -link(singleton_tails_sides___, booleans), -link(singleton_tails_sides___, singleton_heads_sides___), -link(singleton_tails_sides___, hides), -link(singleton_tails_sides___, actions), -link(singleton_tails_sides___, integers), -link(universe, timeStep), -link(universe, coins), -link(universe, comparable_integers_subsort), -link(universe, flips), -link(universe, singleton_tails_sides___), -link(universe, universe), -link(universe, booleans), -link(universe, sides), -link(universe, singleton_heads_sides___), -link(universe, hides), -link(universe, actions), -link(universe, integers), -link(booleans, timeStep), -link(booleans, coins), -link(booleans, comparable_integers_subsort), -link(booleans, flips), -link(booleans, singleton_tails_sides___), -link(booleans, universe), -link(booleans, booleans), -link(booleans, sides), -link(booleans, singleton_heads_sides___), -link(booleans, hides), -link(booleans, actions), -link(booleans, integers), -link(sides, timeStep), -link(sides, coins), -link(sides, comparable_integers_subsort), -link(sides, flips), -link(sides, singleton_tails_sides___), -link(sides, booleans), -link(sides, sides), -link(sides, singleton_heads_sides___), -link(sides, hides), -link(sides, actions), -link(sides, integers), -link(singleton_heads_sides___, timeStep), -link(singleton_heads_sides___, coins), -link(singleton_heads_sides___, comparable_integers_subsort), -link(singleton_heads_sides___, flips), -link(singleton_heads_sides___, singleton_tails_sides___), -link(singleton_heads_sides___, universe), -link(singleton_heads_sides___, booleans), -link(singleton_heads_sides___, singleton_heads_sides___), -link(singleton_heads_sides___, hides), -link(singleton_heads_sides___, actions), -link(singleton_heads_sides___, integers), -link(hides, timeStep), -link(hides, coins), -link(hides, comparable_integers_subsort), -link(hides, flips), -link(hides, singleton_tails_sides___), -link(hides, universe), -link(hides, booleans), -link(hides, sides), -link(hides, singleton_heads_sides___), -link(hides, hides), -link(hides, integers), -link(actions, timeStep), -link(actions, coins), -link(actions, comparable_integers_subsort), -link(actions, flips), -link(actions, singleton_tails_sides___), -link(actions, booleans), -link(actions, sides), -link(actions, singleton_heads_sides___), -link(actions, hides), -link(actions, actions), -link(actions, integers), -link(integers, timeStep), -link(integers, coins), -link(integers, comparable_integers_subsort), -link(integers, flips), -link(integers, singleton_tails_sides___), -link(integers, booleans), -link(integers, sides), -link(integers, singleton_heads_sides___), -link(integers, hides), -link(integers, actions), -link(integers, integers)
,has_parent(sides), has_parent(singleton_heads_sides___), has_parent(singleton_tails_sides___), has_parent(actions), has_parent(flips), has_parent(hides), has_parent(integers), has_parent(coins), -has_parent(timeStep), -has_parent(comparable_integers_subsort), -has_parent(universe), -has_parent(booleans)
,source(timeStep), source(coins), source(comparable_integers_subsort), source(flips), source(singleton_tails_sides___), source(booleans), source(singleton_heads_sides___), source(hides), source(integers), -source(universe), -source(sides), -source(actions)
,planning_problem_goal(5), -planning_problem_goal(0), -planning_problem_goal(1), -planning_problem_goal(2), -planning_problem_goal(3), -planning_problem_goal(4)
,occurs(flip(dime), 2), occurs(flip(dime), 3), occurs(flip(nickel), 4), occurs(hide(quarter), 4)
,dom_flips_flipped_coin(flip(nickel)), dom_flips_flipped_coin(flip(dime)), dom_flips_flipped_coin(flip(quarter))
,happened(flip(dime), 2)
,observed(showing(dime), heads, 0), observed(showing(nickel), heads, 0), observed(showing(quarter), heads, 0)
,planning_problem_allow_actions(3), planning_problem_allow_actions(4), planning_problem_allow_actions(5)
,subsort(sides, universe), subsort(singleton_heads_sides___, sides), subsort(singleton_tails_sides___, sides), subsort(actions, universe), subsort(flips, actions), subsort(hides, actions), subsort(integers, universe), subsort(coins, universe), subsort(singleton_heads_sides___, universe), subsort(singleton_tails_sides___, universe), subsort(flips, universe), subsort(hides, universe), -subsort(timeStep, timeStep), -subsort(timeStep, coins), -subsort(timeStep, comparable_integers_subsort), -subsort(timeStep, flips), -subsort(timeStep, singleton_tails_sides___), -subsort(timeStep, universe), -subsort(timeStep, booleans), -subsort(timeStep, sides), -subsort(timeStep, singleton_heads_sides___), -subsort(timeStep, hides), -subsort(timeStep, actions), -subsort(timeStep, integers), -subsort(coins, timeStep), -subsort(coins, coins), -subsort(coins, comparable_integers_subsort), -subsort(coins, flips), -subsort(coins, singleton_tails_sides___), -subsort(coins, booleans), -subsort(coins, sides), -subsort(coins, singleton_heads_sides___), -subsort(coins, hides), -subsort(coins, actions), -subsort(coins, integers), -subsort(comparable_integers_subsort, timeStep), -subsort(comparable_integers_subsort, coins), -subsort(comparable_integers_subsort, comparable_integers_subsort), -subsort(comparable_integers_subsort, flips), -subsort(comparable_integers_subsort, singleton_tails_sides___), -subsort(comparable_integers_subsort, universe), -subsort(comparable_integers_subsort, booleans), -subsort(comparable_integers_subsort, sides), -subsort(comparable_integers_subsort, singleton_heads_sides___), -subsort(comparable_integers_subsort, hides), -subsort(comparable_integers_subsort, actions), -subsort(comparable_integers_subsort, integers), -subsort(flips, timeStep), -subsort(flips, coins), -subsort(flips, comparable_integers_subsort), -subsort(flips, flips), -subsort(flips, singleton_tails_sides___), -subsort(flips, booleans), -subsort(flips, sides), -subsort(flips, singleton_heads_sides___), -subsort(flips, hides), -subsort(flips, integers), -subsort(singleton_tails_sides___, timeStep), -subsort(singleton_tails_sides___, coins), -subsort(singleton_tails_sides___, comparable_integers_subsort), -subsort(singleton_tails_sides___, flips), -subsort(singleton_tails_sides___, singleton_tails_sides___), -subsort(singleton_tails_sides___, booleans), -subsort(singleton_tails_sides___, singleton_heads_sides___), -subsort(singleton_tails_sides___, hides), -subsort(singleton_tails_sides___, actions), -subsort(singleton_tails_sides___, integers), -subsort(universe, timeStep), -subsort(universe, coins), -subsort(universe, comparable_integers_subsort), -subsort(universe, flips), -subsort(universe, singleton_tails_sides___), -subsort(universe, universe), -subsort(universe, booleans), -subsort(universe, sides), -subsort(universe, singleton_heads_sides___), -subsort(universe, hides), -subsort(universe, actions), -subsort(universe, integers), -subsort(booleans, timeStep), -subsort(booleans, coins), -subsort(booleans, comparable_integers_subsort), -subsort(booleans, flips), -subsort(booleans, singleton_tails_sides___), -subsort(booleans, universe), -subsort(booleans, booleans), -subsort(booleans, sides), -subsort(booleans, singleton_heads_sides___), -subsort(booleans, hides), -subsort(booleans, actions), -subsort(booleans, integers), -subsort(sides, timeStep), -subsort(sides, coins), -subsort(sides, comparable_integers_subsort), -subsort(sides, flips), -subsort(sides, singleton_tails_sides___), -subsort(sides, booleans), -subsort(sides, sides), -subsort(sides, singleton_heads_sides___), -subsort(sides, hides), -subsort(sides, actions), -subsort(sides, integers), -subsort(singleton_heads_sides___, timeStep), -subsort(singleton_heads_sides___, coins), -subsort(singleton_heads_sides___, comparable_integers_subsort), -subsort(singleton_heads_sides___, flips), -subsort(singleton_heads_sides___, singleton_tails_sides___), -subsort(singleton_heads_sides___, booleans), -subsort(singleton_heads_sides___, singleton_heads_sides___), -subsort(singleton_heads_sides___, hides), -subsort(singleton_heads_sides___, actions), -subsort(singleton_heads_sides___, integers), -subsort(hides, timeStep), -subsort(hides, coins), -subsort(hides, comparable_integers_subsort), -subsort(hides, flips), -subsort(hides, singleton_tails_sides___), -subsort(hides, booleans), -subsort(hides, sides), -subsort(hides, singleton_heads_sides___), -subsort(hides, hides), -subsort(hides, integers), -subsort(actions, timeStep), -subsort(actions, coins), -subsort(actions, comparable_integers_subsort), -subsort(actions, flips), -subsort(actions, singleton_tails_sides___), -subsort(actions, booleans), -subsort(actions, sides), -subsort(actions, singleton_heads_sides___), -subsort(actions, hides), -subsort(actions, actions), -subsort(actions, integers), -subsort(integers, timeStep), -subsort(integers, coins), -subsort(integers, comparable_integers_subsort), -subsort(integers, flips), -subsort(integers, singleton_tails_sides___), -subsort(integers, booleans), -subsort(integers, sides), -subsort(integers, singleton_heads_sides___), -subsort(integers, hides), -subsort(integers, actions), -subsort(integers, integers)
,flips_flipped_coin(flip(nickel), nickel), flips_flipped_coin(flip(dime), dime), flips_flipped_coin(flip(quarter), quarter)
,dom_showing(dime, 0), dom_showing(nickel, 0), dom_showing(quarter, 0), dom_showing(dime, 1), dom_showing(nickel, 1), dom_showing(quarter, 1), dom_showing(dime, 2), dom_showing(nickel, 2), dom_showing(quarter, 2), dom_showing(dime, 3), dom_showing(nickel, 3), dom_showing(quarter, 3), dom_showing(dime, 4), dom_showing(nickel, 4), dom_showing(quarter, 4), dom_showing(dime, 5), dom_showing(nickel, 5), -dom_showing(quarter, 5)
,has_child(universe), has_child(sides), has_child(actions), -has_child(timeStep), -has_child(coins), -has_child(comparable_integers_subsort), -has_child(flips), -has_child(singleton_tails_sides___), -has_child(booleans), -has_child(singleton_heads_sides___), -has_child(hides), -has_child(integers)
,is_a(heads, sides), is_a(tails, sides), is_a(nickel, coins), is_a(dime, coins), is_a(quarter, coins), is_a(flip(nickel), flips), is_a(flip(dime), flips), is_a(flip(quarter), flips), is_a(hide(dime), hides), is_a(hide(nickel), hides), is_a(hide(quarter), hides), -is_a(hide(dime), timeStep), -is_a(nickel, timeStep), -is_a(flip(nickel), timeStep), -is_a(false, timeStep), -is_a(hide(nickel), timeStep), -is_a(dime, timeStep), -is_a(tails, timeStep), -is_a(true, timeStep), -is_a(flip(dime), timeStep), -is_a(heads, timeStep), -is_a(hide(quarter), timeStep), -is_a(quarter, timeStep), -is_a(flip(quarter), timeStep), -is_a(hide(dime), coins), -is_a(flip(nickel), coins), -is_a(false, coins), -is_a(hide(nickel), coins), -is_a(tails, coins), -is_a(true, coins), -is_a(flip(dime), coins), -is_a(heads, coins), -is_a(hide(quarter), coins), -is_a(flip(quarter), coins), -is_a(hide(dime), comparable_integers_subsort), -is_a(nickel, comparable_integers_subsort), -is_a(flip(nickel), comparable_integers_subsort), -is_a(false, comparable_integers_subsort), -is_a(hide(nickel), comparable_integers_subsort), -is_a(dime, comparable_integers_subsort), -is_a(tails, comparable_integers_subsort), -is_a(true, comparable_integers_subsort), -is_a(flip(dime), comparable_integers_subsort), -is_a(heads, comparable_integers_subsort), -is_a(hide(quarter), comparable_integers_subsort), -is_a(quarter, comparable_integers_subsort), -is_a(flip(quarter), comparable_integers_subsort), -is_a(hide(dime), flips), -is_a(nickel, flips), -is_a(false, flips), -is_a(hide(nickel), flips), -is_a(dime, flips), -is_a(tails, flips), -is_a(true, flips), -is_a(heads, flips), -is_a(hide(quarter), flips), -is_a(quarter, flips), -is_a(hide(dime), singleton_tails_sides___), -is_a(nickel, singleton_tails_sides___), -is_a(flip(nickel), singleton_tails_sides___), -is_a(false, singleton_tails_sides___), -is_a(hide(nickel), singleton_tails_sides___), -is_a(dime, singleton_tails_sides___), -is_a(tails, singleton_tails_sides___), -is_a(true, singleton_tails_sides___), -is_a(flip(dime), singleton_tails_sides___), -is_a(heads, singleton_tails_sides___), -is_a(hide(quarter), singleton_tails_sides___), -is_a(quarter, singleton_tails_sides___), -is_a(flip(quarter), singleton_tails_sides___), -is_a(hide(dime), universe), -is_a(nickel, universe), -is_a(flip(nickel), universe), -is_a(false, universe), -is_a(hide(nickel), universe), -is_a(dime, universe), -is_a(tails, universe), -is_a(true, universe), -is_a(flip(dime), universe), -is_a(heads, universe), -is_a(hide(quarter), universe), -is_a(quarter, universe), -is_a(flip(quarter), universe), -is_a(hide(dime), booleans), -is_a(nickel, booleans), -is_a(flip(nickel), booleans), -is_a(false, booleans), -is_a(hide(nickel), booleans), -is_a(dime, booleans), -is_a(tails, booleans), -is_a(true, booleans), -is_a(flip(dime), booleans), -is_a(heads, booleans), -is_a(hide(quarter), booleans), -is_a(quarter, booleans), -is_a(flip(quarter), booleans), -is_a(hide(dime), sides), -is_a(nickel, sides), -is_a(flip(nickel), sides), -is_a(false, sides), -is_a(hide(nickel), sides), -is_a(dime, sides), -is_a(true, sides), -is_a(flip(dime), sides), -is_a(hide(quarter), sides), -is_a(quarter, sides), -is_a(flip(quarter), sides), -is_a(hide(dime), singleton_heads_sides___), -is_a(nickel, singleton_heads_sides___), -is_a(flip(nickel), singleton_heads_sides___), -is_a(false, singleton_heads_sides___), -is_a(hide(nickel), singleton_heads_sides___), -is_a(dime, singleton_heads_sides___), -is_a(tails, singleton_heads_sides___), -is_a(true, singleton_heads_sides___), -is_a(flip(dime), singleton_heads_sides___), -is_a(heads, singleton_heads_sides___), -is_a(hide(quarter), singleton_heads_sides___), -is_a(quarter, singleton_heads_sides___), -is_a(flip(quarter), singleton_heads_sides___), -is_a(nickel, hides), -is_a(flip(nickel), hides), -is_a(false, hides), -is_a(dime, hides), -is_a(tails, hides), -is_a(true, hides), -is_a(flip(dime), hides), -is_a(heads, hides), -is_a(quarter, hides), -is_a(flip(quarter), hides), -is_a(hide(dime), actions), -is_a(nickel, actions), -is_a(flip(nickel), actions), -is_a(false, actions), -is_a(hide(nickel), actions), -is_a(dime, actions), -is_a(tails, actions), -is_a(true, actions), -is_a(flip(dime), actions), -is_a(heads, actions), -is_a(hide(quarter), actions), -is_a(quarter, actions), -is_a(flip(quarter), actions), -is_a(hide(dime), integers), -is_a(nickel, integers), -is_a(flip(nickel), integers), -is_a(false, integers), -is_a(hide(nickel), integers), -is_a(dime, integers), -is_a(tails, integers), -is_a(true, integers), -is_a(flip(dime), integers), -is_a(heads, integers), -is_a(hide(quarter), integers), -is_a(quarter, integers), -is_a(flip(quarter), integers)
,showing(dime, heads, 0), showing(nickel, heads, 0), showing(quarter, heads, 0), showing(dime, heads, 1), showing(nickel, heads, 1), showing(quarter, heads, 1), showing(dime, heads, 2), showing(nickel, heads, 2), showing(quarter, heads, 2), showing(nickel, heads, 3), showing(quarter, heads, 3), showing(dime, tails, 3), showing(dime, heads, 4), showing(nickel, heads, 4), showing(quarter, heads, 4), showing(dime, heads, 5), showing(nickel, tails, 5), -showing(dime, tails, 0), -showing(nickel, tails, 0), -showing(quarter, tails, 0), -showing(dime, tails, 1), -showing(nickel, tails, 1), -showing(quarter, tails, 1), -showing(dime, tails, 2), -showing(nickel, tails, 2), -showing(quarter, tails, 2), -showing(nickel, tails, 3), -showing(quarter, tails, 3), -showing(dime, tails, 4), -showing(nickel, tails, 4), -showing(quarter, tails, 4), -showing(dime, tails, 5), -showing(dime, heads, 3), -showing(nickel, heads, 5)
,current_time(3)
}

% Answer Set 6 of 7
{
 instance(heads, sides), instance(tails, sides), instance(nickel, coins), instance(dime, coins), instance(quarter, coins), instance(flip(nickel), flips), instance(flip(dime), flips), instance(flip(quarter), flips), instance(hide(dime), hides), instance(hide(nickel), hides), instance(hide(quarter), hides), instance(heads, universe), instance(tails, universe), instance(nickel, universe), instance(dime, universe), instance(quarter, universe), instance(flip(nickel), actions), instance(flip(dime), actions), instance(flip(quarter), actions), instance(hide(dime), actions), instance(hide(nickel), actions), instance(hide(quarter), actions), instance(flip(nickel), universe), instance(flip(dime), universe), instance(flip(quarter), universe), instance(hide(dime), universe), instance(hide(nickel), universe), instance(hide(quarter), universe), -instance(hide(dime), timeStep), -instance(nickel, timeStep), -instance(flip(nickel), timeStep), -instance(false, timeStep), -instance(hide(nickel), timeStep), -instance(dime, timeStep), -instance(tails, timeStep), -instance(true, timeStep), -instance(flip(dime), timeStep), -instance(heads, timeStep), -instance(hide(quarter), timeStep), -instance(quarter, timeStep), -instance(flip(quarter), timeStep), -instance(hide(dime), coins), -instance(flip(nickel), coins), -instance(false, coins), -instance(hide(nickel), coins), -instance(tails, coins), -instance(true, coins), -instance(flip(dime), coins), -instance(heads, coins), -instance(hide(quarter), coins), -instance(flip(quarter), coins), -instance(hide(dime), comparable_integers_subsort), -instance(nickel, comparable_integers_subsort), -instance(flip(nickel), comparable_integers_subsort), -instance(false, comparable_integers_subsort), -instance(hide(nickel), comparable_integers_subsort), -instance(dime, comparable_integers_subsort), -instance(tails, comparable_integers_subsort), -instance(true, comparable_integers_subsort), -instance(flip(dime), comparable_integers_subsort), -instance(heads, comparable_integers_subsort), -instance(hide(quarter), comparable_integers_subsort), -instance(quarter, comparable_integers_subsort), -instance(flip(quarter), comparable_integers_subsort), -instance(hide(dime), flips), -instance(nickel, flips), -instance(false, flips), -instance(hide(nickel), flips), -instance(dime, flips), -instance(tails, flips), -instance(true, flips), -instance(heads, flips), -instance(hide(quarter), flips), -instance(quarter, flips), -instance(hide(dime), singleton_tails_sides___), -instance(nickel, singleton_tails_sides___), -instance(flip(nickel), singleton_tails_sides___), -instance(false, singleton_tails_sides___), -instance(hide(nickel), singleton_tails_sides___), -instance(dime, singleton_tails_sides___), -instance(tails, singleton_tails_sides___), -instance(true, singleton_tails_sides___), -instance(flip(dime), singleton_tails_sides___), -instance(heads, singleton_tails_sides___), -instance(hide(quarter), singleton_tails_sides___), -instance(quarter, singleton_tails_sides___), -instance(flip(quarter), singleton_tails_sides___), -instance(false, universe), -instance(true, universe), -instance(hide(dime), booleans), -instance(nickel, booleans), -instance(flip(nickel), booleans), -instance(false, booleans), -instance(hide(nickel), booleans), -instance(dime, booleans), -instance(tails, booleans), -instance(true, booleans), -instance(flip(dime), booleans), -instance(heads, booleans), -instance(hide(quarter), booleans), -instance(quarter, booleans), -instance(flip(quarter), booleans), -instance(hide(dime), sides), -instance(nickel, sides), -instance(flip(nickel), sides), -instance(false, sides), -instance(hide(nickel), sides), -instance(dime, sides), -instance(true, sides), -instance(flip(dime), sides), -instance(hide(quarter), sides), -instance(quarter, sides), -instance(flip(quarter), sides), -instance(hide(dime), singleton_heads_sides___), -instance(nickel, singleton_heads_sides___), -instance(flip(nickel), singleton_heads_sides___), -instance(false, singleton_heads_sides___), -instance(hide(nickel), singleton_heads_sides___), -instance(dime, singleton_heads_sides___), -instance(tails, singleton_heads_sides___), -instance(true, singleton_heads_sides___), -instance(flip(dime), singleton_heads_sides___), -instance(heads, singleton_heads_sides___), -instance(hide(quarter), singleton_heads_sides___), -instance(quarter, singleton_heads_sides___), -instance(flip(quarter), singleton_heads_sides___), -instance(nickel, hides), -instance(flip(nickel), hides), -instance(false, hides), -instance(dime, hides), -instance(tails, hides), -instance(true, hides), -instance(flip(dime), hides), -instance(heads, hides), -instance(quarter, hides), -instance(flip(quarter), hides), -instance(nickel, actions), -instance(false, actions), -instance(dime, actions), -instance(tails, actions), -instance(true, actions), -instance(heads, actions), -instance(quarter, actions), -instance(hide(dime), integers), -instance(nickel, integers), -instance(flip(nickel), integers), -instance(false, integers), -instance(hide(nickel), integers), -instance(dime, integers), -instance(tails, integers), -instance(true, integers), -instance(flip(dime), integers), -instance(heads, integers), -instance(hide(quarter), integers), -instance(quarter, integers), -instance(flip(quarter), integers)
,planning_problem_success
,dom_hides_coin_hidden(hide(dime)), dom_hides_coin_hidden(hide(quarter)), dom_hides_coin_hidden(hide(nickel))
,hides_coin_hidden(hide(dime), dime), hides_coin_hidden(hide(quarter), quarter), hides_coin_hidden(hide(nickel), nickel)
,sink(timeStep), sink(comparable_integers_subsort), sink(universe), sink(booleans), -sink(coins), -sink(flips), -sink(singleton_tails_sides___), -sink(sides), -sink(singleton_heads_sides___), -sink(hides), -sink(actions), -sink(integers)
,planning_problem_something_happened(3), -planning_problem_something_happened(0), -planning_problem_something_happened(1), -planning_problem_something_happened(2), -planning_problem_something_happened(4), -planning_problem_something_happened(5)
,link(sides, universe), link(singleton_heads_sides___, sides), link(singleton_tails_sides___, sides), link(actions, universe), link(flips, actions), link(hides, actions), link(integers, universe), link(coins, universe), -link(timeStep, timeStep), -link(timeStep, coins), -link(timeStep, comparable_integers_subsort), -link(timeStep, flips), -link(timeStep, singleton_tails_sides___), -link(timeStep, universe), -link(timeStep, booleans), -link(timeStep, sides), -link(timeStep, singleton_heads_sides___), -link(timeStep, hides), -link(timeStep, actions), -link(timeStep, integers), -link(coins, timeStep), -link(coins, coins), -link(coins, comparable_integers_subsort), -link(coins, flips), -link(coins, singleton_tails_sides___), -link(coins, booleans), -link(coins, sides), -link(coins, singleton_heads_sides___), -link(coins, hides), -link(coins, actions), -link(coins, integers), -link(comparable_integers_subsort, timeStep), -link(comparable_integers_subsort, coins), -link(comparable_integers_subsort, comparable_integers_subsort), -link(comparable_integers_subsort, flips), -link(comparable_integers_subsort, singleton_tails_sides___), -link(comparable_integers_subsort, universe), -link(comparable_integers_subsort, booleans), -link(comparable_integers_subsort, sides), -link(comparable_integers_subsort, singleton_heads_sides___), -link(comparable_integers_subsort, hides), -link(comparable_integers_subsort, actions), -link(comparable_integers_subsort, integers), -link(flips, timeStep), -link(flips, coins), -link(flips, comparable_integers_subsort), -link(flips, flips), -link(flips, singleton_tails_sides___), -link(flips, universe), -link(flips, booleans), -link(flips, sides), -link(flips, singleton_heads_sides___), -link(flips, hides), -link(flips, integers), -link(singleton_tails_sides___, timeStep), -link(singleton_tails_sides___, coins), -link(singleton_tails_sides___, comparable_integers_subsort), -link(singleton_tails_sides___, flips), -link(singleton_tails_sides___, singleton_tails_sides___), -link(singleton_tails_sides___, universe), -link(singleton_tails_sides___, booleans), -link(singleton_tails_sides___, singleton_heads_sides___), -link(singleton_tails_sides___, hides), -link(singleton_tails_sides___, actions), -link(singleton_tails_sides___, integers), -link(universe, timeStep), -link(universe, coins), -link(universe, comparable_integers_subsort), -link(universe, flips), -link(universe, singleton_tails_sides___), -link(universe, universe), -link(universe, booleans), -link(universe, sides), -link(universe, singleton_heads_sides___), -link(universe, hides), -link(universe, actions), -link(universe, integers), -link(booleans, timeStep), -link(booleans, coins), -link(booleans, comparable_integers_subsort), -link(booleans, flips), -link(booleans, singleton_tails_sides___), -link(booleans, universe), -link(booleans, booleans), -link(booleans, sides), -link(booleans, singleton_heads_sides___), -link(booleans, hides), -link(booleans, actions), -link(booleans, integers), -link(sides, timeStep), -link(sides, coins), -link(sides, comparable_integers_subsort), -link(sides, flips), -link(sides, singleton_tails_sides___), -link(sides, booleans), -link(sides, sides), -link(sides, singleton_heads_sides___), -link(sides, hides), -link(sides, actions), -link(sides, integers), -link(singleton_heads_sides___, timeStep), -link(singleton_heads_sides___, coins), -link(singleton_heads_sides___, comparable_integers_subsort), -link(singleton_heads_sides___, flips), -link(singleton_heads_sides___, singleton_tails_sides___), -link(singleton_heads_sides___, universe), -link(singleton_heads_sides___, booleans), -link(singleton_heads_sides___, singleton_heads_sides___), -link(singleton_heads_sides___, hides), -link(singleton_heads_sides___, actions), -link(singleton_heads_sides___, integers), -link(hides, timeStep), -link(hides, coins), -link(hides, comparable_integers_subsort), -link(hides, flips), -link(hides, singleton_tails_sides___), -link(hides, universe), -link(hides, booleans), -link(hides, sides), -link(hides, singleton_heads_sides___), -link(hides, hides), -link(hides, integers), -link(actions, timeStep), -link(actions, coins), -link(actions, comparable_integers_subsort), -link(actions, flips), -link(actions, singleton_tails_sides___), -link(actions, booleans), -link(actions, sides), -link(actions, singleton_heads_sides___), -link(actions, hides), -link(actions, actions), -link(actions, integers), -link(integers, timeStep), -link(integers, coins), -link(integers, comparable_integers_subsort), -link(integers, flips), -link(integers, singleton_tails_sides___), -link(integers, booleans), -link(integers, sides), -link(integers, singleton_heads_sides___), -link(integers, hides), -link(integers, actions), -link(integers, integers)
,has_parent(sides), has_parent(singleton_heads_sides___), has_parent(singleton_tails_sides___), has_parent(actions), has_parent(flips), has_parent(hides), has_parent(integers), has_parent(coins), -has_parent(timeStep), -has_parent(comparable_integers_subsort), -has_parent(universe), -has_parent(booleans)
,source(timeStep), source(coins), source(comparable_integers_subsort), source(flips), source(singleton_tails_sides___), source(booleans), source(singleton_heads_sides___), source(hides), source(integers), -source(universe), -source(sides), -source(actions)
,planning_problem_goal(4), planning_problem_goal(5), -planning_problem_goal(0), -planning_problem_goal(1), -planning_problem_goal(2), -planning_problem_goal(3)
,occurs(flip(dime), 2), occurs(flip(nickel), 3), occurs(flip(dime), 3), occurs(hide(quarter), 3)
,dom_flips_flipped_coin(flip(nickel)), dom_flips_flipped_coin(flip(dime)), dom_flips_flipped_coin(flip(quarter))
,happened(flip(dime), 2)
,observed(showing(dime), heads, 0), observed(showing(nickel), heads, 0), observed(showing(quarter), heads, 0)
,planning_problem_allow_actions(3), planning_problem_allow_actions(4), planning_problem_allow_actions(5)
,subsort(sides, universe), subsort(singleton_heads_sides___, sides), subsort(singleton_tails_sides___, sides), subsort(actions, universe), subsort(flips, actions), subsort(hides, actions), subsort(integers, universe), subsort(coins, universe), subsort(singleton_heads_sides___, universe), subsort(singleton_tails_sides___, universe), subsort(flips, universe), subsort(hides, universe), -subsort(timeStep, timeStep), -subsort(timeStep, coins), -subsort(timeStep, comparable_integers_subsort), -subsort(timeStep, flips), -subsort(timeStep, singleton_tails_sides___), -subsort(timeStep, universe), -subsort(timeStep, booleans), -subsort(timeStep, sides), -subsort(timeStep, singleton_heads_sides___), -subsort(timeStep, hides), -subsort(timeStep, actions), -subsort(timeStep, integers), -subsort(coins, timeStep), -subsort(coins, coins), -subsort(coins, comparable_integers_subsort), -subsort(coins, flips), -subsort(coins, singleton_tails_sides___), -subsort(coins, booleans), -subsort(coins, sides), -subsort(coins, singleton_heads_sides___), -subsort(coins, hides), -subsort(coins, actions), -subsort(coins, integers), -subsort(comparable_integers_subsort, timeStep), -subsort(comparable_integers_subsort, coins), -subsort(comparable_integers_subsort, comparable_integers_subsort), -subsort(comparable_integers_subsort, flips), -subsort(comparable_integers_subsort, singleton_tails_sides___), -subsort(comparable_integers_subsort, universe), -subsort(comparable_integers_subsort, booleans), -subsort(comparable_integers_subsort, sides), -subsort(comparable_integers_subsort, singleton_heads_sides___), -subsort(comparable_integers_subsort, hides), -subsort(comparable_integers_subsort, actions), -subsort(comparable_integers_subsort, integers), -subsort(flips, timeStep), -subsort(flips, coins), -subsort(flips, comparable_integers_subsort), -subsort(flips, flips), -subsort(flips, singleton_tails_sides___), -subsort(flips, booleans), -subsort(flips, sides), -subsort(flips, singleton_heads_sides___), -subsort(flips, hides), -subsort(flips, integers), -subsort(singleton_tails_sides___, timeStep), -subsort(singleton_tails_sides___, coins), -subsort(singleton_tails_sides___, comparable_integers_subsort), -subsort(singleton_tails_sides___, flips), -subsort(singleton_tails_sides___, singleton_tails_sides___), -subsort(singleton_tails_sides___, booleans), -subsort(singleton_tails_sides___, singleton_heads_sides___), -subsort(singleton_tails_sides___, hides), -subsort(singleton_tails_sides___, actions), -subsort(singleton_tails_sides___, integers), -subsort(universe, timeStep), -subsort(universe, coins), -subsort(universe, comparable_integers_subsort), -subsort(universe, flips), -subsort(universe, singleton_tails_sides___), -subsort(universe, universe), -subsort(universe, booleans), -subsort(universe, sides), -subsort(universe, singleton_heads_sides___), -subsort(universe, hides), -subsort(universe, actions), -subsort(universe, integers), -subsort(booleans, timeStep), -subsort(booleans, coins), -subsort(booleans, comparable_integers_subsort), -subsort(booleans, flips), -subsort(booleans, singleton_tails_sides___), -subsort(booleans, universe), -subsort(booleans, booleans), -subsort(booleans, sides), -subsort(booleans, singleton_heads_sides___), -subsort(booleans, hides), -subsort(booleans, actions), -subsort(booleans, integers), -subsort(sides, timeStep), -subsort(sides, coins), -subsort(sides, comparable_integers_subsort), -subsort(sides, flips), -subsort(sides, singleton_tails_sides___), -subsort(sides, booleans), -subsort(sides, sides), -subsort(sides, singleton_heads_sides___), -subsort(sides, hides), -subsort(sides, actions), -subsort(sides, integers), -subsort(singleton_heads_sides___, timeStep), -subsort(singleton_heads_sides___, coins), -subsort(singleton_heads_sides___, comparable_integers_subsort), -subsort(singleton_heads_sides___, flips), -subsort(singleton_heads_sides___, singleton_tails_sides___), -subsort(singleton_heads_sides___, booleans), -subsort(singleton_heads_sides___, singleton_heads_sides___), -subsort(singleton_heads_sides___, hides), -subsort(singleton_heads_sides___, actions), -subsort(singleton_heads_sides___, integers), -subsort(hides, timeStep), -subsort(hides, coins), -subsort(hides, comparable_integers_subsort), -subsort(hides, flips), -subsort(hides, singleton_tails_sides___), -subsort(hides, booleans), -subsort(hides, sides), -subsort(hides, singleton_heads_sides___), -subsort(hides, hides), -subsort(hides, integers), -subsort(actions, timeStep), -subsort(actions, coins), -subsort(actions, comparable_integers_subsort), -subsort(actions, flips), -subsort(actions, singleton_tails_sides___), -subsort(actions, booleans), -subsort(actions, sides), -subsort(actions, singleton_heads_sides___), -subsort(actions, hides), -subsort(actions, actions), -subsort(actions, integers), -subsort(integers, timeStep), -subsort(integers, coins), -subsort(integers, comparable_integers_subsort), -subsort(integers, flips), -subsort(integers, singleton_tails_sides___), -subsort(integers, booleans), -subsort(integers, sides), -subsort(integers, singleton_heads_sides___), -subsort(integers, hides), -subsort(integers, actions), -subsort(integers, integers)
,flips_flipped_coin(flip(nickel), nickel), flips_flipped_coin(flip(dime), dime), flips_flipped_coin(flip(quarter), quarter)
,dom_showing(dime, 0), dom_showing(nickel, 0), dom_showing(quarter, 0), dom_showing(dime, 1), dom_showing(nickel, 1), dom_showing(quarter, 1), dom_showing(dime, 2), dom_showing(nickel, 2), dom_showing(quarter, 2), dom_showing(dime, 3), dom_showing(nickel, 3), dom_showing(quarter, 3), dom_showing(dime, 4), dom_showing(nickel, 4), dom_showing(dime, 5), dom_showing(nickel, 5), -dom_showing(quarter, 4), -dom_showing(quarter, 5)
,has_child(universe), has_child(sides), has_child(actions), -has_child(timeStep), -has_child(coins), -has_child(comparable_integers_subsort), -has_child(flips), -has_child(singleton_tails_sides___), -has_child(booleans), -has_child(singleton_heads_sides___), -has_child(hides), -has_child(integers)
,is_a(heads, sides), is_a(tails, sides), is_a(nickel, coins), is_a(dime, coins), is_a(quarter, coins), is_a(flip(nickel), flips), is_a(flip(dime), flips), is_a(flip(quarter), flips), is_a(hide(dime), hides), is_a(hide(nickel), hides), is_a(hide(quarter), hides), -is_a(hide(dime), timeStep), -is_a(nickel, timeStep), -is_a(flip(nickel), timeStep), -is_a(false, timeStep), -is_a(hide(nickel), timeStep), -is_a(dime, timeStep), -is_a(tails, timeStep), -is_a(true, timeStep), -is_a(flip(dime), timeStep), -is_a(heads, timeStep), -is_a(hide(quarter), timeStep), -is_a(quarter, timeStep), -is_a(flip(quarter), timeStep), -is_a(hide(dime), coins), -is_a(flip(nickel), coins), -is_a(false, coins), -is_a(hide(nickel), coins), -is_a(tails, coins), -is_a(true, coins), -is_a(flip(dime), coins), -is_a(heads, coins), -is_a(hide(quarter), coins), -is_a(flip(quarter), coins), -is_a(hide(dime), comparable_integers_subsort), -is_a(nickel, comparable_integers_subsort), -is_a(flip(nickel), comparable_integers_subsort), -is_a(false, comparable_integers_subsort), -is_a(hide(nickel), comparable_integers_subsort), -is_a(dime, comparable_integers_subsort), -is_a(tails, comparable_integers_subsort), -is_a(true, comparable_integers_subsort), -is_a(flip(dime), comparable_integers_subsort), -is_a(heads, comparable_integers_subsort), -is_a(hide(quarter), comparable_integers_subsort), -is_a(quarter, comparable_integers_subsort), -is_a(flip(quarter), comparable_integers_subsort), -is_a(hide(dime), flips), -is_a(nickel, flips), -is_a(false, flips), -is_a(hide(nickel), flips), -is_a(dime, flips), -is_a(tails, flips), -is_a(true, flips), -is_a(heads, flips), -is_a(hide(quarter), flips), -is_a(quarter, flips), -is_a(hide(dime), singleton_tails_sides___), -is_a(nickel, singleton_tails_sides___), -is_a(flip(nickel), singleton_tails_sides___), -is_a(false, singleton_tails_sides___), -is_a(hide(nickel), singleton_tails_sides___), -is_a(dime, singleton_tails_sides___), -is_a(tails, singleton_tails_sides___), -is_a(true, singleton_tails_sides___), -is_a(flip(dime), singleton_tails_sides___), -is_a(heads, singleton_tails_sides___), -is_a(hide(quarter), singleton_tails_sides___), -is_a(quarter, singleton_tails_sides___), -is_a(flip(quarter), singleton_tails_sides___), -is_a(hide(dime), universe), -is_a(nickel, universe), -is_a(flip(nickel), universe), -is_a(false, universe), -is_a(hide(nickel), universe), -is_a(dime, universe), -is_a(tails, universe), -is_a(true, universe), -is_a(flip(dime), universe), -is_a(heads, universe), -is_a(hide(quarter), universe), -is_a(quarter, universe), -is_a(flip(quarter), universe), -is_a(hide(dime), booleans), -is_a(nickel, booleans), -is_a(flip(nickel), booleans), -is_a(false, booleans), -is_a(hide(nickel), booleans), -is_a(dime, booleans), -is_a(tails, booleans), -is_a(true, booleans), -is_a(flip(dime), booleans), -is_a(heads, booleans), -is_a(hide(quarter), booleans), -is_a(quarter, booleans), -is_a(flip(quarter), booleans), -is_a(hide(dime), sides), -is_a(nickel, sides), -is_a(flip(nickel), sides), -is_a(false, sides), -is_a(hide(nickel), sides), -is_a(dime, sides), -is_a(true, sides), -is_a(flip(dime), sides), -is_a(hide(quarter), sides), -is_a(quarter, sides), -is_a(flip(quarter), sides), -is_a(hide(dime), singleton_heads_sides___), -is_a(nickel, singleton_heads_sides___), -is_a(flip(nickel), singleton_heads_sides___), -is_a(false, singleton_heads_sides___), -is_a(hide(nickel), singleton_heads_sides___), -is_a(dime, singleton_heads_sides___), -is_a(tails, singleton_heads_sides___), -is_a(true, singleton_heads_sides___), -is_a(flip(dime), singleton_heads_sides___), -is_a(heads, singleton_heads_sides___), -is_a(hide(quarter), singleton_heads_sides___), -is_a(quarter, singleton_heads_sides___), -is_a(flip(quarter), singleton_heads_sides___), -is_a(nickel, hides), -is_a(flip(nickel), hides), -is_a(false, hides), -is_a(dime, hides), -is_a(tails, hides), -is_a(true, hides), -is_a(flip(dime), hides), -is_a(heads, hides), -is_a(quarter, hides), -is_a(flip(quarter), hides), -is_a(hide(dime), actions), -is_a(nickel, actions), -is_a(flip(nickel), actions), -is_a(false, actions), -is_a(hide(nickel), actions), -is_a(dime, actions), -is_a(tails, actions), -is_a(true, actions), -is_a(flip(dime), actions), -is_a(heads, actions), -is_a(hide(quarter), actions), -is_a(quarter, actions), -is_a(flip(quarter), actions), -is_a(hide(dime), integers), -is_a(nickel, integers), -is_a(flip(nickel), integers), -is_a(false, integers), -is_a(hide(nickel), integers), -is_a(dime, integers), -is_a(tails, integers), -is_a(true, integers), -is_a(flip(dime), integers), -is_a(heads, integers), -is_a(hide(quarter), integers), -is_a(quarter, integers), -is_a(flip(quarter), integers)
,showing(dime, heads, 0), showing(nickel, heads, 0), showing(quarter, heads, 0), showing(dime, heads, 1), showing(nickel, heads, 1), showing(quarter, heads, 1), showing(dime, heads, 2), showing(nickel, heads, 2), showing(quarter, heads, 2), showing(nickel, heads, 3), showing(quarter, heads, 3), showing(dime, tails, 3), showing(dime, heads, 4), showing(nickel, tails, 4), showing(dime, heads, 5), showing(nickel, tails, 5), -showing(dime, tails, 0), -showing(nickel, tails, 0), -showing(quarter, tails, 0), -showing(dime, tails, 1), -showing(nickel, tails, 1), -showing(quarter, tails, 1), -showing(dime, tails, 2), -showing(nickel, tails, 2), -showing(quarter, tails, 2), -showing(nickel, tails, 3), -showing(quarter, tails, 3), -showing(dime, tails, 4), -showing(dime, tails, 5), -showing(dime, heads, 3), -showing(nickel, heads, 4), -showing(nickel, heads, 5)
,current_time(3)
}

% Answer Set 7 of 7
{
 instance(heads, sides), instance(tails, sides), instance(nickel, coins), instance(dime, coins), instance(quarter, coins), instance(flip(nickel), flips), instance(flip(dime), flips), instance(flip(quarter), flips), instance(hide(dime), hides), instance(hide(nickel), hides), instance(hide(quarter), hides), instance(heads, universe), instance(tails, universe), instance(nickel, universe), instance(dime, universe), instance(quarter, universe), instance(flip(nickel), actions), instance(flip(dime), actions), instance(flip(quarter), actions), instance(hide(dime), actions), instance(hide(nickel), actions), instance(hide(quarter), actions), instance(flip(nickel), universe), instance(flip(dime), universe), instance(flip(quarter), universe), instance(hide(dime), universe), instance(hide(nickel), universe), instance(hide(quarter), universe), -instance(hide(dime), timeStep), -instance(nickel, timeStep), -instance(flip(nickel), timeStep), -instance(false, timeStep), -instance(hide(nickel), timeStep), -instance(dime, timeStep), -instance(tails, timeStep), -instance(true, timeStep), -instance(flip(dime), timeStep), -instance(heads, timeStep), -instance(hide(quarter), timeStep), -instance(quarter, timeStep), -instance(flip(quarter), timeStep), -instance(hide(dime), coins), -instance(flip(nickel), coins), -instance(false, coins), -instance(hide(nickel), coins), -instance(tails, coins), -instance(true, coins), -instance(flip(dime), coins), -instance(heads, coins), -instance(hide(quarter), coins), -instance(flip(quarter), coins), -instance(hide(dime), comparable_integers_subsort), -instance(nickel, comparable_integers_subsort), -instance(flip(nickel), comparable_integers_subsort), -instance(false, comparable_integers_subsort), -instance(hide(nickel), comparable_integers_subsort), -instance(dime, comparable_integers_subsort), -instance(tails, comparable_integers_subsort), -instance(true, comparable_integers_subsort), -instance(flip(dime), comparable_integers_subsort), -instance(heads, comparable_integers_subsort), -instance(hide(quarter), comparable_integers_subsort), -instance(quarter, comparable_integers_subsort), -instance(flip(quarter), comparable_integers_subsort), -instance(hide(dime), flips), -instance(nickel, flips), -instance(false, flips), -instance(hide(nickel), flips), -instance(dime, flips), -instance(tails, flips), -instance(true, flips), -instance(heads, flips), -instance(hide(quarter), flips), -instance(quarter, flips), -instance(hide(dime), singleton_tails_sides___), -instance(nickel, singleton_tails_sides___), -instance(flip(nickel), singleton_tails_sides___), -instance(false, singleton_tails_sides___), -instance(hide(nickel), singleton_tails_sides___), -instance(dime, singleton_tails_sides___), -instance(tails, singleton_tails_sides___), -instance(true, singleton_tails_sides___), -instance(flip(dime), singleton_tails_sides___), -instance(heads, singleton_tails_sides___), -instance(hide(quarter), singleton_tails_sides___), -instance(quarter, singleton_tails_sides___), -instance(flip(quarter), singleton_tails_sides___), -instance(false, universe), -instance(true, universe), -instance(hide(dime), booleans), -instance(nickel, booleans), -instance(flip(nickel), booleans), -instance(false, booleans), -instance(hide(nickel), booleans), -instance(dime, booleans), -instance(tails, booleans), -instance(true, booleans), -instance(flip(dime), booleans), -instance(heads, booleans), -instance(hide(quarter), booleans), -instance(quarter, booleans), -instance(flip(quarter), booleans), -instance(hide(dime), sides), -instance(nickel, sides), -instance(flip(nickel), sides), -instance(false, sides), -instance(hide(nickel), sides), -instance(dime, sides), -instance(true, sides), -instance(flip(dime), sides), -instance(hide(quarter), sides), -instance(quarter, sides), -instance(flip(quarter), sides), -instance(hide(dime), singleton_heads_sides___), -instance(nickel, singleton_heads_sides___), -instance(flip(nickel), singleton_heads_sides___), -instance(false, singleton_heads_sides___), -instance(hide(nickel), singleton_heads_sides___), -instance(dime, singleton_heads_sides___), -instance(tails, singleton_heads_sides___), -instance(true, singleton_heads_sides___), -instance(flip(dime), singleton_heads_sides___), -instance(heads, singleton_heads_sides___), -instance(hide(quarter), singleton_heads_sides___), -instance(quarter, singleton_heads_sides___), -instance(flip(quarter), singleton_heads_sides___), -instance(nickel, hides), -instance(flip(nickel), hides), -instance(false, hides), -instance(dime, hides), -instance(tails, hides), -instance(true, hides), -instance(flip(dime), hides), -instance(heads, hides), -instance(quarter, hides), -instance(flip(quarter), hides), -instance(nickel, actions), -instance(false, actions), -instance(dime, actions), -instance(tails, actions), -instance(true, actions), -instance(heads, actions), -instance(quarter, actions), -instance(hide(dime), integers), -instance(nickel, integers), -instance(flip(nickel), integers), -instance(false, integers), -instance(hide(nickel), integers), -instance(dime, integers), -instance(tails, integers), -instance(true, integers), -instance(flip(dime), integers), -instance(heads, integers), -instance(hide(quarter), integers), -instance(quarter, integers), -instance(flip(quarter), integers)
,planning_problem_success
,dom_hides_coin_hidden(hide(dime)), dom_hides_coin_hidden(hide(quarter)), dom_hides_coin_hidden(hide(nickel))
,hides_coin_hidden(hide(dime), dime), hides_coin_hidden(hide(quarter), quarter), hides_coin_hidden(hide(nickel), nickel)
,sink(timeStep), sink(comparable_integers_subsort), sink(universe), sink(booleans), -sink(coins), -sink(flips), -sink(singleton_tails_sides___), -sink(sides), -sink(singleton_heads_sides___), -sink(hides), -sink(actions), -sink(integers)
,planning_problem_something_happened(3), planning_problem_something_happened(4), -planning_problem_something_happened(0), -planning_problem_something_happened(1), -planning_problem_something_happened(2), -planning_problem_something_happened(5)
,link(sides, universe), link(singleton_heads_sides___, sides), link(singleton_tails_sides___, sides), link(actions, universe), link(flips, actions), link(hides, actions), link(integers, universe), link(coins, universe), -link(timeStep, timeStep), -link(timeStep, coins), -link(timeStep, comparable_integers_subsort), -link(timeStep, flips), -link(timeStep, singleton_tails_sides___), -link(timeStep, universe), -link(timeStep, booleans), -link(timeStep, sides), -link(timeStep, singleton_heads_sides___), -link(timeStep, hides), -link(timeStep, actions), -link(timeStep, integers), -link(coins, timeStep), -link(coins, coins), -link(coins, comparable_integers_subsort), -link(coins, flips), -link(coins, singleton_tails_sides___), -link(coins, booleans), -link(coins, sides), -link(coins, singleton_heads_sides___), -link(coins, hides), -link(coins, actions), -link(coins, integers), -link(comparable_integers_subsort, timeStep), -link(comparable_integers_subsort, coins), -link(comparable_integers_subsort, comparable_integers_subsort), -link(comparable_integers_subsort, flips), -link(comparable_integers_subsort, singleton_tails_sides___), -link(comparable_integers_subsort, universe), -link(comparable_integers_subsort, booleans), -link(comparable_integers_subsort, sides), -link(comparable_integers_subsort, singleton_heads_sides___), -link(comparable_integers_subsort, hides), -link(comparable_integers_subsort, actions), -link(comparable_integers_subsort, integers), -link(flips, timeStep), -link(flips, coins), -link(flips, comparable_integers_subsort), -link(flips, flips), -link(flips, singleton_tails_sides___), -link(flips, universe), -link(flips, booleans), -link(flips, sides), -link(flips, singleton_heads_sides___), -link(flips, hides), -link(flips, integers), -link(singleton_tails_sides___, timeStep), -link(singleton_tails_sides___, coins), -link(singleton_tails_sides___, comparable_integers_subsort), -link(singleton_tails_sides___, flips), -link(singleton_tails_sides___, singleton_tails_sides___), -link(singleton_tails_sides___, universe), -link(singleton_tails_sides___, booleans), -link(singleton_tails_sides___, singleton_heads_sides___), -link(singleton_tails_sides___, hides), -link(singleton_tails_sides___, actions), -link(singleton_tails_sides___, integers), -link(universe, timeStep), -link(universe, coins), -link(universe, comparable_integers_subsort), -link(universe, flips), -link(universe, singleton_tails_sides___), -link(universe, universe), -link(universe, booleans), -link(universe, sides), -link(universe, singleton_heads_sides___), -link(universe, hides), -link(universe, actions), -link(universe, integers), -link(booleans, timeStep), -link(booleans, coins), -link(booleans, comparable_integers_subsort), -link(booleans, flips), -link(booleans, singleton_tails_sides___), -link(booleans, universe), -link(booleans, booleans), -link(booleans, sides), -link(booleans, singleton_heads_sides___), -link(booleans, hides), -link(booleans, actions), -link(booleans, integers), -link(sides, timeStep), -link(sides, coins), -link(sides, comparable_integers_subsort), -link(sides, flips), -link(sides, singleton_tails_sides___), -link(sides, booleans), -link(sides, sides), -link(sides, singleton_heads_sides___), -link(sides, hides), -link(sides, actions), -link(sides, integers), -link(singleton_heads_sides___, timeStep), -link(singleton_heads_sides___, coins), -link(singleton_heads_sides___, comparable_integers_subsort), -link(singleton_heads_sides___, flips), -link(singleton_heads_sides___, singleton_tails_sides___), -link(singleton_heads_sides___, universe), -link(singleton_heads_sides___, booleans), -link(singleton_heads_sides___, singleton_heads_sides___), -link(singleton_heads_sides___, hides), -link(singleton_heads_sides___, actions), -link(singleton_heads_sides___, integers), -link(hides, timeStep), -link(hides, coins), -link(hides, comparable_integers_subsort), -link(hides, flips), -link(hides, singleton_tails_sides___), -link(hides, universe), -link(hides, booleans), -link(hides, sides), -link(hides, singleton_heads_sides___), -link(hides, hides), -link(hides, integers), -link(actions, timeStep), -link(actions, coins), -link(actions, comparable_integers_subsort), -link(actions, flips), -link(actions, singleton_tails_sides___), -link(actions, booleans), -link(actions, sides), -link(actions, singleton_heads_sides___), -link(actions, hides), -link(actions, actions), -link(actions, integers), -link(integers, timeStep), -link(integers, coins), -link(integers, comparable_integers_subsort), -link(integers, flips), -link(integers, singleton_tails_sides___), -link(integers, booleans), -link(integers, sides), -link(integers, singleton_heads_sides___), -link(integers, hides), -link(integers, actions), -link(integers, integers)
,has_parent(sides), has_parent(singleton_heads_sides___), has_parent(singleton_tails_sides___), has_parent(actions), has_parent(flips), has_parent(hides), has_parent(integers), has_parent(coins), -has_parent(timeStep), -has_parent(comparable_integers_subsort), -has_parent(universe), -has_parent(booleans)
,source(timeStep), source(coins), source(comparable_integers_subsort), source(flips), source(singleton_tails_sides___), source(booleans), source(singleton_heads_sides___), source(hides), source(integers), -source(universe), -source(sides), -source(actions)
,planning_problem_goal(5), -planning_problem_goal(0), -planning_problem_goal(1), -planning_problem_goal(2), -planning_problem_goal(3), -planning_problem_goal(4)
,occurs(flip(dime), 2), occurs(flip(dime), 3), occurs(hide(quarter), 3), occurs(flip(nickel), 4)
,dom_flips_flipped_coin(flip(nickel)), dom_flips_flipped_coin(flip(dime)), dom_flips_flipped_coin(flip(quarter))
,happened(flip(dime), 2)
,observed(showing(dime), heads, 0), observed(showing(nickel), heads, 0), observed(showing(quarter), heads, 0)
,planning_problem_allow_actions(3), planning_problem_allow_actions(4), planning_problem_allow_actions(5)
,subsort(sides, universe), subsort(singleton_heads_sides___, sides), subsort(singleton_tails_sides___, sides), subsort(actions, universe), subsort(flips, actions), subsort(hides, actions), subsort(integers, universe), subsort(coins, universe), subsort(singleton_heads_sides___, universe), subsort(singleton_tails_sides___, universe), subsort(flips, universe), subsort(hides, universe), -subsort(timeStep, timeStep), -subsort(timeStep, coins), -subsort(timeStep, comparable_integers_subsort), -subsort(timeStep, flips), -subsort(timeStep, singleton_tails_sides___), -subsort(timeStep, universe), -subsort(timeStep, booleans), -subsort(timeStep, sides), -subsort(timeStep, singleton_heads_sides___), -subsort(timeStep, hides), -subsort(timeStep, actions), -subsort(timeStep, integers), -subsort(coins, timeStep), -subsort(coins, coins), -subsort(coins, comparable_integers_subsort), -subsort(coins, flips), -subsort(coins, singleton_tails_sides___), -subsort(coins, booleans), -subsort(coins, sides), -subsort(coins, singleton_heads_sides___), -subsort(coins, hides), -subsort(coins, actions), -subsort(coins, integers), -subsort(comparable_integers_subsort, timeStep), -subsort(comparable_integers_subsort, coins), -subsort(comparable_integers_subsort, comparable_integers_subsort), -subsort(comparable_integers_subsort, flips), -subsort(comparable_integers_subsort, singleton_tails_sides___), -subsort(comparable_integers_subsort, universe), -subsort(comparable_integers_subsort, booleans), -subsort(comparable_integers_subsort, sides), -subsort(comparable_integers_subsort, singleton_heads_sides___), -subsort(comparable_integers_subsort, hides), -subsort(comparable_integers_subsort, actions), -subsort(comparable_integers_subsort, integers), -subsort(flips, timeStep), -subsort(flips, coins), -subsort(flips, comparable_integers_subsort), -subsort(flips, flips), -subsort(flips, singleton_tails_sides___), -subsort(flips, booleans), -subsort(flips, sides), -subsort(flips, singleton_heads_sides___), -subsort(flips, hides), -subsort(flips, integers), -subsort(singleton_tails_sides___, timeStep), -subsort(singleton_tails_sides___, coins), -subsort(singleton_tails_sides___, comparable_integers_subsort), -subsort(singleton_tails_sides___, flips), -subsort(singleton_tails_sides___, singleton_tails_sides___), -subsort(singleton_tails_sides___, booleans), -subsort(singleton_tails_sides___, singleton_heads_sides___), -subsort(singleton_tails_sides___, hides), -subsort(singleton_tails_sides___, actions), -subsort(singleton_tails_sides___, integers), -subsort(universe, timeStep), -subsort(universe, coins), -subsort(universe, comparable_integers_subsort), -subsort(universe, flips), -subsort(universe, singleton_tails_sides___), -subsort(universe, universe), -subsort(universe, booleans), -subsort(universe, sides), -subsort(universe, singleton_heads_sides___), -subsort(universe, hides), -subsort(universe, actions), -subsort(universe, integers), -subsort(booleans, timeStep), -subsort(booleans, coins), -subsort(booleans, comparable_integers_subsort), -subsort(booleans, flips), -subsort(booleans, singleton_tails_sides___), -subsort(booleans, universe), -subsort(booleans, booleans), -subsort(booleans, sides), -subsort(booleans, singleton_heads_sides___), -subsort(booleans, hides), -subsort(booleans, actions), -subsort(booleans, integers), -subsort(sides, timeStep), -subsort(sides, coins), -subsort(sides, comparable_integers_subsort), -subsort(sides, flips), -subsort(sides, singleton_tails_sides___), -subsort(sides, booleans), -subsort(sides, sides), -subsort(sides, singleton_heads_sides___), -subsort(sides, hides), -subsort(sides, actions), -subsort(sides, integers), -subsort(singleton_heads_sides___, timeStep), -subsort(singleton_heads_sides___, coins), -subsort(singleton_heads_sides___, comparable_integers_subsort), -subsort(singleton_heads_sides___, flips), -subsort(singleton_heads_sides___, singleton_tails_sides___), -subsort(singleton_heads_sides___, booleans), -subsort(singleton_heads_sides___, singleton_heads_sides___), -subsort(singleton_heads_sides___, hides), -subsort(singleton_heads_sides___, actions), -subsort(singleton_heads_sides___, integers), -subsort(hides, timeStep), -subsort(hides, coins), -subsort(hides, comparable_integers_subsort), -subsort(hides, flips), -subsort(hides, singleton_tails_sides___), -subsort(hides, booleans), -subsort(hides, sides), -subsort(hides, singleton_heads_sides___), -subsort(hides, hides), -subsort(hides, integers), -subsort(actions, timeStep), -subsort(actions, coins), -subsort(actions, comparable_integers_subsort), -subsort(actions, flips), -subsort(actions, singleton_tails_sides___), -subsort(actions, booleans), -subsort(actions, sides), -subsort(actions, singleton_heads_sides___), -subsort(actions, hides), -subsort(actions, actions), -subsort(actions, integers), -subsort(integers, timeStep), -subsort(integers, coins), -subsort(integers, comparable_integers_subsort), -subsort(integers, flips), -subsort(integers, singleton_tails_sides___), -subsort(integers, booleans), -subsort(integers, sides), -subsort(integers, singleton_heads_sides___), -subsort(integers, hides), -subsort(integers, actions), -subsort(integers, integers)
,flips_flipped_coin(flip(nickel), nickel), flips_flipped_coin(flip(dime), dime), flips_flipped_coin(flip(quarter), quarter)
,dom_showing(dime, 0), dom_showing(nickel, 0), dom_showing(quarter, 0), dom_showing(dime, 1), dom_showing(nickel, 1), dom_showing(quarter, 1), dom_showing(dime, 2), dom_showing(nickel, 2), dom_showing(quarter, 2), dom_showing(dime, 3), dom_showing(nickel, 3), dom_showing(quarter, 3), dom_showing(dime, 4), dom_showing(nickel, 4), dom_showing(dime, 5), dom_showing(nickel, 5), -dom_showing(quarter, 4), -dom_showing(quarter, 5)
,has_child(universe), has_child(sides), has_child(actions), -has_child(timeStep), -has_child(coins), -has_child(comparable_integers_subsort), -has_child(flips), -has_child(singleton_tails_sides___), -has_child(booleans), -has_child(singleton_heads_sides___), -has_child(hides), -has_child(integers)
,is_a(heads, sides), is_a(tails, sides), is_a(nickel, coins), is_a(dime, coins), is_a(quarter, coins), is_a(flip(nickel), flips), is_a(flip(dime), flips), is_a(flip(quarter), flips), is_a(hide(dime), hides), is_a(hide(nickel), hides), is_a(hide(quarter), hides), -is_a(hide(dime), timeStep), -is_a(nickel, timeStep), -is_a(flip(nickel), timeStep), -is_a(false, timeStep), -is_a(hide(nickel), timeStep), -is_a(dime, timeStep), -is_a(tails, timeStep), -is_a(true, timeStep), -is_a(flip(dime), timeStep), -is_a(heads, timeStep), -is_a(hide(quarter), timeStep), -is_a(quarter, timeStep), -is_a(flip(quarter), timeStep), -is_a(hide(dime), coins), -is_a(flip(nickel), coins), -is_a(false, coins), -is_a(hide(nickel), coins), -is_a(tails, coins), -is_a(true, coins), -is_a(flip(dime), coins), -is_a(heads, coins), -is_a(hide(quarter), coins), -is_a(flip(quarter), coins), -is_a(hide(dime), comparable_integers_subsort), -is_a(nickel, comparable_integers_subsort), -is_a(flip(nickel), comparable_integers_subsort), -is_a(false, comparable_integers_subsort), -is_a(hide(nickel), comparable_integers_subsort), -is_a(dime, comparable_integers_subsort), -is_a(tails, comparable_integers_subsort), -is_a(true, comparable_integers_subsort), -is_a(flip(dime), comparable_integers_subsort), -is_a(heads, comparable_integers_subsort), -is_a(hide(quarter), comparable_integers_subsort), -is_a(quarter, comparable_integers_subsort), -is_a(flip(quarter), comparable_integers_subsort), -is_a(hide(dime), flips), -is_a(nickel, flips), -is_a(false, flips), -is_a(hide(nickel), flips), -is_a(dime, flips), -is_a(tails, flips), -is_a(true, flips), -is_a(heads, flips), -is_a(hide(quarter), flips), -is_a(quarter, flips), -is_a(hide(dime), singleton_tails_sides___), -is_a(nickel, singleton_tails_sides___), -is_a(flip(nickel), singleton_tails_sides___), -is_a(false, singleton_tails_sides___), -is_a(hide(nickel), singleton_tails_sides___), -is_a(dime, singleton_tails_sides___), -is_a(tails, singleton_tails_sides___), -is_a(true, singleton_tails_sides___), -is_a(flip(dime), singleton_tails_sides___), -is_a(heads, singleton_tails_sides___), -is_a(hide(quarter), singleton_tails_sides___), -is_a(quarter, singleton_tails_sides___), -is_a(flip(quarter), singleton_tails_sides___), -is_a(hide(dime), universe), -is_a(nickel, universe), -is_a(flip(nickel), universe), -is_a(false, universe), -is_a(hide(nickel), universe), -is_a(dime, universe), -is_a(tails, universe), -is_a(true, universe), -is_a(flip(dime), universe), -is_a(heads, universe), -is_a(hide(quarter), universe), -is_a(quarter, universe), -is_a(flip(quarter), universe), -is_a(hide(dime), booleans), -is_a(nickel, booleans), -is_a(flip(nickel), booleans), -is_a(false, booleans), -is_a(hide(nickel), booleans), -is_a(dime, booleans), -is_a(tails, booleans), -is_a(true, booleans), -is_a(flip(dime), booleans), -is_a(heads, booleans), -is_a(hide(quarter), booleans), -is_a(quarter, booleans), -is_a(flip(quarter), booleans), -is_a(hide(dime), sides), -is_a(nickel, sides), -is_a(flip(nickel), sides), -is_a(false, sides), -is_a(hide(nickel), sides), -is_a(dime, sides), -is_a(true, sides), -is_a(flip(dime), sides), -is_a(hide(quarter), sides), -is_a(quarter, sides), -is_a(flip(quarter), sides), -is_a(hide(dime), singleton_heads_sides___), -is_a(nickel, singleton_heads_sides___), -is_a(flip(nickel), singleton_heads_sides___), -is_a(false, singleton_heads_sides___), -is_a(hide(nickel), singleton_heads_sides___), -is_a(dime, singleton_heads_sides___), -is_a(tails, singleton_heads_sides___), -is_a(true, singleton_heads_sides___), -is_a(flip(dime), singleton_heads_sides___), -is_a(heads, singleton_heads_sides___), -is_a(hide(quarter), singleton_heads_sides___), -is_a(quarter, singleton_heads_sides___), -is_a(flip(quarter), singleton_heads_sides___), -is_a(nickel, hides), -is_a(flip(nickel), hides), -is_a(false, hides), -is_a(dime, hides), -is_a(tails, hides), -is_a(true, hides), -is_a(flip(dime), hides), -is_a(heads, hides), -is_a(quarter, hides), -is_a(flip(quarter), hides), -is_a(hide(dime), actions), -is_a(nickel, actions), -is_a(flip(nickel), actions), -is_a(false, actions), -is_a(hide(nickel), actions), -is_a(dime, actions), -is_a(tails, actions), -is_a(true, actions), -is_a(flip(dime), actions), -is_a(heads, actions), -is_a(hide(quarter), actions), -is_a(quarter, actions), -is_a(flip(quarter), actions), -is_a(hide(dime), integers), -is_a(nickel, integers), -is_a(flip(nickel), integers), -is_a(false, integers), -is_a(hide(nickel), integers), -is_a(dime, integers), -is_a(tails, integers), -is_a(true, integers), -is_a(flip(dime), integers), -is_a(heads, integers), -is_a(hide(quarter), integers), -is_a(quarter, integers), -is_a(flip(quarter), integers)
,showing(dime, heads, 0), showing(nickel, heads, 0), showing(quarter, heads, 0), showing(dime, heads, 1), showing(nickel, heads, 1), showing(quarter, heads, 1), showing(dime, heads, 2), showing(nickel, heads, 2), showing(quarter, heads, 2), showing(nickel, heads, 3), showing(quarter, heads, 3), showing(dime, tails, 3), showing(dime, heads, 4), showing(nickel, heads, 4), showing(dime, heads, 5), showing(nickel, tails, 5), -showing(dime, tails, 0), -showing(nickel, tails, 0), -showing(quarter, tails, 0), -showing(dime, tails, 1), -showing(nickel, tails, 1), -showing(quarter, tails, 1), -showing(dime, tails, 2), -showing(nickel, tails, 2), -showing(quarter, tails, 2), -showing(nickel, tails, 3), -showing(quarter, tails, 3), -showing(dime, tails, 4), -showing(nickel, tails, 4), -showing(dime, tails, 5), -showing(dime, heads, 3), -showing(nickel, heads, 5)
,current_time(3)
}

